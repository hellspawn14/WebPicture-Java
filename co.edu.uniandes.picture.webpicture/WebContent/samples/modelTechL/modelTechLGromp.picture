
import "/model/TechnologyLayerArch.ecore"
as MM
Graphical representation TechnologyLayerA {
	reference package technologyLayer
	root ArchimateModel
	Palette for ArchimateModel {
		Tool group ElementsPalette {
			description "Technology Elements"
			Tool group StructuralConcepts {
				description "StructuralConcepts"
				Creation button for class Node {
					name "Node"
					description "Node" icon "/imagenes/NodeIcon.gif"
				}
				Creation button for class Device {
					name "Device"
					description "Device" icon "/imagenes/DeviceIcon.gif"
				}
				Creation button for class SystemSoftware {
					name "SystemSoftware"
					description "SystemSoftware" icon "/imagenes/SystemSoftwareIcon.gif"
				}
				Creation button for class InfrastructureInterface {
					name "InfrastructureInterface"
					description "InfrastructureInterface" icon
					"/imagenes/InfrastructureInterfaceIcon.gif"
				}
				Creation button for class Network {
					name "Network"
					description "Network" icon "/imagenes/NetworkIcon.gif"
				}
				Creation button for class CommunicationPath {
					name "CommunicationPath"
					description "CommunicationPath" icon "/imagenes/CommunicationPathIcon.gif"
				}
			}
			Tool group BehavioralElements {
				description "Behavioral Elements"
				Creation button for class InfrastructureService {
					name "InfrastructureService"
					description "InfrastructureService" icon
					"/imagenes/InfrastructureServiceIcon.gif"
				}
			}
			Tool group InformationalConcepts {
				description "Informational Concepts"
				Creation button for class Artifact {
					name "Artifact"
					description "Artifact" icon "/imagenes/ArtifactIcon.gif"
				}
			}
		}
	}
	Style definition {
		Color black ( 0 ,  0 ,  0 )
		Color white ( 255 ,  255 ,  255 )
		Color yellow ( 255 ,  255 ,  0 )
		Color blue ( 0 ,  0 ,  255 )
		Color red ( 255 ,  0 ,  0 )
		Color green ( 0 ,  255 ,  0 )
		Line style BorderBlack1 {
			width 1
			type dot
			color black
		}
		Line style BorderBlack3 {
			width 3
			type solid
			color black
		}
		Line style BorderBlack4 {
			width 4
			type solid
			color black
		}
		Line style BorderRed2 {
			width 2
			type solid
			color red
		}
		Rounded rectRounded10 {
			radiox 10
			radioy 10
		}
		Ellipse ellip {
			proportion ( 35 ,  25 )
		}
		Regular polygon deca {
			vertex quantity 8
			start angle 90
		}
		Color Withe ( 255 ,  255 ,  255 )
		Color activeElementsColor ( 117 ,  235 ,  235 )
		Color techLayer ( 116 ,  232 ,  116 )
		Color behaviorElementsColor ( 241 ,  241 ,  181 )
		Color greenTestXX ( 44 ,  255 ,  45 )
		Line style BorderBlackDot {
			width 1
			type dot
			color black
		}
		Line style BorderBlack2 {
			width 2
			type solid
			color black
		}
	}
	Graphical
	definition {
		
		/*NODES------------------------------------------------------------------------------------------- */		
		
		Node_element NodeDef
		for class Node {
			label elementName
			label icon false
			label placement internal
			size ( 90 ,  65 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 
				icon path "NodeIcon.svg" 
				icon size ( 16 ,  16 )
				icon position Point ( 70 ,  2 )
			}
			phantom false
		}
		
		Node_element DeviceDef
		for class Device {
			label elementName
			label icon false
			label placement internal
			size ( 90 ,  65 )			
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 
				icon path "deviceIIcon.svg" 
				icon size ( 16 ,  16 )
				icon position Point ( 70 ,  2 )
			}
			phantom false
		}
		
		Node_element SystemSoftwareDef
		for class SystemSoftware {
			label elementName
			label icon false
			label placement internal
				size ( 90 ,  65 )		
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 
				icon path "SystemSWIcon.svg" 
				icon size ( 16 ,  16 )
				icon position Point ( 70 ,  2 )
			}
			phantom false
		}
		
		
		Node_element InfrastructureInterfaceDef
		for class InfrastructureInterface {
			label elementName
			label icon false
			label placement internal
				size ( 90 ,  65 )			
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 
				icon path "interfaceIconSmall.svg" 
				icon size ( 16 ,  16 )
				icon position Point (70 ,  2 )
			}
			phantom true
		}
		
			Node_element NetworkDef
		for class Network {
			label elementName
			label icon false
			label placement internal
			size ( 90 ,  65 )		
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 
				icon path "NetworkIcon.svg" 
				icon size ( 16 ,  16 )
				icon position Point ( 70 ,  2 )
			}
			phantom true
		}
		
		Node_element CommunicationPathDef
		for class CommunicationPath {
			label elementName
			label icon false
			label placement internal
			size ( 70 ,  50 )			
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 
				icon path "ComunicationPath.svg" 
				icon size ( 32 ,  32 )
				icon position Point ( 20 ,  15 )
			}
			phantom true
		}
		
		Node_element InfrastructureServiceDef
		for class InfrastructureService {
			label elementName
			label icon false
			label placement internal
				size ( 90 ,  65 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2
			}
			phantom false
			
		}		
		Node_element ArtifactDef
		for class Artifact {
			label elementName
			label icon false
			label placement internal
				size ( 90 ,  65 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2
				icon path "ArtifactIcon.svg" 
				icon size ( 16 ,  16 )
				icon position Point ( 70 ,  2 )
			}
			phantom false
		}
		
		/*NODES-------------------------------------------------------------------------------------------END*/
		
		Internal_node composedOfArtifactArtifactDef
		for reference Artifact.composedOfArtifactArtifact {
			layout default
			layout
		}
		/* Node_line composesArtifactArtifactDef
		for reference Artifact.composesArtifactArtifact {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}*/
		Node_line aggregatesArtifactArtifactDef
		for reference Artifact.aggregatesArtifactArtifact {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByArtifactArtifactDef
		for reference Artifact.aggregatedByArtifactArtifact {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessedByInfrastructureServiceArtifactDef
		for reference Artifact.accessedByInfrastructureServiceArtifact {
			label "accessedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToNodeArtifactDef
		for reference Artifact.assignedToNodeArtifact {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		
		Internal_node composedOfInfrastructureServiceInfrastructureServiceDef
		for reference
		InfrastructureService.composedOfInfrastructureServiceInfrastructureService {
			layout default
			layout
		}
		/*/ Node_line composesInfrastructureServiceInfrastructureServiceDef
		for reference
		InfrastructureService.composesInfrastructureServiceInfrastructureService {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}*/
		Node_line aggregatesInfrastructureServiceInfrastructureServiceDef
		for reference
		InfrastructureService.aggregatesInfrastructureServiceInfrastructureService {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByInfrastructureServiceInfrastructureServiceDef
		for reference
		InfrastructureService.aggregatedByInfrastructureServiceInfrastructureService {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessesArtifactInfrastructureServiceDef
		for reference InfrastructureService.accessesArtifactInfrastructureService {
			label "accesses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToInfrastructureInterfaceInfrastructureServiceDef
		for reference
		InfrastructureService.assignedToInfrastructureInterfaceInfrastructureService {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line realizedByNodeInfrastructureServiceDef
		for reference InfrastructureService.realizedByNodeInfrastructureService {
			label "realizedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		
		Internal_node composedOfInfrastructureInterfaceInfrastructureInterfaceDef
		for reference
		InfrastructureInterface.composedOfInfrastructureInterfaceInfrastructureInterface {
			layout default
			layout
		}
		/* Node_line composesInfrastructureInterfaceInfrastructureInterfaceDef
		for reference
		InfrastructureInterface.composesInfrastructureInterfaceInfrastructureInterface {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}*/
		Node_line aggregatesInfrastructureInterfaceInfrastructureInterfaceDef
		for reference
		InfrastructureInterface.aggregatesInfrastructureInterfaceInfrastructureInterface {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByInfrastructureInterfaceInfrastructureInterfaceDef
		for reference
		InfrastructureInterface.aggregatedByInfrastructureInterfaceInfrastructureInterface {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		/* Node_line composesNodeInfrastructureInterfaceDef
		for reference InfrastructureInterface.composesNodeInfrastructureInterface {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}*/
		Node_line assignedToInfrastructureServiceInfrastructureInterfaceDef
		for reference
		InfrastructureInterface.assignedToInfrastructureServiceInfrastructureInterface {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usedByNodeInfrastructureInterfaceDef
		for reference InfrastructureInterface.usedByNodeInfrastructureInterface {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		
		Internal_node composedOfNodeNodeDef
		for reference Node.composedOfNodeNode {
			layout default
			layout
		}
		/* Node_line composesNodeNodeDef
		for reference Node.composesNodeNode {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}*/
		Node_line aggregatesNodeNodeDef
		for reference Node.aggregatesNodeNode {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByNodeNodeDef
		for reference Node.aggregatedByNodeNode {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line associatedWithCommunicationPathNodeDef
		for reference Node.associatedWithCommunicationPathNode {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToArtifactNodeDef
		for reference Node.assignedToArtifactNode {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Internal_node composedOfInfrastructureInterfaceNodeDef
		for reference Node.composedOfInfrastructureInterfaceNode {
			layout default
			layout
		}
		Node_line usesInfrastructureInterfaceNodeDef
		for reference Node.usesInfrastructureInterfaceNode {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usesInfrastructureServiceNodeDef
		for reference Node.usesInfrastructureServiceNode {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		
		Internal_node composedOfSystemSoftwareSystemSoftwareDef
		for reference SystemSoftware.composedOfSystemSoftwareSystemSoftware {
			layout default
			layout
		}
		/* Node_line composesSystemSoftwareSystemSoftwareDef
		for reference SystemSoftware.composesSystemSoftwareSystemSoftware {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}*/
		Node_line aggregatesSystemSoftwareSystemSoftwareDef
		for reference SystemSoftware.aggregatesSystemSoftwareSystemSoftware {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedBySystemSoftwareSystemSoftwareDef
		for reference SystemSoftware.aggregatedBySystemSoftwareSystemSoftware {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToDeviceSystemSoftwareDef
		for reference SystemSoftware.assignedToDeviceSystemSoftware {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		
		Internal_node composedOfDeviceDeviceDef
		for reference Device.composedOfDeviceDevice {
			layout default
			layout
		}
		/* Node_line composesDeviceDeviceDef
		for reference Device.composesDeviceDevice {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}*/
		Node_line aggregatesDeviceDeviceDef
		for reference Device.aggregatesDeviceDevice {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByDeviceDeviceDef
		for reference Device.aggregatedByDeviceDevice {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line associatedWithNetworkDeviceDef
		for reference Device.associatedWithNetworkDevice {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToSystemSoftwareDeviceDef
		for reference Device.assignedToSystemSoftwareDevice {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		
		Internal_node composedOfCommunicationPathCommunicationPathDef
		for reference
		CommunicationPath.composedOfCommunicationPathCommunicationPath {
			layout default
			layout
		}
		/* Node_line composesCommunicationPathCommunicationPathDef
		for reference CommunicationPath.composesCommunicationPathCommunicationPath {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}*/
		Node_line aggregatesCommunicationPathCommunicationPathDef
		for reference
		CommunicationPath.aggregatesCommunicationPathCommunicationPath {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByCommunicationPathCommunicationPathDef
		for reference
		CommunicationPath.aggregatedByCommunicationPathCommunicationPath {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line associatedWithNodeCommunicationPathDef
		for reference CommunicationPath.associatedWithNodeCommunicationPath {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line realizedByNetworkCommunicationPathDef
		for reference CommunicationPath.realizedByNetworkCommunicationPath {
			label "realizedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		
		Internal_node composedOfNetworkNetworkDef
		for reference Network.composedOfNetworkNetwork {
			layout default
			layout
		}
		/* Node_line composesNetworkNetworkDef
		for reference Network.composesNetworkNetwork {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}*/
		Node_line aggregatesNetworkNetworkDef
		for reference Network.aggregatesNetworkNetwork {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByNetworkNetworkDef
		for reference Network.aggregatedByNetworkNetwork {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line realizesCommunicationPathNetworkDef
		for reference Network.realizesCommunicationPathNetwork {
			label "realizes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line associatedWithDeviceNetworkDef
		for reference Network.associatedWithDeviceNetwork {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
	}
	Rules definition {
	}
	Interaction definition {
		Interaction elements {
			Wizard WizardForCreateBasicArtifact
			for context class Artifact {
				title "ArtifactWizard"
				description "Create Artifact Wizard"
				type create
				pages {
					Page {
						title "Artifact Attributes"
						description "Definie Artifact Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicInfrastructureService
			for context class InfrastructureService {
				title "InfrastructureServiceWizard"
				description "Create InfrastructureService Wizard"
				type create
				pages {
					Page {
						title "InfrastructureService Attributes"
						description "Definie InfrastructureService Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicInfrastructureInterface
			for context class InfrastructureInterface {
				title "InfrastructureInterfaceWizard"
				description "Create InfrastructureInterface Wizard"
				type create
				pages {
					Page {
						title "InfrastructureInterface Attributes"
						description "Definie InfrastructureInterface Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicNode
			for context class Node {
				title "NodeWizard"
				description "Create Node Wizard"
				type create
				pages {
					Page {
						title "Node Attributes"
						description "Definie Node Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicSystemSoftware
			for context class SystemSoftware {
				title "SystemSoftwareWizard"
				description "Create SystemSoftware Wizard"
				type create
				pages {
					Page {
						title "SystemSoftware Attributes"
						description "Definie SystemSoftware Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicDevice
			for context class Device {
				title "DeviceWizard"
				description "Create Device Wizard"
				type create
				pages {
					Page {
						title "Device Attributes"
						description "Definie Device Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicCommunicationPath
			for context class CommunicationPath {
				title "CommunicationPathWizard"
				description "Create CommunicationPath Wizard"
				type create
				pages {
					Page {
						title "CommunicationPath Attributes"
						description "Definie CommunicationPath Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicNetwork
			for context class Network {
				title "NetworkWizard"
				description "Create Network Wizard"
				type create
				pages {
					Page {
						title "Network Attributes"
						description "Definie Network Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
		}
		Statements {
			Actions for type Artifact {
				on create
				do {
					show wizard WizardForCreateBasicArtifact
				}
			}
			Actions for type InfrastructureService {
				on create
				do {
					show wizard WizardForCreateBasicInfrastructureService
				}
			}
			Actions for type InfrastructureInterface {
				on create
				do {
					show wizard WizardForCreateBasicInfrastructureInterface
				}
			}
			Actions for type Node {
				on create
				do {
					show wizard WizardForCreateBasicNode
				}
			}
			Actions for type SystemSoftware {
				on create
				do {
					show wizard WizardForCreateBasicSystemSoftware
				}
			}
			Actions for type Device {
				on create
				do {
					show wizard WizardForCreateBasicDevice
				}
			}
			Actions for type CommunicationPath {
				on create
				do {
					show wizard WizardForCreateBasicCommunicationPath
				}
			}
			Actions for type Network {
				on create
				do {
					show wizard WizardForCreateBasicNetwork
				}
			}
		}
	}
}