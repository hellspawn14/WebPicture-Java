import "/AMBIENTE/WS2Greta/test_gromp_1/modelBLayer/BusinessLayerArch.ecore" as
MM
Graphical representation test_gromp_1 {
	reference package businessLayer
	root ArchimateModel
	Palette for ArchimateModel {
		Tool group ElementsPalette {
			description "Evaluation Elements"
		}
		Tool group persons_froup {
			description "Group of entities that are real persons"
		}
		Tool group ArchimatePalette {
			description "ArchimatePalette"
			Creation button for class Value {
				name "Value"
				description "Value" icon "/imagenes/ValueIcon.gif"
			}
			Creation button for class Product {
				name "Product"
				description "Product" icon "/imagenes/ProductIcon.gif"
			}
			Creation button for class Meaning {
				name "Meaning"
				description "Meaning" icon "/imagenes/MeaningIcon.gif"
			}
			Creation button for class Representation {
				name "Representation"
				description "Representation" icon "/imagenes/RepresentationIcon.gif"
			}
			Creation button for class BusinessObject {
				name "BusinessObject"
				description "BusinessObject" icon "/imagenes/BusinessObjectIcon.gif"
			}
			Creation button for class Contract {
				name "Contract"
				description "Contract" icon "/imagenes/ContractIcon.gif"
			}
			Creation button for class BusinessService {
				name "BusinessService"
				description "BusinessService" icon "/imagenes/BusinessServiceIcon.gif"
			}
			Creation button for class BusinessBehaviorElement {
				name "BusinessBehaviorElement"
				description "BusinessBehaviorElement" icon
				"/imagenes/BusinessBehaviorElementIcon.gif"
			}
			Creation button for class BusinessProcess {
				name "BusinessProcess"
				description "BusinessProcess" icon "/imagenes/BusinessProcessIcon.gif"
			}
			Creation button for class BusinessFunction {
				name "BusinessFunction"
				description "BusinessFunction" icon "/imagenes/BusinessFunctionIcon.gif"
			}
			Creation button for class BusinessInteraction {
				name "BusinessInteraction"
				description "BusinessInteraction" icon
				"/imagenes/BusinessInteractionIcon.gif"
			}
			Creation button for class BusinessEvent {
				name "BusinessEvent"
				description "BusinessEvent" icon "/imagenes/BusinessEventIcon.gif"
			}
			Creation button for class Location {
				name "Location"
				description "Location" icon "/imagenes/LocationIcon.gif"
			}
			Creation button for class BusinessInterface {
				name "BusinessInterface"
				description "BusinessInterface" icon "/imagenes/BusinessInterfaceIcon.gif"
			}
			Creation button for class BusinessRole {
				name "BusinessRole"
				description "BusinessRole" icon "/imagenes/BusinessRoleIcon.gif"
			}
			Creation button for class BusinessCollaboration {
				name "BusinessCollaboration"
				description "BusinessCollaboration" icon
				"/imagenes/BusinessCollaborationIcon.gif"
			}
			Creation button for class BusinessActor {
				name "BusinessActor"
				description "BusinessActor" icon "/imagenes/BusinessActorIcon.gif"
			}
		}
	}
	Style definition {
		Color black ( 0 ,  0 ,  0 )
		Color white ( 255 ,  255 ,  255 )
		Color yellow ( 255 ,  255 ,  0 )
		Color blue ( 0 ,  0 ,  255 )
		Color red ( 255 ,  0 ,  0 )
		Color green ( 0 ,  255 ,  0 )
		Line style BorderBlack1 {
			width 1
			type dot
			color black
		}
		Line style BorderBlack3 {
			width 3
			type solid
			color black
		}
		Line style BorderBlack4 {
			width 4
			type solid
			color black
		}
		Line style BorderRed2 {
			width 2
			type solid
			color red
		}
		Rounded rectRounded10 {
			radiox 10
			radioy 10
		}
		Ellipse ellip {
			proportion ( 35 ,  25 )
		}
		Regular polygon deca {
			vertex quantity 8
			start angle 90
		}
		Color Withe ( 255 ,  255 ,  255 )
		Color activeElementsColor ( 117 ,  235 ,  235 )
		Color pasiveElementsColor ( 116 ,  232 ,  116 )
		Color behaviorElementsColor ( 241 ,  241 ,  181 )
		Color greenTestXX ( 44 ,  255 ,  45 )
		Line style BorderBlackDot {
			width 1
			type dot
			color black
		}
		Line style BorderBlack2 {
			width 2
			type solid
			color black
		}
	}
	Graphical
	definition {
		Node_element ValueDef
		for class Value {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfValueValueDef
		for reference Value.composedOfValueValue {
			layout default
			layout
		}
		Node_line composesValueValueDef
		for reference Value.composesValueValue {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesValueValueDef
		for reference Value.aggregatesValueValue {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByValueValueDef
		for reference Value.aggregatedByValueValue {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line associatedWithProductValueDef
		for reference Value.associatedWithProductValue {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element ProductDef
		for class Product {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfProductProductDef
		for reference Product.composedOfProductProduct {
			layout default
			layout
		}
		Node_line composesProductProductDef
		for reference Product.composesProductProduct {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesProductProductDef
		for reference Product.aggregatesProductProduct {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByProductProductDef
		for reference Product.aggregatedByProductProduct {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line associatedWithValueProductDef
		for reference Product.associatedWithValueProduct {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesContractProductDef
		for reference Product.aggregatesContractProduct {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesBusinessServiceProductDef
		for reference Product.aggregatesBusinessServiceProduct {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element MeaningDef
		for class Meaning {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfMeaningMeaningDef
		for reference Meaning.composedOfMeaningMeaning {
			layout default
			layout
		}
		Node_line composesMeaningMeaningDef
		for reference Meaning.composesMeaningMeaning {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesMeaningMeaningDef
		for reference Meaning.aggregatesMeaningMeaning {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByMeaningMeaningDef
		for reference Meaning.aggregatedByMeaningMeaning {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line associatedWithBusinessObjectMeaningDef
		for reference Meaning.associatedWithBusinessObjectMeaning {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element RepresentationDef
		for class Representation {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfRepresentationRepresentationDef
		for reference Representation.composedOfRepresentationRepresentation {
			layout default
			layout
		}
		Node_line composesRepresentationRepresentationDef
		for reference Representation.composesRepresentationRepresentation {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesRepresentationRepresentationDef
		for reference Representation.aggregatesRepresentationRepresentation {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByRepresentationRepresentationDef
		for reference Representation.aggregatedByRepresentationRepresentation {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line realizesBusinessObjectRepresentationDef
		for reference Representation.realizesBusinessObjectRepresentation {
			label "realizes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToLocationRepresentationDef
		for reference Representation.assignedToLocationRepresentation {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessObjectDef
		for class BusinessObject {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfBusinessObjectBusinessObjectDef
		for reference BusinessObject.composedOfBusinessObjectBusinessObject {
			layout default
			layout
		}
		Node_line composesBusinessObjectBusinessObjectDef
		for reference BusinessObject.composesBusinessObjectBusinessObject {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesBusinessObjectBusinessObjectDef
		for reference BusinessObject.aggregatesBusinessObjectBusinessObject {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByBusinessObjectBusinessObjectDef
		for reference BusinessObject.aggregatedByBusinessObjectBusinessObject {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line associatedWithMeaningBusinessObjectDef
		for reference BusinessObject.associatedWithMeaningBusinessObject {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line realizedByRepresentationBusinessObjectDef
		for reference BusinessObject.realizedByRepresentationBusinessObject {
			label "realizedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessedByBusinessBehaviorElementBusinessObjectDef
		for reference
		BusinessObject.accessedByBusinessBehaviorElementBusinessObject {
			label "accessedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessesBusinessEventBusinessObjectDef
		for reference BusinessObject.accessesBusinessEventBusinessObject {
			label "accesses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessedByBusinessServiceBusinessObjectDef
		for reference BusinessObject.accessedByBusinessServiceBusinessObject {
			label "accessedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToLocationBusinessObjectDef
		for reference BusinessObject.assignedToLocationBusinessObject {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element ContractDef
		for class Contract {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfContractContractDef
		for reference Contract.composedOfContractContract {
			layout default
			layout
		}
		Node_line composesContractContractDef
		for reference Contract.composesContractContract {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesContractContractDef
		for reference Contract.aggregatesContractContract {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByContractContractDef
		for reference Contract.aggregatedByContractContract {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByProductContractDef
		for reference Contract.aggregatedByProductContract {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessServiceDef
		for class BusinessService {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfBusinessServiceBusinessServiceDef
		for reference BusinessService.composedOfBusinessServiceBusinessService {
			layout default
			layout
		}
		Node_line composesBusinessServiceBusinessServiceDef
		for reference BusinessService.composesBusinessServiceBusinessService {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesBusinessServiceBusinessServiceDef
		for reference BusinessService.aggregatesBusinessServiceBusinessService {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByBusinessServiceBusinessServiceDef
		for reference BusinessService.aggregatedByBusinessServiceBusinessService {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByProductBusinessServiceDef
		for reference BusinessService.aggregatedByProductBusinessService {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usedByBusinessActorBusinessServiceDef
		for reference BusinessService.usedByBusinessActorBusinessService {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line realizedByBusinessBehaviorElementBusinessServiceDef
		for reference
		BusinessService.realizedByBusinessBehaviorElementBusinessService {
			label "realizedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usedByBusinessBehaviorElementBusinessServiceDef
		for reference BusinessService.usedByBusinessBehaviorElementBusinessService {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToBusinessInterfaceBusinessServiceDef
		for reference BusinessService.assignedToBusinessInterfaceBusinessService {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessesBusinessObjectBusinessServiceDef
		for reference BusinessService.accessesBusinessObjectBusinessService {
			label "accesses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usedByElementBusinessRoleBusinessServiceDef
		for reference BusinessService.usedByElementBusinessRoleBusinessService {
			label "usedByElement"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessBehaviorElementDef
		for class BusinessBehaviorElement {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.composedOfBusinessBehaviorElementBusinessBehaviorElement {
			layout default
			layout
		}
		Node_line composesBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.composesBusinessBehaviorElementBusinessBehaviorElement {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.aggregatesBusinessBehaviorElementBusinessBehaviorElement {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.aggregatedByBusinessBehaviorElementBusinessBehaviorElement {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line triggersToBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.triggersToBusinessBehaviorElementBusinessBehaviorElement {
			label "triggersTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line triggeredByBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.triggeredByBusinessBehaviorElementBusinessBehaviorElement {
			label "triggeredBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line flowsFromBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.flowsFromBusinessBehaviorElementBusinessBehaviorElement {
			label "flowsFrom"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line flowsToBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.flowsToBusinessBehaviorElementBusinessBehaviorElement {
			label "flowsTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line realisesBusinessServiceBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.realisesBusinessServiceBusinessBehaviorElement {
			label "realises"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line triggersBusinessEventBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.triggersBusinessEventBusinessBehaviorElement {
			label "triggers"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line triggersByBusinessEventBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.triggersByBusinessEventBusinessBehaviorElement {
			label "triggersBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessesBusinessObjectBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.accessesBusinessObjectBusinessBehaviorElement {
			label "accesses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToBusinessRoleBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.assignedToBusinessRoleBusinessBehaviorElement {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usesBusinessServiceBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.usesBusinessServiceBusinessBehaviorElement {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessProcessDef
		for class BusinessProcess {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Node_element BusinessFunctionDef
		for class BusinessFunction {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Node_element BusinessInteractionDef
		for class BusinessInteraction {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Node_element BusinessEventDef
		for class BusinessEvent {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfBusinessEventBusinessEventDef
		for reference BusinessEvent.composedOfBusinessEventBusinessEvent {
			layout default
			layout
		}
		Node_line composesBusinessEventBusinessEventDef
		for reference BusinessEvent.composesBusinessEventBusinessEvent {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesBusinessEventBusinessEventDef
		for reference BusinessEvent.aggregatesBusinessEventBusinessEvent {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByBusinessEventBusinessEventDef
		for reference BusinessEvent.aggregatedByBusinessEventBusinessEvent {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line triggersByBusinessBehaviorElementBusinessEventDef
		for reference BusinessEvent.triggersByBusinessBehaviorElementBusinessEvent {
			label "triggersBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line triggersBusinessBehaviorElementBusinessEventDef
		for reference BusinessEvent.triggersBusinessBehaviorElementBusinessEvent {
			label "triggers"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessedByBusinessObjectBusinessEventDef
		for reference BusinessEvent.accessedByBusinessObjectBusinessEvent {
			label "accessedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element LocationDef
		for class Location {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfLocationLocationDef
		for reference Location.composedOfLocationLocation {
			layout default
			layout
		}
		Node_line composesLocationLocationDef
		for reference Location.composesLocationLocation {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesLocationLocationDef
		for reference Location.aggregatesLocationLocation {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByLocationLocationDef
		for reference Location.aggregatedByLocationLocation {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedFromBusinessActorLocationDef
		for reference Location.assignedFromBusinessActorLocation {
			label "assignedFrom"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedFromBusinessObjectLocationDef
		for reference Location.assignedFromBusinessObjectLocation {
			label "assignedFrom"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedFromRepresentationLocationDef
		for reference Location.assignedFromRepresentationLocation {
			label "assignedFrom"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessInterfaceDef
		for class BusinessInterface {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfBusinessInterfaceBusinessInterfaceDef
		for reference
		BusinessInterface.composedOfBusinessInterfaceBusinessInterface {
			layout default
			layout
		}
		Node_line composesBusinessInterfaceBusinessInterfaceDef
		for reference BusinessInterface.composesBusinessInterfaceBusinessInterface {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesBusinessInterfaceBusinessInterfaceDef
		for reference
		BusinessInterface.aggregatesBusinessInterfaceBusinessInterface {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByBusinessInterfaceBusinessInterfaceDef
		for reference
		BusinessInterface.aggregatedByBusinessInterfaceBusinessInterface {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line composesBusinessRoleBusinessInterfaceDef
		for reference BusinessInterface.composesBusinessRoleBusinessInterface {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usedByBusinessActorBusinessInterfaceDef
		for reference BusinessInterface.usedByBusinessActorBusinessInterface {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usedByBusinessRoleBusinessInterfaceDef
		for reference BusinessInterface.usedByBusinessRoleBusinessInterface {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToBusinessServiceBusinessInterfaceDef
		for reference BusinessInterface.assignedToBusinessServiceBusinessInterface {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessRoleDef
		for class BusinessRole {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfBusinessRoleBusinessRoleDef
		for reference BusinessRole.composedOfBusinessRoleBusinessRole {
			layout default
			layout
		}
		Node_line composesBusinessRoleBusinessRoleDef
		for reference BusinessRole.composesBusinessRoleBusinessRole {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesBusinessRoleBusinessRoleDef
		for reference BusinessRole.aggregatesBusinessRoleBusinessRole {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByBusinessRoleBusinessRoleDef
		for reference BusinessRole.aggregatedByBusinessRoleBusinessRole {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByBusinessCollaborationBusinessRoleDef
		for reference BusinessRole.aggregatedByBusinessCollaborationBusinessRole {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToBusinessActorBusinessRoleDef
		for reference BusinessRole.assignedToBusinessActorBusinessRole {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToBusinessBehaviorElementBusinessRoleDef
		for reference BusinessRole.assignedToBusinessBehaviorElementBusinessRole {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Internal_node composedOfBusinessInterfaceBusinessRoleDef
		for reference BusinessRole.composedOfBusinessInterfaceBusinessRole {
			layout default
			layout
		}
		Node_line usesBusinessInterfaceBusinessRoleDef
		for reference BusinessRole.usesBusinessInterfaceBusinessRole {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usesElementBusinessServiceBusinessRoleDef
		for reference BusinessRole.usesElementBusinessServiceBusinessRole {
			label "usesElement"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessCollaborationDef
		for class BusinessCollaboration {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Node_line aggregatesBusinessActorBusinessCollaborationDef
		for reference
		BusinessCollaboration.aggregatesBusinessActorBusinessCollaboration {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesBusinessRoleBusinessCollaborationDef
		for reference
		BusinessCollaboration.aggregatesBusinessRoleBusinessCollaboration {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessActorDef
		for class BusinessActor {
			label elementName
			label icon true
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "Concern1.svg"
			}
			phantom true
		}
		Internal_node composedOfBusinessActorBusinessActorDef
		for reference BusinessActor.composedOfBusinessActorBusinessActor {
			layout default
			layout
		}
		Node_line composesBusinessActorBusinessActorDef
		for reference BusinessActor.composesBusinessActorBusinessActor {
			label "composes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesBusinessActorBusinessActorDef
		for reference BusinessActor.aggregatesBusinessActorBusinessActor {
			label "aggregates"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByBusinessActorBusinessActorDef
		for reference BusinessActor.aggregatedByBusinessActorBusinessActor {
			label "aggregatedBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatesByBusinessCollaborationBusinessActorDef
		for reference BusinessActor.aggregatesByBusinessCollaborationBusinessActor {
			label "aggregatesBy"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usesBusinessInterfaceBusinessActorDef
		for reference BusinessActor.usesBusinessInterfaceBusinessActor {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToBusinessRoleBusinessActorDef
		for reference BusinessActor.assignedToBusinessRoleBusinessActor {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usesElementBusinessServiceBusinessActorDef
		for reference BusinessActor.usesElementBusinessServiceBusinessActor {
			label "usesElement"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToLocationBusinessActorDef
		for reference BusinessActor.assignedToLocationBusinessActor {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
	}
	Rules definition {
	}
	Interaction definition {
		Interaction elements {
			Wizard WizardForCreateBasicValue
			for context class Value {
				title "ValueWizard"
				description "Create Value Wizard"
				type create
				pages {
					Page {
						title "Value Attributes"
						description "Definie Value Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicProduct
			for context class Product {
				title "ProductWizard"
				description "Create Product Wizard"
				type create
				pages {
					Page {
						title "Product Attributes"
						description "Definie Product Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicMeaning
			for context class Meaning {
				title "MeaningWizard"
				description "Create Meaning Wizard"
				type create
				pages {
					Page {
						title "Meaning Attributes"
						description "Definie Meaning Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicRepresentation
			for context class Representation {
				title "RepresentationWizard"
				description "Create Representation Wizard"
				type create
				pages {
					Page {
						title "Representation Attributes"
						description "Definie Representation Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessObject
			for context class BusinessObject {
				title "BusinessObjectWizard"
				description "Create BusinessObject Wizard"
				type create
				pages {
					Page {
						title "BusinessObject Attributes"
						description "Definie BusinessObject Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicContract
			for context class Contract {
				title "ContractWizard"
				description "Create Contract Wizard"
				type create
				pages {
					Page {
						title "Contract Attributes"
						description "Definie Contract Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessService
			for context class BusinessService {
				title "BusinessServiceWizard"
				description "Create BusinessService Wizard"
				type create
				pages {
					Page {
						title "BusinessService Attributes"
						description "Definie BusinessService Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessBehaviorElement
			for context class BusinessBehaviorElement {
				title "BusinessBehaviorElementWizard"
				description "Create BusinessBehaviorElement Wizard"
				type create
				pages {
					Page {
						title "BusinessBehaviorElement Attributes"
						description "Definie BusinessBehaviorElement Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessProcess
			for context class BusinessProcess {
				title "BusinessProcessWizard"
				description "Create BusinessProcess Wizard"
				type create
				pages {
					Page {
						title "BusinessProcess Attributes"
						description "Definie BusinessProcess Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessFunction
			for context class BusinessFunction {
				title "BusinessFunctionWizard"
				description "Create BusinessFunction Wizard"
				type create
				pages {
					Page {
						title "BusinessFunction Attributes"
						description "Definie BusinessFunction Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessInteraction
			for context class BusinessInteraction {
				title "BusinessInteractionWizard"
				description "Create BusinessInteraction Wizard"
				type create
				pages {
					Page {
						title "BusinessInteraction Attributes"
						description "Definie BusinessInteraction Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessEvent
			for context class BusinessEvent {
				title "BusinessEventWizard"
				description "Create BusinessEvent Wizard"
				type create
				pages {
					Page {
						title "BusinessEvent Attributes"
						description "Definie BusinessEvent Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicLocation
			for context class Location {
				title "LocationWizard"
				description "Create Location Wizard"
				type create
				pages {
					Page {
						title "Location Attributes"
						description "Definie Location Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessInterface
			for context class BusinessInterface {
				title "BusinessInterfaceWizard"
				description "Create BusinessInterface Wizard"
				type create
				pages {
					Page {
						title "BusinessInterface Attributes"
						description "Definie BusinessInterface Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessRole
			for context class BusinessRole {
				title "BusinessRoleWizard"
				description "Create BusinessRole Wizard"
				type create
				pages {
					Page {
						title "BusinessRole Attributes"
						description "Definie BusinessRole Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessCollaboration
			for context class BusinessCollaboration {
				title "BusinessCollaborationWizard"
				description "Create BusinessCollaboration Wizard"
				type create
				pages {
					Page {
						title "BusinessCollaboration Attributes"
						description "Definie BusinessCollaboration Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicBusinessActor
			for context class BusinessActor {
				title "BusinessActorWizard"
				description "Create BusinessActor Wizard"
				type create
				pages {
					Page {
						title "BusinessActor Attributes"
						description "Definie BusinessActor Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
		}
		Statements {
			Actions for type Value {
				on create
				do {
					show wizard WizardForCreateBasicValue
				}
			}
			Actions for type Product {
				on create
				do {
					show wizard WizardForCreateBasicProduct
				}
			}
			Actions for type Meaning {
				on create
				do {
					show wizard WizardForCreateBasicMeaning
				}
			}
			Actions for type Representation {
				on create
				do {
					show wizard WizardForCreateBasicRepresentation
				}
			}
			Actions for type BusinessObject {
				on create
				do {
					show wizard WizardForCreateBasicBusinessObject
				}
			}
			Actions for type Contract {
				on create
				do {
					show wizard WizardForCreateBasicContract
				}
			}
			Actions for type BusinessService {
				on create
				do {
					show wizard WizardForCreateBasicBusinessService
				}
			}
			Actions for type BusinessBehaviorElement {
				on create
				do {
					show wizard WizardForCreateBasicBusinessBehaviorElement
				}
			}
			Actions for type BusinessProcess {
				on create
				do {
					show wizard WizardForCreateBasicBusinessProcess
				}
			}
			Actions for type BusinessFunction {
				on create
				do {
					show wizard WizardForCreateBasicBusinessFunction
				}
			}
			Actions for type BusinessInteraction {
				on create
				do {
					show wizard WizardForCreateBasicBusinessInteraction
				}
			}
			Actions for type BusinessEvent {
				on create
				do {
					show wizard WizardForCreateBasicBusinessEvent
				}
			}
			Actions for type Location {
				on create
				do {
					show wizard WizardForCreateBasicLocation
				}
			}
			Actions for type BusinessInterface {
				on create
				do {
					show wizard WizardForCreateBasicBusinessInterface
				}
			}
			Actions for type BusinessRole {
				on create
				do {
					show wizard WizardForCreateBasicBusinessRole
				}
			}
			Actions for type BusinessCollaboration {
				on create
				do {
					show wizard WizardForCreateBasicBusinessCollaboration
				}
			}
			Actions for type BusinessActor {
				on create
				do {
					show wizard WizardForCreateBasicBusinessActor
				}
			}
		}
	}
}