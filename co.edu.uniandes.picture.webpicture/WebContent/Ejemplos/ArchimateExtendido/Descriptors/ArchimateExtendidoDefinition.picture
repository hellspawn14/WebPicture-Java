
import "/model/ArchimateExtendido.ecore" as MM
Graphical representation ArchimateExtendidoAppLayer {
	reference package archimate
	root ArchimateModel
	Palette for ArchimateModel {
		
		
		Tool group ArchimateApplicationPalette {
			description "Application Elements"
			Tool group StructuralConceptsApplicacion {
				description "Structural Elements"
				Creation button for class ApplicationComponent {
					name "ApplicationComponent"
					description "ApplicationComponent" icon
					"/imagenes/ApplicationComponentIcon.gif"
				}
				Creation button for class ApplicationCollaboration {
					name "ApplicationCollaboration"
					description "ApplicationCollaboration" icon
					"/imagenes/ApplicationCollaborationIcon.gif"
				}
				Creation button for class ApplicationInterface {
					name "ApplicationInterface"
					description "ApplicationInterface" icon
					"/imagenes/ApplicationInterfaceIcon.gif"
				}
				Creation button for class DataObject {
					name "DataObject"
					description "DataObject" icon "/imagenes/DataObjectIcon.gif"
				}
			}
			Tool group BehavioralConceptsApplication {
				description "Behavioral Elements"
				Creation button for class ApplicationFunction {
					name "ApplicationFunction"
					description "ApplicationFunction" icon
					"/imagenes/ApplicationFunctionIcon.gif"
				}
				Creation button for class ApplicationInteraction {
					name "ApplicationInteraction"
					description "ApplicationInteraction" icon
					"/imagenes/ApplicationInteractionIcon.gif"
				}
				Creation button for class ApplicationService {
					name "ApplicationService"
					description "ApplicationService" icon
					"/imagenes/ApplicationServiceIcon.gif"
				}
			}
		}
		Tool group ArchimateBusinessPalette {
				description "Business Elements"				
				
				Tool group StructuralConceptsBusiness {
					description "Structural Elements"
					
								Creation button for class Organization {
						name "Organization"
						description "Organization"
						icon "/imagenes/Organization.gif"
					}
						Creation button for class BusinessActor {
						name "BusinessActor"
						description "BusinessActor"
						icon "/images/actor.gif"
					}
						Creation button for class BusinessRole {
						name "BusinessRole"
						description "BusinessRole"
						icon "/imagenes/BusinessRoleIcon.gif"
					}
					Creation button for class BusinessCollaboration {
						name "BusinessCollaboration"
						description "BusinessCollaboration"
						icon "/imagenes/BusinessCollaborationIcon.gif"
					}
					Creation button for class BusinessInterface {
						name "BusinessInterface"
						description "BusinessInterface"
						icon "/imagenes/BusinessInterfaceIcon.gif"
					}
						Creation button for class Location {
						name "Location"
						description "Location"
						icon "/imagenes/LocationIcon.gif"
					}
									Creation button for class BusinessObject {
						name "BusinessObject"
						description "BusinessObject"
						icon "/imagenes/BusinessObjectIcon.gif"
					}
				}
				Tool group BehavioralConceptsBusiness {
					description "Behavioral Elements"
				
					Creation button for class BusinessService {
						name "BusinessService"
						description "BusinessService"
						icon "/imagenes/BusinessServiceIcon.gif"
					}
					Creation button for class BusinessProcess {
						name "BusinessProcess"
						description "BusinessProcess"
						icon "/imagenes/BusinessProcessIcon.gif"
					}
					Creation button for class BusinessFunction {
						name "BusinessFunction"
						description "BusinessFunction"
						icon "/imagenes/BusinessFunctionIcon.gif"
					}
					Creation button for class BusinessInteraction {
						name "BusinessInteraction"
						description "BusinessInteraction"
						icon "/imagenes/BusinessInteractionIcon.gif"
					}
					Creation button for class BusinessEvent {
						name "BusinessEvent"
						description "BusinessEvent"
						icon "/imagenes/BusinessEventIcon.gif"
					}
					Creation button for class Activity {
						name "Activity"
						description "Activity"
						icon "/imagenes/Activity.gif"
					}		
					Creation button for class ManualActivity {
						name "ManualActivity"
						description "ManualActivity"
						icon "/imagenes/ManualActivity.gif"
					}						
					Creation button for class AutomaticActivity {
						name "AutomaticActivity"
						description "AutomaticActivity"
						icon "/imagenes/AutomaticActivity.gif"
					}
					Creation button for class Task {
						name "Task"
						description "Task"
						icon "/imagenes/Task.gif"
					}
						Creation button for class AssignedTask {
						name "AssignedTask"
						description "AssignedTask"
						icon "/imagenes/AssignedTask.gif"
					}
				}
				
				Tool group InformationalConceptsBusiness {
						description "Informational Elements"
		   Creation button for class Value {
				 	    name "Value"
					description "Value"
					icon "/imagenes/ValueIcon.gif"
					}
					Creation button for class Product {
						name "Product"
						description "Product"
						icon "/imagenes/ProductIcon.gif"
					}
					Creation button for class Contract {
						name "Contract"
						description "Contract"
						icon "/imagenes/ContractIcon.gif"
					}					
					Creation button for class Meaning {
						name "Meaning"
						description "Meaning"
						icon "/imagenes/MeaningIcon.gif"
					}
					Creation button for class Representation {
						name "Representation"
						description "Representation"
						icon "/imagenes/RepresentationIcon.gif"
					}
				}
			}
		
		Tool group ArchimateTechonologyPalette {
			description "Technology Elements"
			Tool group StructuralConceptsTechnology {
				description "Structural Elements"
				Creation button for class Node {
					name "Node"
					description "Node" icon "/imagenes/NodeIcon.gif"
				}
				Creation button for class Device {
					name "Device"
					description "Device" icon "/imagenes/DeviceIcon.gif"
				}
				Creation button for class SystemSoftware {
					name "SystemSoftware"
					description "SystemSoftware" icon "/imagenes/SystemSoftwareIcon.gif"
				}
				Creation button for class InfrastructureInterface {
					name "InfrastructureInterface"
					description "InfrastructureInterface" icon "/imagenes/InfrastructureInterfaceIcon.gif"
				}
				Creation button for class Network {
					name "Network"
					description "Network" icon "/imagenes/NetworkIcon.gif"
				}
				Creation button for class CommunicationPath {
					name "CommunicationPath"
					description "CommunicationPath" icon "/imagenes/CommunicationPathIcon.gif"
				}
			}
			Tool group BehavioralConceptsTechnology {
				description "Behavioral Elements"
				Creation button for class InfrastructureService {
					name "InfrastructureService"
					description "InfrastructureService" icon "/imagenes/InfrastructureServiceIcon.gif"
				}
				
				Creation button for class InfrastructureFunction {
					name "InfrastructureFunction"
					description "InfrastructureFunction" icon "/imagenes/InfrastructureFunction.gif"
				}
				
				Creation button for class LoadBalancingFunction {
					name "LoadBalancingFunction"
					description "LoadBalancingFunction" icon "/imagenes/LoadBalancingFunction.gif"
				}
			}
			Tool group InformationalConceptsTechnology {
				description "Informational Elements"
				Creation button for class Artifact {
					name "Artifact"
					description "Artifact" icon "/imagenes/ArtifactIcon.gif"
				}
			}
		}
	}
	
	Style definition {
			Color black (0, 0, 0)			
			Color white (255, 255, 255)			
			Color yellow (255, 255, 0)			
			Color blue (0, 0, 255)			
			Color red (255, 0, 0)			
			Color green (0, 255, 0)		
			Color Withe (255, 255, 255)			
			Color BusinessColor (241, 241, 181)			
			Color greenTestXX (44, 255, 45)	
			
			
			Line style LineaSolidaSuave {
				width 1
				type solid
				color black
			}
			Line style LineaSolidaMedia {
				width 2
				type solid
				color black
			}
			Line style LineaSolidaPronunciada {
				width 4
				type solid
				color black
			}
			Line style LineaPunteadaSeparadaSuave {
				width 1
				type dot
				color black
			}
			Line style LineaPunteadaSeparadaMedia {
				width 2
				type dot
				color black
			}
			Line style LineaPunteadaSeparadaPronunciada {
				width 4
				type dot
				color black
			}
			Line style LineaPunteadaContinuaSuave {
				width 1
				type dashdot
				color black
			}
			Line style LineaPunteadaContinuaMedia {
				width 2
				type dashdot
				color black
			}
			Line style LineaPunteadaContinuaPronunciada {
				width 4
				type dashdot
				color black
			}

		
			Rounded rectRounded10 
			{
				radiox 10
				radioy 10
			}
			Ellipse ellip {
				proportion ( 22, 17)
			}
			Regular polygon deca {
				vertex quantity 8
				start angle 90
			}
		}
	Graphical definition {
	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	/////////////////////////////////APPLICATION LAYER
	//////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////		
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
			 	
			 	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	/////////////////////////////////ELEMENTOS ORIGINALES
	//////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////		
				 	
		Node_element ApplicationCollaborationDef for class ApplicationCollaboration {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "ApplicationCollaboration.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesApplicationCollaborationApplicationCollaborationDef for reference ApplicationCollaboration.composesApplicationCollaborationApplicationCollaboration {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesApplicationCollaborationApplicationCollaborationDef for reference ApplicationCollaboration.aggregatesApplicationCollaborationApplicationCollaboration {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			
			Node_line aggregatesApplicationComponentApplicationCollaborationDef for reference ApplicationCollaboration.aggregatesApplicationComponentApplicationCollaboration {
				label "aggregates"
				style LineaSolidaMedia
				source decoration rhomb
				target decoration none
			}
		 
		Node_element DataObjectDef for class DataObject {
			label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "DataObject.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}
			Node_line composesDataObjectDataObjectDef for reference DataObject.composesDataObjectDataObject {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesDataObjectDataObjectDef for reference DataObject.aggregatesDataObjectDataObject {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line realizesBusinessObjectDataObjectDef for reference DataObject.realizesBusinessObjectDataObject {
				label "realizes"
				style LineaPunteadaSeparadaSuave
				source decoration none
				target decoration arrow
			}
		Node_element ApplicationServiceDef for class ApplicationService {
			label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "ApplicationService.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}
			Node_line composesApplicationServiceApplicationServiceDef for reference ApplicationService.composesApplicationServiceApplicationService {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesApplicationServiceApplicationServiceDef for reference ApplicationService.aggregatesApplicationServiceApplicationService {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line accessesDataObjectApplicationServiceDef for reference ApplicationService.accessesDataObjectApplicationService {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}
		Node_element ApplicationFunctionDef for class ApplicationFunction {
			label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "ApplicationFunction.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}
			Node_line composesApplicationFunctionApplicationFunctionDef for reference ApplicationFunction.composesApplicationFunctionApplicationFunction {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesApplicationFunctionApplicationFunctionDef for reference ApplicationFunction.aggregatesApplicationFunctionApplicationFunction {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			
			Node_line accessesDataObjectApplicationFunctionDef for reference ApplicationFunction.accessesDataObjectApplicationFunction {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}
			
			Node_line triggersToApplicationFunctionApplicationFunctionDef for reference ApplicationFunction.triggersToApplicationFunctionApplicationFunction {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			
			Node_line flowsToApplicationFunctionApplicationFunctionDef for reference ApplicationFunction.flowsToApplicationFunctionApplicationFunction {
				label "flowsTo"
				style LineaPunteadaContinuaMedia
				source decoration none
				target decoration filled closed arrow
			}

			Node_line usesApplicationServiceApplicationFunctionDef for reference ApplicationFunction.usesApplicationServiceApplicationFunction {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line realizesApplicationServiceApplicationFunctionDef for reference ApplicationFunction.realizesApplicationServiceApplicationFunction {
				label "realizes"
				style LineaPunteadaSeparadaSuave
				source decoration none
				target decoration arrow
			}
		Node_element ApplicationInteractionDef for class ApplicationInteraction {
			label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "ApplicationInteraction.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}
			Node_line composesApplicationInteractionApplicationInteractionDef for reference ApplicationInteraction.composesApplicationInteractionApplicationInteraction {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesApplicationInteractionApplicationInteractionDef for reference ApplicationInteraction.aggregatesApplicationInteractionApplicationInteraction {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line accessesDataObjectApplicationInteractionDef for reference ApplicationInteraction.accessesDataObjectApplicationInteraction {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}
			Node_line triggersToApplicationInteractionApplicationInteractionDef for reference ApplicationInteraction.triggersToApplicationInteractionApplicationInteraction {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			Node_line flowsToApplicationInteractionApplicationInteractionDef for reference ApplicationInteraction.flowsToApplicationInteractionApplicationInteraction {
				label "flowsTo"
				style LineaPunteadaContinuaMedia
				source decoration none
				target decoration filled closed arrow
			}
			Node_line usesApplicationServiceApplicationInteractionDef for reference ApplicationInteraction.usesApplicationServiceApplicationInteraction {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line realizesApplicationServiceApplicationInteractionDef for reference ApplicationInteraction.realizesApplicationServiceApplicationInteraction {
				label "realizes"
				style LineaPunteadaSeparadaSuave
				source decoration none
				target decoration arrow
			}
		Node_element ApplicationInterfaceDef for class ApplicationInterface {
			label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "ApplicationInterface.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}
			Node_line composesApplicationInterfaceApplicationInterfaceDef for reference ApplicationInterface.composesApplicationInterfaceApplicationInterface {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesApplicationInterfaceApplicationInterfaceDef for reference ApplicationInterface.aggregatesApplicationInterfaceApplicationInterface {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line assignedToApplicationServiceApplicationInterfaceDef for reference ApplicationInterface.assignedToApplicationServiceApplicationInterface {
			label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line composesApplicationComponentApplicationInterfaceDef for reference ApplicationInterface.composesApplicationComponentApplicationInterface {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line assignedToBusinessServiceApplicationInterfaceDef for reference ApplicationInterface.assignedToBusinessServiceApplicationInterface {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
		Node_element ApplicationComponentDef for class ApplicationComponent {
			label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "ApplicationComponent.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}
			Node_line composesApplicationComponentApplicationComponentDef for reference ApplicationComponent.composesApplicationComponentApplicationComponent {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesApplicationComponentApplicationComponentDef for reference ApplicationComponent.aggregatesApplicationComponentApplicationComponent {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
				}
			Node_line assignedToApplicationFunctionApplicationComponentDef for reference ApplicationComponent.assignedToApplicationFunctionApplicationComponent {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedToApplicationInteractionApplicationComponentDef for reference ApplicationComponent.assignedToApplicationInteractionApplicationComponent {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line usesApplicationInterfaceApplicationComponentDef for reference ApplicationComponent.usesApplicationInterfaceApplicationComponent {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line usesApplicationServiceApplicationComponentDef for reference ApplicationComponent.usesApplicationServiceApplicationComponent {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line assignedToBusinessProcessApplicationComponentDef for reference ApplicationComponent.assignedToBusinessProcessApplicationComponent {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedToBusinessInteractionApplicationComponentDef for reference ApplicationComponent.assignedToBusinessInteractionApplicationComponent {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedToBusinessFunctionApplicationComponentDef for reference ApplicationComponent.assignedToBusinessFunctionApplicationComponent {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
					
		
		
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	/////////////////////////////////BUSINESS LAYER
	//////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////		
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
		
		
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	/////////////////////////////////ELEMENTOS NUEVOS
	//////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////		
		
		Node_element OrganizationDef for class Organization {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Organization.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesOrganizationOrganizationDef for reference Organization.composesOrganizationOrganization {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesOrganizationOrganizationDef for reference Organization.aggregatesOrganizationOrganization {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line OrganizationtasksDef for reference Organization.tasks {
				label "task"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}
			Node_line OrganizationprocessesDef for reference Organization.processes {
				label "processes"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}
			Node_line OrganizationrolesDef for reference Organization.roles {
				label "roles"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}	
			Node_line OrganizationpersonsDef for reference Organization.persons {
				label "persons"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}
			Node_line businessServicesDef for reference Organization.businessServices {
				label "businessServices"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}
		Node_element TaskDef for class Task {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Task.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesTaskTaskDef for reference Task.composesTaskTask {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesTaskTaskDef for reference Task.aggregatesTaskTask {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line resposinblesDef for reference Task.resposinbles {
				label "resposinbles"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}
			Node_line taskInstancesDef for reference Task.taskInstances {
				label "taskInstances"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}
			Node_line supportsDef for reference Task.supports {
				label "supports"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}
		Node_element AssignedTaskDef for class AssignedTask {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "AssignedTask.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesAssignedTaskAssignedTaskDef for reference AssignedTask.composesAssignedTaskAssignedTask {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesAssignedTaskAssignedTaskDef for reference AssignedTask.aggregatesAssignedTaskAssignedTask {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
		Node_element ActivityDef for class Activity {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Activity.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesActivityActivityDef for reference Activity.composesActivityActivity {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesActivityActivityDef for reference Activity.aggregatesActivityActivity {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line businessProcessprocessDef for reference Activity.businessProcessprocess {
				label "businessProcessprocess"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}
			Node_line nextDef for reference Activity.next {
				label "next"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}
			Node_line previousDef for reference Activity.previous {
				label "previous"
				style LineaSolidaMedia
	            source decoration none
				target decoration arrow
			}
			
		Node_element ManualActivityDef for class ManualActivity {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "ManualActivity.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesManualActivityManualActivityDef for reference ManualActivity.composesManualActivityManualActivity {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesManualActivityManualActivityDef for reference ManualActivity.aggregatesManualActivityManualActivity {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
				
		Node_element AutomaticActivityDef for class AutomaticActivity {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "AutomaticActivity.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesAutomaticActivityAutomaticActivityDef for reference AutomaticActivity.composesAutomaticActivityAutomaticActivity {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesAutomaticActivityAutomaticActivityDef for reference AutomaticActivity.aggregatesAutomaticActivityAutomaticActivity {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line usesApplicationServiceAutomaticActivityDef for reference AutomaticActivity.usesApplicationServiceAutomaticActivity {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
		
				
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	/////////////////////////////////ELEMENTOS ORIGINALES
	//////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////		
		Node_element ValueDef for class Value {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Value.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesValueValueDef for reference Value.composesValueValue {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesValueValueDef for reference Value.aggregatesValueValue {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line associatedWithProductValueDef for reference Value.associatedWithProductValue {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
		Node_element ProductDef for class Product {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Product.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesProductProductDef for reference Product.composesProductProduct {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesProductProductDef for reference Product.aggregatesProductProduct {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line associatedWithValueProductDef for reference Product.associatedWithValueProduct {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
			Node_line aggregatesContractProductDef for reference Product.aggregatesContractProduct {
				label "aggregates"
				style LineaSolidaMedia
				source decoration rhomb
				target decoration none
			}
			Node_line aggregatesBusinessServiceProductDef for reference Product.aggregatesBusinessServiceProduct {
				label "aggregates"
				style LineaSolidaMedia
				source decoration rhomb
				target decoration none
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line aggregatesInfrastructureServiceProductDef for reference Product.aggregatesInfrastructureServiceProduct {
				label "aggregates"
				style LineaSolidaMedia
				source decoration rhomb
				target decoration none
			}
			Node_line aggregatesApplicationServiceProductDef for reference Product.aggregatesApplicationServiceProduct {
				label "aggregates"
				style LineaSolidaMedia
				source decoration rhomb
				target decoration none
			}
			
		Node_element MeaningDef for class Meaning {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Meaning.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesMeaningMeaningDef for reference Meaning.composesMeaningMeaning {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesMeaningMeaningDef for reference Meaning.aggregatesMeaningMeaning {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line associatedWithBusinessObjectMeaningDef for reference Meaning.associatedWithBusinessObjectMeaning {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
		Node_element RepresentationDef for class Representation {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
				icon path "Representation.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesRepresentationRepresentationDef for reference Representation.composesRepresentationRepresentation {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesRepresentationRepresentationDef for reference Representation.aggregatesRepresentationRepresentation {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line realizesBusinessObjectRepresentationDef for reference Representation.realizesBusinessObjectRepresentation {
				label "realizes"
				style LineaPunteadaSeparadaSuave
				source decoration none
				target decoration arrow
			}
		Node_element BusinessObjectDef for class BusinessObject {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "BusinessObject.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}

			Node_line composesBusinessObjectBusinessObjectDef for reference BusinessObject.composesBusinessObjectBusinessObject {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesBusinessObjectBusinessObjectDef for reference BusinessObject.aggregatesBusinessObjectBusinessObject {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line associatedWithMeaningBusinessObjectDef for reference BusinessObject.associatedWithMeaningBusinessObject {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
		Node_element ContractDef for class Contract {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Contract.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
		Node_element BusinessServiceDef for class BusinessService {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "BusinessService.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesBusinessServiceBusinessServiceDef for reference BusinessService.composesBusinessServiceBusinessService {
					label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesBusinessServiceBusinessServiceDef for reference BusinessService.aggregatesBusinessServiceBusinessService {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line accessesBusinessObjectBusinessServiceDef for reference BusinessService.accessesBusinessObjectBusinessService {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}

		Node_element BusinessProcessDef for class BusinessProcess {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
				background color BusinessColor
				border LineaSolidaMedia
				icon path "BusinessProcess.gif"
				icon size ( 150 , 90)
				icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesBusinessProcessBusinessProcessDef for reference BusinessProcess.composesBusinessProcessBusinessProcess {
					label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesBusinessProcessBusinessProcessDef for reference BusinessProcess.aggregatesBusinessProcessBusinessProcess {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line triggersToBusinessProcessBusinessProcessDef for reference BusinessProcess.triggersToBusinessProcessBusinessProcess {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			
			Node_line flowsToBusinessProcessBusinessProcessDef for reference BusinessProcess.flowsToBusinessProcessBusinessProcess {
				label "flowsTo"
				style LineaPunteadaContinuaMedia
				source decoration none
				target decoration filled closed arrow
			}
			Node_line usesBusinessServiceBusinessProcessDef for reference BusinessProcess.usesBusinessServiceBusinessProcess {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line realisesBusinessServiceBusinessProcessDef for reference BusinessProcess.realisesBusinessServiceBusinessProcess {
				label "realizes"
				style LineaPunteadaSeparadaSuave
				source decoration none
				target decoration arrow
			}
			Node_line triggersBusinessEventBusinessProcessDef for reference BusinessProcess.triggersBusinessEventBusinessProcess {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			Node_line accessesBusinessObjectBusinessProcessDef for reference BusinessProcess.accessesBusinessObjectBusinessProcess {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line usesApplicationServiceBusinessProcessDef for reference BusinessProcess.usesApplicationServiceBusinessProcess {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}			
			
			
		Node_element BusinessFunctionDef for class BusinessFunction {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
				background color BusinessColor
				border LineaSolidaMedia
				icon path "BusinessFunction.gif"
				icon size ( 150 , 90)
				icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesBusinessFunctionBusinessFunctionDef for reference BusinessFunction.composesBusinessFunctionBusinessFunction {
					label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesBusinessFunctionBusinessFunctionDef for reference BusinessFunction.aggregatesBusinessFunctionBusinessFunction {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line triggersToBusinessFunctionBusinessFunctionDef for reference BusinessFunction.triggersToBusinessFunctionBusinessFunction {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			
			Node_line flowsToBusinessFunctionBusinessFunctionDef for reference BusinessFunction.flowsToBusinessFunctionBusinessFunction {
				label "flowsTo"
				style LineaPunteadaContinuaMedia
				source decoration none
				target decoration filled closed arrow
			}
			Node_line usesBusinessServiceBusinessFunctionDef for reference BusinessFunction.usesBusinessServiceBusinessFunction {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line realisesBusinessServiceBusinessFunctionDef for reference BusinessFunction.realisesBusinessServiceBusinessFunction {
				label "realizes"
				style LineaPunteadaSeparadaSuave
				source decoration none
				target decoration arrow
			}
			Node_line triggersBusinessEventBusinessFunctionDef for reference BusinessFunction.triggersBusinessEventBusinessFunction {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			Node_line accessesBusinessObjectBusinessFunctionDef for reference BusinessFunction.accessesBusinessObjectBusinessFunction {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line usesApplicationServiceBusinessFunctionDef for reference BusinessFunction.usesApplicationServiceBusinessFunction {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
		Node_element BusinessInteractionDef for class BusinessInteraction {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
				background color BusinessColor
				border LineaSolidaMedia
				icon path "BusinessInteraction.gif"
				icon size ( 150 , 90)
				icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesBusinessInteractionBusinessInteractionDef for reference BusinessInteraction.composesBusinessInteractionBusinessInteraction {
					label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesBusinessInteractionBusinessInteractionDef for reference BusinessInteraction.aggregatesBusinessInteractionBusinessInteraction {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line triggersToBusinessInteractionBusinessInteractionDef for reference BusinessInteraction.triggersToBusinessInteractionBusinessInteraction {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			
			Node_line flowsToBusinessInteractionBusinessInteractionDef for reference BusinessInteraction.flowsToBusinessInteractionBusinessInteraction {
				label "flowsTo"
				style LineaPunteadaContinuaMedia
				source decoration none
				target decoration filled closed arrow
			}
			Node_line usesBusinessServiceBusinessInteractionDef for reference BusinessInteraction.usesBusinessServiceBusinessInteraction {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line realisesBusinessServiceBusinessInteractionDef for reference BusinessInteraction.realisesBusinessServiceBusinessInteraction {
				label "realizes"
				style LineaPunteadaSeparadaSuave
				source decoration none
				target decoration arrow
			}
			Node_line triggersBusinessEventBusinessInteractionDef for reference BusinessInteraction.triggersBusinessEventBusinessInteraction {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			Node_line accessesBusinessObjectBusinessInteractionDef for reference BusinessInteraction.accessesBusinessObjectBusinessInteraction {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line usesApplicationServiceBusinessInteractionDef for reference BusinessInteraction.usesApplicationServiceBusinessInteraction {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
		Node_element BusinessEventDef for class BusinessEvent {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
					Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
				icon path "BusinessEvent.gif"	
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesBusinessEventBusinessEventDef for reference BusinessEvent.composesBusinessEventBusinessEvent {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesBusinessEventBusinessEventDef for reference BusinessEvent.aggregatesBusinessEventBusinessEvent {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line triggersBusinessProcessBusinessEventDef for reference BusinessEvent.triggersBusinessProcessBusinessEvent {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			Node_line triggersBusinessInteractionBusinessEventDef for reference BusinessEvent.triggersBusinessInteractionBusinessEvent {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			Node_line triggersBusinessFunctionBusinessEventDef for reference BusinessEvent.triggersBusinessFunctionBusinessEvent {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			Node_line accessedByBusinessObjectBusinessEventDef for reference BusinessEvent.accessesBusinessObjectBusinessEvent {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}
		Node_element LocationDef for class Location {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
					Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
				icon path "Location.gif"	
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesLocationLocationDef for reference Location.composesLocationLocation {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesLocationLocationDef for reference Location.aggregatesLocationLocation {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line assignedToBusinessActorLocationDef for reference Location.assignedToBusinessActorLocation {
			label "assignedTo"
				style LineaSolidaSuave
				source decoration square
				target decoration square
			}
			Node_line assignedToBusinessObjectLocationDef for reference Location.assignedToBusinessObjectLocation {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedToRepresentationLocationDef for reference Location.assignedToRepresentationLocation {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line assignedToArtifactLocationDef for reference Location.assignedToArtifactLocation {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedToNetworkLocationDef for reference Location.assignedToNetworkLocation {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedToCommunicationPathLocationDef for reference Location.assignedToCommunicationPathLocation {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedToNodeLocationDef for reference Location.assignedToNodeLocation {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedToDataObjectLocationDef for reference Location.assignedToDataObjectLocation {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedToApplicationComponentLocationDef for reference Location.assignedToApplicationComponentLocation {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
		Node_element BusinessInterfaceDef for class BusinessInterface {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
					Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
				icon path "BusinessInterface.gif"	
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesBusinessInterfaceBusinessInterfaceDef for reference BusinessInterface.composesBusinessInterfaceBusinessInterface {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesBusinessInterfaceBusinessInterfaceDef for reference BusinessInterface.aggregatesBusinessInterfaceBusinessInterface {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line composesBusinessRoleBusinessInterfaceDef for reference BusinessInterface.composesBusinessRoleBusinessInterface {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line assignedToBusinessServiceBusinessInterfaceDef for reference BusinessInterface.assignedToBusinessServiceBusinessInterface {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
		Node_element BusinessRoleDef for class BusinessRole {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
					Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
				icon path "BusinessRole.gif"	
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesBusinessRoleBusinessRoleDef for reference BusinessRole.composesBusinessRoleBusinessRole {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesBusinessRoleBusinessRoleDef for reference BusinessRole.aggregatesBusinessRoleBusinessRole {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
	
			Node_line assignedToBusinessInteractionBusinessRoleDef for reference BusinessRole.assignedToBusinessInteractionBusinessRole {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedToBusinessProcessBusinessRoleDef for reference BusinessRole.assignedToBusinessProcessBusinessRole {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
		    Node_line assignedToBusinessFunctionBusinessRoleDef for reference BusinessRole.assignedToBusinessFunctionBusinessRole {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line usesBusinessInterfaceBusinessRoleDef for reference BusinessRole.usesBusinessInterfaceBusinessRole {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line usesBusinessServiceBusinessRoleDef for reference BusinessRole.usesBusinessServiceBusinessRole {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line usesApplicationServiceBusinessRoleDef for reference BusinessRole.usesApplicationServiceBusinessRole {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line usesApplicationInterfaceBusinessRoleDef for reference BusinessRole.usesApplicationInterfaceBusinessRole {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
		Node_element BusinessCollaborationDef for class BusinessCollaboration {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
					Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
				icon path "BusinessCollaboration.gif"	
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line aggregatesBusinessActorBusinessCollaborationDef for reference BusinessCollaboration.aggregatesBusinessActorBusinessCollaboration {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line aggregatesBusinessRoleBusinessCollaborationDef for reference BusinessCollaboration.aggregatesBusinessRoleBusinessCollaboration {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
		Node_element BusinessActorDef for class BusinessActor {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
					Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
				icon path "BusinessActor.gif"	
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
			}
			Node_line composesBusinessActorBusinessActorDef for reference BusinessActor.composesBusinessActorBusinessActor {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesBusinessActorBusinessActorDef for reference BusinessActor.aggregatesBusinessActorBusinessActor {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line usesBusinessInterfaceBusinessActorDef for reference BusinessActor.usesBusinessInterfaceBusinessActor {
					label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line assignedToBusinessRoleBusinessActorDef for reference BusinessActor.assignedToBusinessRoleBusinessActor {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
			Node_line assignedTasksDef for reference BusinessActor.assignedTasks {
				label "assignedTasks"
				style LineaSolidaSuave
				source decoration square
				target decoration square
			}
			Node_line usesBusinessServiceBusinessActorDef for reference BusinessActor.usesBusinessServiceBusinessActor {
					label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
/*EXTERNAL RELATIONSHIPS**************************************************************************************************************/
			Node_line usesApplicationServiceBusinessActorDef for reference BusinessActor.usesApplicationServiceBusinessActor {
					label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line usesApplicationInterfaceBusinessActorDef for reference BusinessActor.usesApplicationInterfaceBusinessActor {
					label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			
		
		
		
	
		
			
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	/////////////////////////////////TECHNOLOGY LAYER
	//////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////		
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	
	
	
    ///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	/////////////////////////////////ELEMENTOS NUEVOS
	//////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////		
		Node_element LoadBalancingFunctionDef
		for class LoadBalancingFunction {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "LoadBalancingFunction.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}	
			Node_line composesLoadBalancingFunctionLoadBalancingFunctionDef for reference LoadBalancingFunction.composesLoadBalancingFunctionLoadBalancingFunction {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesLoadBalancingFunctionLoadBalancingFunctionDef for reference LoadBalancingFunction.aggregatesLoadBalancingFunctionLoadBalancingFunction {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
			Node_line associatedWithSystemSoftwaresDef for reference LoadBalancingFunction.associatedWithSystemSoftwares {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
			
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	/////////////////////////////////ELEMENTOS ORIGINALES
	//////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////		
		
		Node_element NodeDef
		for class Node {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Node.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}
	 		Node_line composesNodeNodeDef for reference Node.composesNodeNode {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesNodeNodeDef for reference Node.aggregatesNodeNode {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
		
			Node_line usesInfrastructureInterfaceNodeDef for reference Node.usesInfrastructureInterfaceNode {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
		}
			Node_line usesInfrastructureServiceNodeDef for reference Node.usesInfrastructureServiceNode {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
		}	
			Node_line assignedToArtifactNodeDef for reference Node.assignedToArtifactNode {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}	
			Node_line assignedToInfrastructureFunctionNodeDef for reference Node.assignedToInfrastructureFunctionNode {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}	
			Node_line associatedWithCommunicationPathNodeDef for reference Node.associatedWithCommunicationPathNode {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
					

		Node_element DeviceDef
		for class Device {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Device.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}
		
			Node_line composesDeviceDeviceDef for reference Device.composesDeviceDevice {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesDeviceDeviceDef for reference Device.aggregatesDeviceDevice {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
			Node_line assignedToSystemSoftwareDeviceDef for reference Device.assignedToSystemSoftwareDevice {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}	
			Node_line associatedWithNetworkDeviceDef for reference Device.associatedWithNetworkDevice {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
		
		Node_element SystemSoftwareDef
		for class SystemSoftware {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "SystemSoftware.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}
				
			Node_line composesSystemSoftwareSystemSoftwareDef for reference SystemSoftware.composesSystemSoftwareSystemSoftware {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesSystemSoftwareSystemSoftwareDef for reference SystemSoftware.aggregatesSystemSoftwareSystemSoftware {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line loadBalancingFunctionDef for reference SystemSoftware.loadBalancingFunction {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}	
		
		
		Node_element InfrastructureInterfaceDef
		for class InfrastructureInterface {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "InfrastructureInterface.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}
			Node_line composesInfrastructureInterfaceInfrastructureInterfaceDef for reference InfrastructureInterface.composesInfrastructureInterfaceInfrastructureInterface {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesInfrastructureInterfaceInfrastructureInterfaceDef for reference InfrastructureInterface.aggregatesInfrastructureInterfaceInfrastructureInterface {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
			Node_line composesNodeInfrastructureInterfaceDef for reference InfrastructureInterface.composesNodeInfrastructureInterface {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}	
			Node_line assignedToInfrastructureServiceInfrastructureInterface for reference InfrastructureInterface.assignedToInfrastructureServiceInfrastructureInterface {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}	
		Node_element NetworkDef
		for class Network {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Network.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}						
			Node_line composesNetworkNetworkDef for reference Network.composesNetworkNetwork {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesNetworkNetworkDef for reference Network.aggregatesNetworkNetwork {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
			Node_line associatedWithDeviceNetworkDef for reference Network.associatedWithDeviceNetwork {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
			Node_line realizesCommunicationPathNetworkDef for reference Network.realizesCommunicationPathNetwork {
				label "realizes"
				style LineaPunteadaSeparadaSuave
				source decoration none
				target decoration arrow
			}
		
		Node_element CommunicationPathDef
		for class CommunicationPath {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "CommunicationPath.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}						
			Node_line composesCommunicationPathCommunicationPathDef for reference CommunicationPath.composesCommunicationPathCommunicationPath {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesCommunicationPathCommunicationPathDef for reference CommunicationPath.aggregatesCommunicationPathCommunicationPath {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
			Node_line associatedWithNodeCommunicationPathDef for reference CommunicationPath.associatedWithNodeCommunicationPath {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}	
		
		Node_element InfrastructureServiceDef
		for class InfrastructureService {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "InfrastructureService.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}						
			Node_line composesInfrastructureServiceInfrastructureServiceDef for reference InfrastructureService.composesInfrastructureServiceInfrastructureService {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesInfrastructureServiceInfrastructureServiceDef for reference InfrastructureService.aggregatesInfrastructureServiceInfrastructureService {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line accessesArtifactInfrastructureServiceDef for reference InfrastructureService.accessesArtifactInfrastructureService {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}		
			
		Node_element InfrastructureFunctionDef
		for class InfrastructureFunction {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "InfrastructureFunction.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}						
			Node_line composesInfrastructureFunctionInfrastructureFunctionDef for reference InfrastructureFunction.composesInfrastructureFunctionInfrastructureFunction {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesInfrastructureFunctionInfrastructureFunctionDef for reference InfrastructureFunction.aggregatesInfrastructureFunctionInfrastructureFunction {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line triggersToInfrastructureFunctionInfrastructureFunctionDef for reference InfrastructureFunction.triggersToInfrastructureFunctionInfrastructureFunction {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
			Node_line flowsToInfrastructureFunctionInfrastructureFunctionDef for reference InfrastructureFunction.flowsToInfrastructureFunctionInfrastructureFunction {
				label "flowsTo"
				style LineaPunteadaContinuaMedia
				source decoration none
				target decoration filled closed arrow
			}

			Node_line usesInfrastructureServiceInfrastructureFunctionDef for reference InfrastructureFunction.usesInfrastructureServiceInfrastructureFunction {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
			Node_line realizesInfrastructureServiceInfrastructureFunctionDef for reference InfrastructureFunction.realizesInfrastructureServiceInfrastructureFunction {
				label "realizes"
				style LineaPunteadaSeparadaSuave
				source decoration none
				target decoration arrow
			}
			Node_line accessesArtifactInfrastructureFunctionDef for reference InfrastructureFunction.accessesArtifactInfrastructureFunction {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}
			Node_line assignedToNodesDef for reference InfrastructureFunction.assignedToNodes {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration filled square
				target decoration filled square
			}
		Node_element ArtifactDef
		for class Artifact {
				label elementName
				label icon false
				label placement internal
				size (155, 95)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Artifact.gif"
					icon size ( 150 , 90)
					icon position Point (75 , 45)
				}
				phantom true
		}						
			Node_line composesArtifactArtifactDef for reference Artifact.composesArtifactArtifact {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
			Node_line aggregatesArtifactArtifactDef for reference Artifact.aggregatesArtifactArtifact {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
			Node_line realizesSystemSoftwareArtifactDef for reference Artifact.realizesSystemSoftwareArtifact {
				label "realizes"
				style LineaPunteadaSeparadaSuave
				source decoration none
				target decoration arrow
			}		
	}

Rules definition {
	}
	Interaction definition {
		Interaction elements {
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// APPLICATION LAYER
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			Wizard WizardForCreateBasicDataObject for context class DataObject {
					title "DataObjectWizard"
					description "Create Location DataObject"
					type create
					pages {
						Page {
							title "DataObject Attributes"
							description "Define DataObject Attributes"
							Attributes to show {
								("elementName", "Name", textField, "DataObject")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}

			Wizard WizardForCreateBasicApplicationService
			for context class ApplicationService {
				title "ApplicationServiceWizard"
				description "Create ApplicationService Wizard"
				type create
				pages {
					Page {
						title "ApplicationService Attributes"
						description "Define ApplicationService Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicApplicationFunction
			for context class ApplicationFunction {
				title "ApplicationFunctionWizard"
				description "Create ApplicationFunction Wizard"
				type create
				pages {
					Page {
						title "ApplicationFunction Attributes"
						description "Define ApplicationFunction Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicApplicationInteraction
			for context class ApplicationInteraction {
				title "ApplicationInteractionWizard"
				description "Create ApplicationInteraction Wizard"
				type create
				pages {
					Page {
						title "ApplicationInteraction Attributes"
						description "Define ApplicationInteraction Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicApplicationInterface
			for context class ApplicationInterface {
				title "ApplicationInterfaceWizard"
				description "Create ApplicationInterface Wizard"
				type create
				pages {
					Page {
						title "ApplicationInterface Attributes"
						description "Define ApplicationInterface Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicApplicationComponent
			for context class ApplicationComponent {
				title "ApplicationComponentWizard"
				description "Create ApplicationComponent Wizard"
				type create
				pages {
					Page {
						title "ApplicationComponent Attributes"
						description "Define ApplicationComponent Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicApplicationCollaboration
			for context class ApplicationCollaboration {
				title "ApplicationCollaborationWizard"
				description "Create ApplicationCollaboration Wizard"
				type create
				pages {
					Page {
						title "ApplicationCollaboration Attributes"
						description "Define ApplicationCollaboration Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// BUSINESS LAYER
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		/////////NUEVOS ///////NUEVOS/////////NUEVOS ///////NUEVOS/////////NUEVOS ///////NUEVOS/////////NUEVOS ///////NUEVOS/////////NUEVOS ///////NUEVOS/////////NUEVOS ///////NUEVOS
				
			Wizard WizardForCreateBasicActivity for context class Activity {
					title "ActivityWizard"
					description "Create Location Wizard"
					type create
					pages {
						Page {
							title "Activity Attributes"
							description "Define Activity Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Activity")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}

					}
					default buttons true
				}
				
			Wizard WizardForCreateBasicAutomaticActivity for context class AutomaticActivity {
					title "AutomaticActivityWizard"
					description "Create Location Wizard"
					type create
					pages {
						Page {
							title "AutomaticActivity Attributes"
							description "Define AutomaticActivity Attributes"
							Attributes to show {
								("elementName", "Name", textField, "AutomaticActivity")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}

					}
					default buttons true
				}
			Wizard WizardForCreateBasicManualActivity for context class ManualActivity {
					title "ManualActivityWizard"
					description "Create Location Wizard"
					type create
					pages {
						Page {
							title "ManualActivity Attributes"
							description "Define ManualActivity Attributes"
							Attributes to show {
								("elementName", "Name", textField, "ManualActivity")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}

					}
					default buttons true
				}
				
				
				Wizard WizardForCreateBasicOrganization for context class Organization {
					title "OrganizationWizard"
					description "Create Organization Wizard"
					type create
					pages {
						Page {
							title "Organization Attributes"
							description "Define Organization Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Organization")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}

					}
					default buttons true
				}
				  Wizard WizardForCreateBasicTask for context class Task {
					title "TaskWizard"
					description "Create Task Wizard"
					type create
					pages {
						Page {
							title "Task Attributes"
							description "Define Task Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Task")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}

					}
					default buttons true
				}
				
			  Wizard WizardForCreateBasicAssignedTask for context class AssignedTask {
					title "TaskWizard"
					description "Create Task Wizard"
					type create
					pages {
						Page {
							title "Task Attributes"
							description "Define Task Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Task")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}

					}
					default buttons true
				}
				//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN
				Wizard WizardForCreateBasicBusinessProcess for context class BusinessProcess {
					title "BusinessProcessWizard"
					description "Create BusinessProcess Wizard"
					type create
					pages {
						Page {
							title "General Information"
							description "Define General Information"
							Attributes to show {
								("elementName", "Name", textField, "Process_")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}

				Wizard WizardForCreateBasicLocation for context class Location {
					title "LocationWizard"
					description "Create Location Wizard"
					type create
					pages {
						Page {
							title "Location Attributes"
							description "Define Location Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Location_")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}

					}
					default buttons true
				}
			
				Wizard WizardForCreateBasicBusinessRole for context class BusinessRole {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
				
				
		Wizard WizardForCreateBasicBusinessActor for context class BusinessActor {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
		Wizard WizardForCreateBasicBusinessCollaboration for context class BusinessCollaboration {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}

		Wizard WizardForCreateBasicBusinessInterface for context class BusinessInterface {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}

		Wizard WizardForCreateBasicBusinessObject for context class BusinessObject {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
				
		Wizard WizardForCreateBasicBusinessFunction for context class BusinessFunction {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}

			Wizard WizardForCreateBasicBusinessEvent for context class BusinessEvent {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
				
								Wizard WizardForCreateBasicBusinessService for context class BusinessService {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
				
							Wizard WizardForCreateBasicBusinessInteraction for context class BusinessInteraction {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
				
					Wizard WizardForCreateBasicRepresentation for context class Representation {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
					Wizard WizardForCreateBasicValue for context class Value {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
					Wizard WizardForCreateBasicMeaning for context class Meaning {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
					Wizard WizardForCreateBasicContract for context class Contract {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
				
			Wizard WizardForCreateBasicProduct for context class Product {

					title "ElementWizard"
					description "Create Element Wizard"
					type create
					pages {
						Page {
							title "Element Attributes"
							description "Define Element Attributes"
							Attributes to show {
								("elementName", "Name", textField, "Element")
								("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// TECHNOLOGY LAYER
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
					
			Wizard WizardForCreateBasicInfrastructureFunction
			for context class InfrastructureFunction {
				title "InfrastructureFunctionWizard"
				description "Create InfrastructureFunction Wizard"
				type create
				pages {
					Page {
						title "InfrastructureFunction Attributes"
						description "Define InfrastructureFunction Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			
			Wizard WizardForCreateBasicLoadBalancingFunction
			for context class LoadBalancingFunction {
				title "LoadBalancingFunctionWizard"
				description "Create LoadBalancingFunction Wizard"
				type create
				pages {
					Page {
						title "LoadBalancingFunction Attributes"
						description "Define LoadBalancingFunction Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			
			
			Wizard WizardForCreateBasicArtifact
			for context class Artifact {
				title "ArtifactWizard"
				description "Create Artifact Wizard"
				type create
				pages {
					Page {
						title "Artifact Attributes"
						description "Define Artifact Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicInfrastructureService
			for context class InfrastructureService {
				title "InfrastructureServiceWizard"
				description "Create InfrastructureService Wizard"
				type create
				pages {
					Page {
						title "InfrastructureService Attributes"
						description "Define InfrastructureService Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicInfrastructureInterface
			for context class InfrastructureInterface {
				title "InfrastructureInterfaceWizard"
				description "Create InfrastructureInterface Wizard"
				type create
				pages {
					Page {
						title "InfrastructureInterface Attributes"
						description "Define InfrastructureInterface Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicNode
			for context class Node {
				title "NodeWizard"
				description "Create Node Wizard"
				type create
				pages {
					Page {
						title "Node Attributes"
						description "Define Node Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicSystemSoftware
			for context class SystemSoftware {
				title "SystemSoftwareWizard"
				description "Create SystemSoftware Wizard"
				type create
				pages {
					Page {
						title "SystemSoftware Attributes"
						description "Define SystemSoftware Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicDevice
			for context class Device {
				title "DeviceWizard"
				description "Create Device Wizard"
				type create
				pages {
					Page {
						title "Device Attributes"
						description "Define Device Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicCommunicationPath
			for context class CommunicationPath {
				title "CommunicationPathWizard"
				description "Create CommunicationPath Wizard"
				type create
				pages {
					Page {
						title "CommunicationPath Attributes"
						description "Define CommunicationPath Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}
			Wizard WizardForCreateBasicNetwork
			for context class Network {
				title "NetworkWizard"
				description "Create Network Wizard"
				type create
				pages {
					Page {
						title "Network Attributes"
						description "Define Network Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
							}
							References to show {
		
							}
							Additional buttons {
		 
							}
						}
					}
					default buttons true
				}		
			}
		Statements {
			
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// APPLICATION LAYER
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Actions for type DataObject {
				on mouse double click do{
					show wizard WizardForCreateBasicDataObject
				}
			}
			Actions for type ApplicationService {
				on mouse double click do {
					show wizard WizardForCreateBasicApplicationService
				}
			}
			Actions for type ApplicationFunction {
				on mouse double click do {
					show wizard WizardForCreateBasicApplicationFunction
				}
			}
			Actions for type ApplicationInteraction {
				on mouse double click do{
					show wizard WizardForCreateBasicApplicationInteraction
				}
			}
			Actions for type ApplicationInterface {
				on mouse double click do{
					show wizard WizardForCreateBasicApplicationInterface
				}
			}
			Actions for type ApplicationComponent {
				on mouse double click do{
					show wizard WizardForCreateBasicApplicationComponent
				}
			}
			Actions for type ApplicationCollaboration {
				on mouse double click do{
					show wizard WizardForCreateBasicApplicationCollaboration
				}
			}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// BUSINESS LAYER
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////NUEVOS //////NUEVOS			////NUEVOS //////NUEVOS			////NUEVOS //////NUEVOS			////NUEVOS //////NUEVOS			////NUEVOS //////NUEVOS			////NUEVOS //////NUEVOS			
	Actions for type Task {
				on mouse double click do{
						show wizard WizardForCreateBasicTask
					}				
				}
			Actions for type Organization {
				on mouse double click do{
						show wizard WizardForCreateBasicOrganization
					}				
				}
				Actions for type Activity {
					on mouse double click do{
						show wizard WizardForCreateBasicActivity
					}				
				}
							Actions for type ManualActivity {
				on mouse double click do{
						show wizard WizardForCreateBasicManualActivity
					}				
				}
		Actions for type AutomaticActivity {
				on mouse double click do{
						show wizard WizardForCreateBasicAutomaticActivity
					}				
				}
					Actions for type AssignedTask {
					on mouse double click do{
						show wizard WizardForCreateBasicAssignedTask
					}				
				}
				
//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN//////////ESTOS YA ESTABAN
				Actions for type BusinessProcess {
					on mouse double click do {
						show wizard WizardForCreateBasicBusinessProcess
					}
				}
				Actions for type Location {
					on mouse double click do {
						show wizard WizardForCreateBasicLocation 
					}				
				}
				Actions for type BusinessRole {
					on create do {
						show wizard WizardForCreateBasicBusinessRole
					}				
				}
			Actions for type BusinessActor {
					on mouse double click do {
						show wizard WizardForCreateBasicBusinessActor
					}				
				}
				Actions for type BusinessService {
					on mouse double click do {
						show wizard WizardForCreateBasicBusinessService
					}				
				}
				Actions for type BusinessFunction {
					on mouse double click do {
						show wizard WizardForCreateBasicBusinessFunction
					}				
				}
					Actions for type BusinessCollaboration {
					on mouse double click do {
						show wizard WizardForCreateBasicBusinessCollaboration
					}				
				}
					Actions for type BusinessInterface {
					on mouse double click do {
						show wizard WizardForCreateBasicBusinessInterface
					}				
				}
					Actions for type BusinessObject {
					on mouse double click do {
						show wizard WizardForCreateBasicBusinessObject
					}				
				}
				
				Actions for type BusinessEvent {
					on mouse double click do {
						show wizard WizardForCreateBasicBusinessEvent
					}				
				}
				Actions for type BusinessInteraction {
					on mouse double click do {
						show wizard WizardForCreateBasicBusinessInteraction
					}				
				}
				Actions for type Value {
					on mouse double click do {
						show wizard WizardForCreateBasicValue
					}				
				}
				Actions for type Contract {
					on mouse double click do {
						show wizard WizardForCreateBasicContract 
					}				
				}
				Actions for type Product {
					on mouse double click do {
						show wizard WizardForCreateBasicProduct
					}				
				}
						Actions for type Meaning {
					on mouse double click do {
						show wizard WizardForCreateBasicMeaning
					}				
				}
						Actions for type Representation {
					on mouse double click do {
						show wizard WizardForCreateBasicRepresentation
					}				
				}
		
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////// TECHNOLOGY LAYER
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				Actions for type Artifact {
				on mouse double click do{
					show wizard WizardForCreateBasicArtifact
				}
			}
			Actions for type InfrastructureService {
				on mouse double click do{
					show wizard WizardForCreateBasicInfrastructureService
				}
			}
			Actions for type InfrastructureInterface {
				on mouse double click do{
					show wizard WizardForCreateBasicInfrastructureInterface
				}
			}
			Actions for type Node {
				on mouse double click do{
					show wizard WizardForCreateBasicNode
				}
			}
			Actions for type SystemSoftware {
				on mouse double click do {
					show wizard WizardForCreateBasicSystemSoftware
				}
			}
			Actions for type Device {
				on mouse double click do{
					show wizard WizardForCreateBasicDevice
				}
			}
			Actions for type CommunicationPath {
				on mouse double click do{
					show wizard WizardForCreateBasicCommunicationPath
				}
			}
			Actions for type Network {
				on mouse double click do{
					show wizard WizardForCreateBasicNetwork
				}
			}
				Actions for type LoadBalancingFunction {
				on mouse double click do{
					show wizard WizardForCreateBasicLoadBalancingFunction
				}
			}
				Actions for type InfrastructureFunction {
				on mouse double click do{
					show wizard WizardForCreateBasicInfrastructureFunction
				}
			}
		}
	}
	}
	