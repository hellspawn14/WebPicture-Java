
import "/model/TechnologyLayerArch.ecore"
as MM
Graphical representation ArchimateExtendidoTechLayer {
	reference package technologyLayer
	root ArchimateModel
	Palette for ArchimateModel {
		Tool group ArchimateTechonologyPalette {
			description "Technology Elements"
			Tool group StructuralConceptsTechnology {
				description "Structural Elements"
				Creation button for class Node {
					name "Node"
					description "Node" icon "/imagenes/NodeIcon.gif"
				}
				Creation button for class Device {
					name "Device"
					description "Device" icon "/imagenes/DeviceIcon.gif"
				}
				Creation button for class SystemSoftware {
					name "SystemSoftware"
					description "SystemSoftware" icon "/imagenes/SystemSoftwareIcon.gif"
				}
				Creation button for class InfrastructureInterface {
					name "InfrastructureInterface"
					description "InfrastructureInterface" icon "/imagenes/InfrastructureInterfaceIcon.gif"
				}
				Creation button for class Network {
					name "Network"
					description "Network" icon "/imagenes/NetworkIcon.gif"
				}
				Creation button for class CommunicationPath {
					name "CommunicationPath"
					description "CommunicationPath" icon "/imagenes/CommunicationPathIcon.gif"
				}
			}
			Tool group BehavioralConceptsTechnology {
				description "Behavioral Elements"
				Creation button for class InfrastructureService {
					name "InfrastructureService"
					description "InfrastructureService" icon "/imagenes/InfrastructureServiceIcon.gif"
				}
				
				Creation button for class InfrastructureFunction {
					name "InfrastructureFunction"
					description "InfrastructureFunction" icon "/imagenes/InfrastructureFunction.gif"
				}
				
				Creation button for class LoadBalancingFunction {
					name "LoadBalancingFunction"
					description "LoadBalancingFunction" icon "/imagenes/LoadBalancingFunction.gif"
				}
			}
			Tool group InformationalConceptsTechnology {
				description "Informational Elements"
				Creation button for class Artifact {
					name "Artifact"
					description "Artifact" icon "/imagenes/ArtifactIcon.gif"
				}
			}
		}
	}
     	Style definition {
			Color black (0, 0, 0)			
			Color white (255, 255, 255)			
			Color yellow (255, 255, 0)			
			Color blue (0, 0, 255)			
			Color red (255, 0, 0)			
			Color green (0, 255, 0)		
			Color Withe (255, 255, 255)			
			Color BusinessColor (241, 241, 181)			
			Color greenTestXX (44, 255, 45)	
			
			
			Line style LineaSolidaSuave {
				width 1
				type solid
				color black
			}
			Line style LineaSolidaMedia {
				width 2
				type solid
				color black
			}
			Line style LineaSolidaPronunciada {
				width 4
				type solid
				color black
			}
			Line style LineaPunteadaSeparadaSuave {
				width 1
				type dot
				color black
			}
			Line style LineaPunteadaSeparadaMedia {
				width 2
				type dot
				color black
			}
			Line style LineaPunteadaSeparadaPronunciada {
				width 4
				type dot
				color black
			}
			Line style LineaPunteadaContinuaSuave {
				width 1
				type dashdot
				color black
			}
			Line style LineaPunteadaContinuaMedia {
				width 2
				type dashdot
				color black
			}
			Line style LineaPunteadaContinuaPronunciada {
				width 4
				type dashdot
				color black
			}

		
			Rounded rectRounded10 
			{
				radiox 10
				radioy 10
			}
			Ellipse ellip {
				proportion ( 22, 17)
			}
			Regular polygon deca {
				vertex quantity 8
				start angle 90
			}
		}

	Graphical definition {
					///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	/////////////////////////////////ELEMENTOS NUEVOS
	//////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////		
				Node_element LoadBalancingFunctionDef
		for class LoadBalancingFunction {
				label elementName
				label icon false
				label placement external
				size (60, 60)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "LoadBalancingFunction.gif"
					icon size ( 50 , 50)
					icon position Point (30, 30)
				}
				phantom true
		}	
		
		Node_line composesLoadBalancingFunctionLoadBalancingFunctionDef for reference LoadBalancingFunction.composesLoadBalancingFunctionLoadBalancingFunction {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
		Node_line aggregatesLoadBalancingFunctionLoadBalancingFunctionDef for reference LoadBalancingFunction.aggregatesLoadBalancingFunctionLoadBalancingFunction {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
		Node_line associatedWithSystemSoftwaresDef for reference LoadBalancingFunction.associatedWithSystemSoftwares {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
			
	///////////////////////////////////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	
	/////////////////////////////////ELEMENTOS ORIGINALES
	//////////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////	/////////////////////////		
		
		Node_element NodeDef
		for class Node {
				label elementName
				label icon false
				label placement external
				size (60, 60)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Node.gif"
					icon size ( 50 , 50)
					icon position Point (30, 30)
				}
				phantom true
		}
	 	Node_line composesNodeNodeDef for reference Node.composesNodeNode {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
		Node_line aggregatesNodeNodeDef for reference Node.aggregatesNodeNode {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
		
		Node_line usesInfrastructureInterfaceNodeDef for reference Node.usesInfrastructureInterfaceNode {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
		}
		Node_line usesInfrastructureServiceNodeDef for reference Node.usesInfrastructureServiceNode {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
		}	
		Node_line assignedToArtifactNodeDef for reference Node.assignedToArtifactNode {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration square
				target decoration square
			}	
		Node_line assignedToInfrastructureFunctionNodeDef for reference Node.assignedToInfrastructureFunctionNode {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration square
				target decoration square
			}	
		Node_line associatedWithCommunicationPathNodeDef for reference Node.associatedWithCommunicationPathNode {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
					

		Node_element DeviceDef
		for class Device {
				label elementName
				label icon false
				label placement external
				size (60, 60)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Device.gif"
					icon size ( 50 , 50)
					icon position Point (30, 30)
				}
				phantom true
		}
		
		Node_line composesDeviceDeviceDef for reference Device.composesDeviceDevice {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
		Node_line aggregatesDeviceDeviceDef for reference Device.aggregatesDeviceDevice {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
		Node_line assignedToSystemSoftwareDeviceDef for reference Device.assignedToSystemSoftwareDevice {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration square
				target decoration square
			}	
		Node_line associatedWithNetworkDeviceDef for reference Device.associatedWithNetworkDevice {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
		
		Node_element SystemSoftwareDef
		for class SystemSoftware {
				label elementName
				label icon false
				label placement external
				size (60, 60)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "SystemSoftware.gif"
					icon size ( 50 , 50)
					icon position Point (30, 30)
				}
				phantom true
		}
				
		Node_line composesSystemSoftwareSystemSoftwareDef for reference SystemSoftware.composesSystemSoftwareSystemSoftware {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
		Node_line aggregatesSystemSoftwareSystemSoftwareDef for reference SystemSoftware.aggregatesSystemSoftwareSystemSoftware {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
		Node_line loadBalancingFunctionDef for reference SystemSoftware.loadBalancingFunction {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}	
		
		
		Node_element InfrastructureInterfaceDef
		for class InfrastructureInterface {
				label elementName
				label icon false
				label placement external
				size (60, 60)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "InfrastructureInterface.gif"
					icon size ( 50 , 50)
					icon position Point (30, 30)
				}
				phantom true
		}
						
		Node_line composesInfrastructureInterfaceInfrastructureInterfaceDef for reference InfrastructureInterface.composesInfrastructureInterfaceInfrastructureInterface {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
		Node_line aggregatesInfrastructureInterfaceInfrastructureInterfaceDef for reference InfrastructureInterface.aggregatesInfrastructureInterfaceInfrastructureInterface {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
		Node_line composesNodeInfrastructureInterfaceDef for reference InfrastructureInterface.composesNodeInfrastructureInterface {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}	
		Node_line assignedToInfrastructureServiceInfrastructureInterface for reference InfrastructureInterface.assignedToInfrastructureServiceInfrastructureInterface {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration square
				target decoration square
			}	
		
			Node_element NetworkDef
		for class Network {
				label elementName
				label icon false
				label placement external
				size (60, 60)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Network.gif"
					icon size ( 50 , 50)
					icon position Point (30, 30)
				}
				phantom true
		}						
		Node_line composesNetworkNetworkDef for reference Network.composesNetworkNetwork {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
		Node_line aggregatesNetworkNetworkDef for reference Network.aggregatesNetworkNetwork {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
		Node_line associatedWithDeviceNetworkDef for reference Network.associatedWithDeviceNetwork {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}
		Node_line realizesCommunicationPathNetworkDef for reference Network.realizesCommunicationPathNetwork {
				label "realizes"
				style LineaPunteadaSeparadaPronunciada
				source decoration none
				target decoration arrow
			}
		
		Node_element CommunicationPathDef
		for class CommunicationPath {
				label elementName
				label icon false
				label placement external
				size (60, 60)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "CommunicationPath.gif"
					icon size ( 50 , 50)
					icon position Point (30, 30)
				}
				phantom true
		}						
		Node_line composesCommunicationPathCommunicationPathDef for reference CommunicationPath.composesCommunicationPathCommunicationPath {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
		Node_line aggregatesCommunicationPathCommunicationPathDef for reference CommunicationPath.aggregatesCommunicationPathCommunicationPath {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}	
		Node_line associatedWithNodeCommunicationPathDef for reference CommunicationPath.associatedWithNodeCommunicationPath {
				label "associatedWith"
				style LineaSolidaMedia
				source decoration none
				target decoration none
			}	
		
		Node_element InfrastructureServiceDef
		for class InfrastructureService {
				label elementName
				label icon false
				label placement external
				size (60, 60)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "InfrastructureService.gif"
					icon size ( 50 , 50)
					icon position Point (30, 30)
				}
				phantom true
		}						
		Node_line composesInfrastructureServiceInfrastructureServiceDef for reference InfrastructureService.composesInfrastructureServiceInfrastructureService {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
		Node_line aggregatesInfrastructureServiceInfrastructureServiceDef for reference InfrastructureService.aggregatesInfrastructureServiceInfrastructureService {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
		Node_line accessesArtifactInfrastructureServiceDef for reference InfrastructureService.accessesArtifactInfrastructureService {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}		
			
		Node_element InfrastructureFunctionDef
		for class InfrastructureFunction {
				label elementName
				label icon false
				label placement external
				size (60, 60)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "InfrastructureFunction.gif"
					icon size ( 50 , 50)
					icon position Point (30, 30)
				}
				phantom true
		}						
		Node_line composesInfrastructureFunctionInfrastructureFunctionDef for reference InfrastructureFunction.composesInfrastructureFunctionInfrastructureFunction {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
		Node_line aggregatesInfrastructureFunctionInfrastructureFunctionDef for reference InfrastructureFunction.aggregatesInfrastructureFunctionInfrastructureFunction {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
		Node_line triggersToInfrastructureFunctionInfrastructureFunctionDef for reference InfrastructureFunction.triggersToInfrastructureFunctionInfrastructureFunction {
				label "triggers"
				style LineaSolidaPronunciada
				source decoration none
				target decoration filled closed arrow
			}
		Node_line flowsToInfrastructureFunctionInfrastructureFunctionDef for reference InfrastructureFunction.flowsToInfrastructureFunctionInfrastructureFunction {
				label "flowsTo"
				style LineaPunteadaContinuaMedia
				source decoration none
				target decoration filled closed arrow
			}

		Node_line usesInfrastructureServiceInfrastructureFunctionDef for reference InfrastructureFunction.usesInfrastructureServiceInfrastructureFunction {
				label "uses"
				style LineaSolidaSuave
				source decoration none
				target decoration arrow
			}
		Node_line realizesInfrastructureServiceInfrastructureFunctionDef for reference InfrastructureFunction.realizesInfrastructureServiceInfrastructureFunction {
				label "realizes"
				style LineaPunteadaSeparadaPronunciada
				source decoration none
				target decoration arrow
			}
		Node_line accessesArtifactInfrastructureFunctionDef for reference InfrastructureFunction.accessesArtifactInfrastructureFunction {
				label "accesses"
				style LineaPunteadaContinuaMedia
	            source decoration none
				target decoration arrow
			}
		Node_line assignedToNodesDef for reference InfrastructureFunction.assignedToNodes {
				label "assignedTo"
				style LineaSolidaSuave
				source decoration square
				target decoration square
			}
			
		Node_element ArtifactDef
		for class Artifact {
				label elementName
				label icon false
				label placement external
				size (60, 60)
				Regular figure extends rectRounded10 {
					background color BusinessColor
					border LineaSolidaMedia
					icon path "Artifact.gif"
					icon size ( 50 , 50)
					icon position Point (30, 30)
				}
				phantom true
		}						
		Node_line composesArtifactArtifactDef for reference Artifact.composesArtifactArtifact {
				label "composes"
				style LineaSolidaMedia
				source decoration filled rhomb
				target decoration none
			}
		Node_line aggregatesArtifactArtifactDef for reference Artifact.aggregatesArtifactArtifact {
				label "aggregates"
				style LineaSolidaMedia
	            source decoration rhomb
				target decoration none
			}
		Node_line realizesSystemSoftwareArtifactDef for reference Artifact.realizesSystemSoftwareArtifact {
				label "realizes"
				style LineaPunteadaSeparadaPronunciada
				source decoration none
				target decoration arrow
			}
	}
	Rules definition {
	}
	Interaction definition {
		Interaction elements {
			
			Wizard WizardForCreateBasicInfrastructureFunction
			for context class InfrastructureFunction {
				title "InfrastructureFunctionWizard"
				description "Create InfrastructureFunction Wizard"
				type create
				pages {
					Page {
						title "InfrastructureFunction Attributes"
						description "Define InfrastructureFunction Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
						}
					}
				} default buttons true
			}
			
			Wizard WizardForCreateBasicLoadBalancingFunction
			for context class LoadBalancingFunction {
				title "LoadBalancingFunctionWizard"
				description "Create LoadBalancingFunction Wizard"
				type create
				pages {
					Page {
						title "LoadBalancingFunction Attributes"
						description "Define LoadBalancingFunction Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
						}
					}
				} default buttons true
			}
			
			
			Wizard WizardForCreateBasicArtifact
			for context class Artifact {
				title "ArtifactWizard"
				description "Create Artifact Wizard"
				type create
				pages {
					Page {
						title "Artifact Attributes"
						description "Define Artifact Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicInfrastructureService
			for context class InfrastructureService {
				title "InfrastructureServiceWizard"
				description "Create InfrastructureService Wizard"
				type create
				pages {
					Page {
						title "InfrastructureService Attributes"
						description "Define InfrastructureService Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicInfrastructureInterface
			for context class InfrastructureInterface {
				title "InfrastructureInterfaceWizard"
				description "Create InfrastructureInterface Wizard"
				type create
				pages {
					Page {
						title "InfrastructureInterface Attributes"
						description "Define InfrastructureInterface Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicNode
			for context class Node {
				title "NodeWizard"
				description "Create Node Wizard"
				type create
				pages {
					Page {
						title "Node Attributes"
						description "Define Node Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicSystemSoftware
			for context class SystemSoftware {
				title "SystemSoftwareWizard"
				description "Create SystemSoftware Wizard"
				type create
				pages {
					Page {
						title "SystemSoftware Attributes"
						description "Define SystemSoftware Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicDevice
			for context class Device {
				title "DeviceWizard"
				description "Create Device Wizard"
				type create
				pages {
					Page {
						title "Device Attributes"
						description "Define Device Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicCommunicationPath
			for context class CommunicationPath {
				title "CommunicationPathWizard"
				description "Create CommunicationPath Wizard"
				type create
				pages {
					Page {
						title "CommunicationPath Attributes"
						description "Define CommunicationPath Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicNetwork
			for context class Network {
				title "NetworkWizard"
				description "Create Network Wizard"
				type create
				pages {
					Page {
						title "Network Attributes"
						description "Define Network Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
							("description", "Description", textArea, "Insert Description...")
						}
					}
				} default buttons true
			}
		}
		Statements {
			Actions for type Artifact {
				on create
				do {
					show wizard WizardForCreateBasicArtifact
				}
			}
			Actions for type InfrastructureService {
				on create
				do {
					show wizard WizardForCreateBasicInfrastructureService
				}
			}
			Actions for type InfrastructureInterface {
				on create
				do {
					show wizard WizardForCreateBasicInfrastructureInterface
				}
			}
			Actions for type Node {
				on create
				do {
					show wizard WizardForCreateBasicNode
				}
			}
			Actions for type SystemSoftware {
				on create
				do {
					show wizard WizardForCreateBasicSystemSoftware
				}
			}
			Actions for type Device {
				on create
				do {
					show wizard WizardForCreateBasicDevice
				}
			}
			Actions for type CommunicationPath {
				on create
				do {
					show wizard WizardForCreateBasicCommunicationPath
				}
			}
			Actions for type Network {
				on create
				do {
					show wizard WizardForCreateBasicNetwork
				}
			}
				Actions for type LoadBalancingFunction {
				on create
				do {
					show wizard WizardForCreateBasicLoadBalancingFunction
				}
			}
				Actions for type InfrastructureFunction {
				on create
				do {
					show wizard WizardForCreateBasicInfrastructureFunction
				}
			}
		}
	}
}