import "/model/ArchimateComplete.ecore" as MM
Graphical representation Archimate2 {
	reference package archimateC2
	root ArchimateModel
	Palette for ArchimateModel {
		Tool group AppPalette {
			description "Application Layer"
			Tool group StructuralPalette {
				description "Structural Elements"
			}
			Tool group BehavioralPalette {
				description "Behavioral Elements"
			}
			Creation button for class ApplicationComponent {
				name "ApplicationComponent"
				description "ApplicationComponent" icon
				"/imagenes/ApplicationComponentIcon.gif"
			}
			Creation button for class ApplicationCollaboration {
				name "ApplicationCollaboration"
				description "ApplicationCollaboration" icon
				"/imagenes/ApplicationCollaborationIcon.gif"
			}
			Creation button for class ApplicationInterface {
				name "ApplicationInterface"
				description "ApplicationInterface" icon
				"/imagenes/ApplicationInterfaceIcon.gif"
			}
			Creation button for class DataObject {
				name "DataObject"
				description "DataObject" icon "/imagenes/DataObjectIcon.gif"
			}
			Creation button for class ApplicationFunction {
				name "ApplicationFunction"
				description "ApplicationFunction" icon
				"/imagenes/ApplicationFunctionIcon.gif"
			}
			Creation button for class ApplicationInteraction {
				name "ApplicationInteraction"
				description "ApplicationInteraction" icon
				"/imagenes/ApplicationInteractionIcon.gif"
			}
			Creation button for class ApplicationService {
				name "ApplicationService"
				description "ApplicationService" icon
				"/imagenes/ApplicationServiceIcon.gif"
			}
		}
		Tool group ArchimatePalette {
			description "Archimate Business Palette"
			Tool group PassiveStructures {
				description "Passive Structure"
			}
			Tool group BehaviorElements {
				description "Behavior Elements"
			}
			Tool group ActiveStructures {
				description "Active Structure"
			}
			Creation button for class Value {
				name "Value"
				description "Value" icon "/imagenes/ValueIcon.gif"
			}
			Creation button for class Product {
				name "Product"
				description "Product" icon "/imagenes/ProductIcon.gif"
			}
			Creation button for class Contract {
				name "Contract"
				description "Contract" icon "/imagenes/ContractIcon.gif"
			}
			Creation button for class Meaning {
				name "Meaning"
				description "Meaning" icon "/imagenes/MeaningIcon.gif"
			}
			Creation button for class Representation {
				name "Representation"
				description "Representation" icon "/imagenes/RepresentationIcon.gif"
			}
			Creation button for class BusinessObject {
				name "BusinessObject"
				description "BusinessObject" icon "/imagenes/BusinessObjectIcon.gif"
			}
			Creation button for class BusinessService {
				name "BusinessService"
				description "BusinessService" icon "/imagenes/BusinessServiceIcon.gif"
			}
			Creation button for class BusinessProcess {
				name "BusinessProcess"
				description "BusinessProcess" icon "/imagenes/BusinessProcessIcon.gif"
			}
			Creation button for class BusinessFunction {
				name "BusinessFunction"
				description "BusinessFunction" icon "/imagenes/BusinessFunctionIcon.gif"
			}
			Creation button for class BusinessInteraction {
				name "BusinessInteraction"
				description "BusinessInteraction" icon
				"/imagenes/BusinessInteractionIcon.gif"
			}
			Creation button for class BusinessEvent {
				name "BusinessEvent"
				description "BusinessEvent" icon "/imagenes/BusinessEventIcon.gif"
			}
			Creation button for class Location {
				name "Location"
				description "Location" icon "/imagenes/LocationIcon.gif"
			}
			Creation button for class BusinessInterface {
				name "BusinessInterface"
				description "BusinessInterface" icon "/imagenes/BusinessInterfaceIcon.gif"
			}
			Creation button for class BusinessRole {
				name "BusinessRole"
				description "BusinessRole" icon "/imagenes/BusinessRoleIcon.gif"
			}
			Creation button for class BusinessCollaboration {
				name "BusinessCollaboration"
				description "BusinessCollaboration" icon
				"/imagenes/BusinessCollaborationIcon.gif"
			}
			Creation button for class BusinessActor {
				name "BusinessActor"
				description "BusinessActor" icon "/images/actor.gif"
			}
		}
		Tool group ElementsPalette {
			description "Technology Elements"
			Tool group StructuralConcepts {
				description "StructuralConcepts"
			}
			Tool group BehavioralElements {
				description "Behavioral Elements"
			}
			Tool group InformationalConcepts {
				description "Informational Concepts"
			}
			Creation button for class Node {
				name "Node"
				description "Node" icon "/imagenes/NodeIcon.gif"
			}
			Creation button for class Device {
				name "Device"
				description "Device" icon "/imagenes/DeviceIcon.gif"
			}
			Creation button for class SystemSoftware {
				name "SystemSoftware"
				description "SystemSoftware" icon "/imagenes/SystemSoftwareIcon.gif"
			}
			Creation button for class InfrastructureInterface {
				name "InfrastructureInterface"
				description "InfrastructureInterface" icon
				"/imagenes/InfrastructureInterfaceIcon.gif"
			}
			Creation button for class Network {
				name "Network"
				description "Network" icon "/imagenes/NetworkIcon.gif"
			}
			Creation button for class CommunicationPath {
				name "CommunicationPath"
				description "CommunicationPath" icon "/imagenes/CommunicationPathIcon.gif"
			}
			Creation button for class InfrastructureService {
				name "InfrastructureService"
				description "InfrastructureService" icon
				"/imagenes/InfrastructureServiceIcon.gif"
			}
			Creation button for class Artifact {
				name "Artifact"
				description "Artifact" icon "/imagenes/ArtifactIcon.gif"
			}
		}
	}
	Style definition {
		Color black ( 0 ,  0 ,  0 )
		Line style BorderBlack1 {
			width 1
			type dot
			color black
		}
		Line style BorderBlackDash {
			width 1
			type dash
			color black
		}
		Color white ( 255 ,  255 ,  255 )
		Color yellow ( 255 ,  255 ,  0 )
		Color blue ( 0 ,  0 ,  255 )
		Color red ( 255 ,  0 ,  0 )
		Color green ( 0 ,  255 ,  0 )
		Line style BorderBlack3 {
			width 3
			type solid
			color black
		}
		Line style BorderBlack4 {
			width 4
			type solid
			color black
		}
		Line style BorderRed2 {
			width 2
			type solid
			color red
		}
		Rounded rectRounded10 {
			radiox 10
			radioy 10
		}
		Rounded rectService {
			radiox 29
			radioy 45
		}
		Ellipse ellip {
			proportion ( 35 ,  25 )
		}
		Regular polygon deca {
			vertex quantity 8
			start angle 90
		}
		Color Withe ( 255 ,  255 ,  255 )
		Color AppLayerColor ( 117 ,  235 ,  235 )
		Color pasiveElementsColor ( 116 ,  232 ,  116 )
		Color behaviorElementsColor ( 241 ,  241 ,  181 )
		Color greenTestXX ( 44 ,  255 ,  45 )
		Line style BorderBlackDot {
			width 1
			type dot
			color black
		}
		Line style BorderBlack2 {
			width 2
			type solid
			color black
		}
		Line style Borderwhite {
			width 2
			type solid
			color white
		}
		Rounded imageService {
			radiox 29
			radioy 45
		}
		Rounded cuadrado {
			radiox 0
			radioy 0
		}
		Ellipse ValueImage {
			proportion ( 32 ,  19 )
		}
		Line style BorderWhite {
			width 3
			type solid
			color Withe
		}
		Color BusinessColor ( 241 ,  241 ,  181 )
		Line style BorderRedDot {
			width 4
			type dot
			color red
		}
		Line style BorderBusinessColor {
			width 3
			type solid
			color BusinessColor
		}
		Color activeElementsColor ( 117 ,  235 ,  235 )
		Color techLayer ( 116 ,  232 ,  116 )
	}
	Graphical
	definition {
		Node_line
		assignedToApplicationComponentBusinessBehaviorElement_Cloned_from_assignedToApplicationInterfaceApplicationServiceDef
		for reference
		BusinessBehaviorElement.assignedToApplicationComponentBusinessBehaviorElement {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line
		assignedToLocationNode_Cloned_from_assignedToApplicationInterfaceApplicationServiceDef
		for reference Node.assignedToLocationNode {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line
		assignedToLocationArtifact_Cloned_from_assignedToApplicationInterfaceApplicationServiceDef
		for reference Artifact.assignedToLocationArtifact {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line
		assignedToLocationApplicationComponent_Cloned_from_assignedToApplicationInterfaceApplicationServiceDef
		for reference ApplicationComponent.assignedToLocationApplicationComponent {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line
		assigedToBusinessServiceApplicationInterface_Cloned_from_assignedToApplicationInterfaceApplicationServiceDef
		for reference BusinessService.assigedToBusinessServiceApplicationInterface {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line
		realizedByBusinessObjectDataObject_Cloned_from_realizedByApplicationFunctionApplicationServiceDef
		for reference DataObject.realizedByBusinessObjectDataObject {
			label "realizedBy"
			style BorderBlackDash
			source decoration closed arrow
			target decoration none
		}
		Node_line
		usesBusinessBehaviorElementApplicationservice_Cloned_from_usesInfrastructureInterfaceNodeDef
		for reference
		ApplicationService.usesBusinessBehaviorElementApplicationservice {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line
		usesApplicationComponentInfrastructureService_Cloned_from_usesBusinessServiceBusinessBehaviorElementDef
		for reference
		ApplicationComponent.usesApplicationComponentInfrastructureService {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line
		usesApplicationFunctionInfrastructureService_Cloned_from_usesBusinessServiceBusinessBehaviorElementDef
		for reference
		ApplicationFunction.usesApplicationFunctionInfrastructureService {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line
		usesBusinessActorApplicationService_Cloned_from_usesBusinessServiceBusinessBehaviorElementDef
		for reference BusinessActor.usesBusinessActorApplicationService {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line
		usesBusinessRoleApplicationService_Cloned_from_usesBusinessServiceBusinessBehaviorElementDef
		for reference BusinessRole.usesBusinessRoleApplicationService {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line
		usesApplicationComponentInfrastructureInterface_Cloned_from_usesBusinessServiceBusinessBehaviorElementDef
		for reference
		ApplicationComponent.usesApplicationComponentInfrastructureInterface {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line
		usedByBusinessActorApplicationInterface_Cloned_from_usedByBusinessActorBusinessInterfaceDef
		for reference BusinessActor.usedByBusinessActorApplicationInterface {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line
		usedByBusinessRoleApplicationInterface_Cloned_from_usedByBusinessActorBusinessInterfaceDef
		for reference BusinessRole.usedByBusinessRoleApplicationInterface {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line
		aggregatesProductInfrastructureService_Cloned_from_aggregatesElementElementDef
		for reference InfrastructureService.aggregatesProductInfrastructureService {
			label "uses"
			style BorderBlack1
			source decoration rhomb
			target decoration arrow
		}
		Node_line
		realizesDataObjectArtifact_Cloned_from_realizesCommunicationPathNetworkDef
		for reference Artifact.realizesDataObjectArtifact {
			label "realizes"
			style BorderBlackDash
			source decoration none
			target decoration closed arrow
		}
		Node_line
		realizesApplicationComponentArtifact_Cloned_from_realizesCommunicationPathNetworkDef
		for reference Artifact.realizesApplicationComponentArtifact {
			label "realizes"
			style BorderBlackDash
			source decoration none
			target decoration closed arrow
		}
		Node_element ApplicationCollaborationDef
		for class ApplicationCollaboration {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color AppLayerColor
				border BorderBlack1 icon
				path "iconcollaboarationIconF.svg" icon
				size ( 24 ,  16 )
				icon
				position
				Point ( 115 ,  2 )
			}
			phantom true
		}
		Node_element DataObjectDef
		for class DataObject {
			label elementName
			label icon false
			label placement internal
			size ( 70 ,  50 )
			Image figure {
				image path "iconProductImage.svg"
			}
			phantom true
		}
		Node_element ApplicationServiceDef
		for class ApplicationService {
			label elementName
			label icon false
			label placement internal
			size ( 92 ,  52 )
			Regular figure extends rectService {
				background color AppLayerColor
				border BorderBlack2
			}
			phantom true
		}
		Node_element ApplicationFunctionDef
		for class ApplicationFunction {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color AppLayerColor
				border BorderBlack1 icon
				path "iconfunctionIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom true
		}
		Node_element ApplicationInteractionDef
		for class ApplicationInteraction {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color AppLayerColor
				border BorderBlack1 icon
				path "iconInteractionIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom true
		}
		Node_element ApplicationInterfaceDef
		for class ApplicationInterface {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color AppLayerColor
				border BorderBlack2 icon
				path "iconInterfaceIcon.svg" icon
				size ( 25 ,  16 )
				icon
				position
				Point ( 114 ,  2 )
			}
			phantom true
		}
		Node_element ApplicationComponentDef
		for class ApplicationComponent {
			label elementName
			label icon false
			label placement external
			size ( 100 ,  100 )
			Regular figure extends rectRounded10 {
				background color AppLayerColor
				border Borderwhite icon
				path "iconApplicationComponent.svg" 
				icon size ( 99 ,  99 )
				icon position Point ( 1 ,  1 )
			}
			phantom true
		}
		Node_line accessedByApplicationFunctionDataObjectDef
		for reference DataObject.accessedByApplicationFunctionDataObject {
			label "accessedBy"
			style BorderBlackDash
			source decoration arrow
			target decoration none
		}
		Node_line accessedByApplicationServiceDataObjectDef
		for reference DataObject.accessedByApplicationServiceDataObject {
			label "accessedBy"
			style BorderBlackDash
			source decoration arrow
			target decoration none
		}
		Node_line realizedByApplicationFunctionApplicationServiceDef
		for reference
		ApplicationService.realizedByApplicationFunctionApplicationService {
			label "realizedBy"
			style BorderBlackDash
			source decoration closed arrow
			target decoration none
		}
		Node_line usedByApplicationFunctionApplicationServiceDef
		for reference
		ApplicationService.usedByApplicationFunctionApplicationService {
			label "usedBy"
			style BorderBlack1
			source decoration arrow
			target decoration none
		}
		Node_line assignedToApplicationInterfaceApplicationServiceDef
		for reference
		ApplicationService.assignedToApplicationInterfaceApplicationService {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessesDataObjectApplicationServiceDef
		for reference ApplicationService.accessesDataObjectApplicationService {
			label "accesses"
			style BorderBlackDash
			source decoration arrow
			target decoration none
		}
		Node_line triggeredByApplicationFunctionApplicationFunctionDef
		for reference
		ApplicationFunction.triggeredByApplicationFunctionApplicationFunction {
			label "triggeredBy"
			style BorderBlack1
			source decoration closed arrow
			target decoration none
		}
		Node_line triggersToApplicationFunctionApplicationFunctionDef
		for reference
		ApplicationFunction.triggersToApplicationFunctionApplicationFunction {
			label "triggersTo"
			style BorderBlack1
			source decoration none
			target decoration closed arrow
		}
		Node_line flowsToApplicationFunctionApplicationFunctionDef
		for reference
		ApplicationFunction.flowsToApplicationFunctionApplicationFunction {
			label "flowsTo"
			style BorderBlackDash
			source decoration none
			target decoration closed arrow
		}
		Node_line flowsFromApplicationFunctionApplicationFunctionDef
		for reference
		ApplicationFunction.flowsFromApplicationFunctionApplicationFunction {
			label "flowsFrom"
			style BorderBlackDash
			source decoration closed arrow
			target decoration none
		}
		Node_line realizesApplicationServiceApplicationFunctionDef
		for reference
		ApplicationFunction.realizesApplicationServiceApplicationFunction {
			label "realizes"
			style BorderBlackDash
			source decoration none
			target decoration arrow
		}
		Node_line assignedToApplicationComponentApplicationFunctionDef
		for reference
		ApplicationFunction.assignedToApplicationComponentApplicationFunction {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usesApplicationServiceApplicationFunctionDef
		for reference
		ApplicationFunction.usesApplicationServiceApplicationFunction {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line accessesDataObjectApplicationFunctionDef
		for reference ApplicationFunction.accessesDataObjectApplicationFunction {
			label "accesses"
			style BorderBlackDash
			source decoration none
			target decoration arrow
		}
		Node_line usedByApplicationComponentApplicationInterfaceDef
		for reference
		ApplicationInterface.usedByApplicationComponentApplicationInterface {
			label "usedBy"
			style BorderBlack1
			source decoration arrow
			target decoration none
		}
		Node_line assignedToApplicationServiceApplicationInterfaceDef
		for reference
		ApplicationInterface.assignedToApplicationServiceApplicationInterface {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line aggregatedByApplicationCollaborationApplicationComponentDef
		for reference
		ApplicationComponent.aggregatedByApplicationCollaborationApplicationComponent {
			label "aggregatedBy"
			style BorderBlack1
			source decoration arrow
			target decoration rhomb
		}
		Node_line assignedToApplicationFunctionApplicationComponentDef
		for reference
		ApplicationComponent.assignedToApplicationFunctionApplicationComponent {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Internal_node composedOfApplicationInterfaceApplicationComponentDef
		for reference
		ApplicationComponent.composedOfApplicationInterfaceApplicationComponent {
			layout default
			layout
		}
		Node_line usesApplicationInterfaceApplicationComponentDef
		for reference
		ApplicationComponent.usesApplicationInterfaceApplicationComponent {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line aggregatesApplicationComponentApplicationCollaborationDef
		for reference
		ApplicationCollaboration.aggregatesApplicationComponentApplicationCollaboration {
			label "aggregates"
			style BorderBlack1
			source decoration rhomb
			target decoration arrow
		}
		Internal_node composedOfElementElementDef
		for reference ArchimateElement.composedOfElementElement {
			layout default
			layout
		}
		Node_line aggregatesElementElementDef
		for reference ArchimateElement.aggregatesElementElement {
			label "uses"
			style BorderBlack1
			source decoration rhomb
			target decoration arrow
		}
		Node_element ArchimateElementDef
		for class ArchimateElement {
			label elementName
			label icon false
			label placement internal
			size ( 70 ,  50 )
			Regular figure extends rectRounded10 {
				background color white
				border BorderBlack2
			}
			phantom true
		}
		Node_element ValueDef
		for class Value {
			label elementName
			label icon false
			label placement external
			size ( 68 ,  42 )
			Regular figure extends ValueImage {
				background color BusinessColor
				border BorderBlack2
			}
			phantom false
		}
		Node_line associatedWithProductValueDef
		for reference Value.associatedWithProductValue {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element ProductDef
		for class Product {
			label elementName
			label icon false
			label placement internal
			size ( 64 ,  54 )
			Image figure {
				image path "iconProductImage.svg"
			}
			phantom false
		}
		Node_line aggregatesContractProductDef
		for reference Product.aggregatesContractProduct {
			label "aggregates"
			style BorderBlack1
			source decoration rhomb
			target decoration arrow
		}
		Node_line aggregatesBusinessServiceProductDef
		for reference Product.aggregatesBusinessServiceProduct {
			label "aggregates"
			style BorderBlack1
			source decoration rhomb
			target decoration arrow
		}
		Node_element MeaningDef
		for class Meaning {
			label elementName
			label icon false
			label placement external
			size ( 67 ,  67 )
			Regular figure extends rectRounded10 {
				background color white
				border BorderWhite icon
				path "iconCloud.svg" icon
				size ( 64 ,  64 )
				icon
				position
				Point ( 1 ,  1 )
			}
			phantom false
		}
		Node_line associatedWithBusinessObjectMeaningDef
		for reference Meaning.associatedWithBusinessObjectMeaning {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element RepresentationDef
		for class Representation {
			label elementName
			label icon false
			label placement internal
			size ( 65 ,  65 )
			Regular figure extends cuadrado {
				background color Withe
				border BorderBlack1 icon
				path "iconrepresentation.svg" icon
				size ( 64 ,  64 )
				icon
				position
				Point ( 1 ,  1 )
			}
			phantom true
		}
		Node_line realizesBusinessObjectRepresentationDef
		for reference Representation.realizesBusinessObjectRepresentation {
			label "realizes"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToLocationRepresentationDef
		for reference Representation.assignedToLocationRepresentation {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessObjectDef
		for class BusinessObject {
			label elementName
			label icon false
			label placement internal
			size ( 64 ,  54 )
			Image figure {
				image path "iconProductImage.svg"
			}
			phantom false
		}
		Node_line associatedWithMeaningBusinessObjectDef
		for reference BusinessObject.associatedWithMeaningBusinessObject {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line realizedByRepresentationBusinessObjectDef
		for reference BusinessObject.realizedByRepresentationBusinessObject {
			label "realizedBy"
			style BorderBlackDot
			source decoration closed arrow
			target decoration none
		}
		Node_line accessedByBusinessBehaviorElementBusinessObjectDef
		for reference
		BusinessObject.accessedByBusinessBehaviorElementBusinessObject {
			label "accessedBy"
			style BorderBlackDot
			source decoration none
			target decoration none
		}
		Node_line accessesBusinessEventBusinessObjectDef
		for reference BusinessObject.accessesBusinessEventBusinessObject {
			label "accesses"
			style BorderBlackDot
			source decoration none
			target decoration none
		}
		Node_line accessedByBusinessServiceBusinessObjectDef
		for reference BusinessObject.accessedByBusinessServiceBusinessObject {
			label "accessedBy"
			style BorderBlackDot
			source decoration none
			target decoration none
		}
		Node_line assignedToLocationBusinessObjectDef
		for reference BusinessObject.assignedToLocationBusinessObject {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element ContractDef
		for class Contract {
			label elementName
			label icon false
			label placement internal
			size ( 64 ,  54 )
			Image figure {
				image path "iconContractImage.svg"
			}
			phantom false
		}
		Node_line aggregatedByProductContractDef
		for reference Contract.aggregatedByProductContract {
			label "aggregatedBy"
			style BorderBlack1
			source decoration arrow
			target decoration rhomb
		}
		Node_element BusinessServiceDef
		for class BusinessService {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  62 )
			Regular figure extends imageService {
				background color BusinessColor
				border BorderBlack1
			}
			phantom false
		}
		Node_line aggregatedByProductBusinessServiceDef
		for reference BusinessService.aggregatedByProductBusinessService {
			label "aggregatedBy"
			style BorderBlack1
			source decoration arrow
			target decoration rhomb
		}
		Node_line usedByBusinessActorBusinessServiceDef
		for reference BusinessService.usedByBusinessActorBusinessService {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line realizedByBusinessBehaviorElementBusinessServiceDef
		for reference
		BusinessService.realizedByBusinessBehaviorElementBusinessService {
			label "realizedBy"
			style BorderBlackDot
			source decoration closed arrow
			target decoration none
		}
		Node_line usedByBusinessBehaviorElementBusinessServiceDef
		for reference BusinessService.usedByBusinessBehaviorElementBusinessService {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line assignedToBusinessInterfaceBusinessServiceDef
		for reference BusinessService.assignedToBusinessInterfaceBusinessService {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessesBusinessObjectBusinessServiceDef
		for reference BusinessService.accessesBusinessObjectBusinessService {
			label "accesses"
			style BorderBlackDot
			source decoration none
			target decoration none
		}
		Node_line usedByElementBusinessRoleBusinessServiceDef
		for reference BusinessService.usedByElementBusinessRoleBusinessService {
			label "usedByElement"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line triggersToBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.triggersToBusinessBehaviorElementBusinessBehaviorElement {
			label "triggersTo"
			style BorderBlack1
			source decoration none
			target decoration filled closed arrow
		}
		Node_line triggeredByBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.triggeredByBusinessBehaviorElementBusinessBehaviorElement {
			label "triggeredBy"
			style BorderBlack1
			source decoration filled closed arrow
			target decoration none
		}
		Node_line flowsFromBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.flowsFromBusinessBehaviorElementBusinessBehaviorElement {
			label "flowsFrom"
			style BorderBlackDot
			source decoration filled closed arrow
			target decoration none
		}
		Node_line flowsToBusinessBehaviorElementBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.flowsToBusinessBehaviorElementBusinessBehaviorElement {
			label "flowsTo"
			style BorderBlackDot
			source decoration none
			target decoration filled closed arrow
		}
		Node_line realisesBusinessServiceBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.realisesBusinessServiceBusinessBehaviorElement {
			label "realises"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line triggersBusinessEventBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.triggersBusinessEventBusinessBehaviorElement {
			label "triggers"
			style BorderBlack1
			source decoration none
			target decoration filled closed arrow
		}
		Node_line triggersByBusinessEventBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.triggersByBusinessEventBusinessBehaviorElement {
			label "triggersBy"
			style BorderBlack1
			source decoration filled closed arrow
			target decoration none
		}
		Node_line accessesBusinessObjectBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.accessesBusinessObjectBusinessBehaviorElement {
			label "accesses"
			style BorderBlackDot
			source decoration none
			target decoration none
		}
		Node_line assignedToBusinessRoleBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.assignedToBusinessRoleBusinessBehaviorElement {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usesBusinessServiceBusinessBehaviorElementDef
		for reference
		BusinessBehaviorElement.usesBusinessServiceBusinessBehaviorElement {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessProcessDef
		for class BusinessProcess {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color BusinessColor
				border BorderBlack2 icon
				path "iconProcessIcon2.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom true
		}
		Node_element BusinessFunctionDef
		for class BusinessFunction {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color BusinessColor
				border BorderBlack1 icon
				path "iconfunctionIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom true
		}
		Node_element BusinessInteractionDef
		for class BusinessInteraction {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color BusinessColor
				border BorderBlack1 icon
				path "iconInteractionIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom true
		}
		Node_element BusinessEventDef
		for class BusinessEvent {
			label elementName
			label icon false
			label placement internal
			size ( 85 ,  65 )
			Image figure {
				image path "iconeventFigure.svg"
			}
			phantom false
		}
		Node_line triggersByBusinessBehaviorElementBusinessEventDef
		for reference BusinessEvent.triggersByBusinessBehaviorElementBusinessEvent {
			label "triggersBy"
			style BorderBlack1
			source decoration filled closed arrow
			target decoration none
		}
		Node_line triggersBusinessBehaviorElementBusinessEventDef
		for reference BusinessEvent.triggersBusinessBehaviorElementBusinessEvent {
			label "triggers"
			style BorderBlack1
			source decoration none
			target decoration filled closed arrow
		}
		Node_line accessedByBusinessObjectBusinessEventDef
		for reference BusinessEvent.accessedByBusinessObjectBusinessEvent {
			label "accessedBy"
			style BorderBlackDot
			source decoration none
			target decoration none
		}
		Node_element LocationDef
		for class Location {
			label elementName
			label icon false
			label placement external
			size ( 56 ,  86 )
			Regular figure extends rectRounded10 {
				background color white
				border BorderWhite icon
				path "iconlocation.svg" icon
				size ( 61 ,  81 )
				icon
				position
				Point ( 1 ,  1 )
			}
			phantom true
		}
		Node_line assignedFromBusinessActorLocationDef
		for reference Location.assignedFromBusinessActorLocation {
			label "assignedFrom"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedFromBusinessObjectLocationDef
		for reference Location.assignedFromBusinessObjectLocation {
			label "assignedFrom"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedFromRepresentationLocationDef
		for reference Location.assignedFromRepresentationLocation {
			label "assignedFrom"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessInterfaceDef
		for class BusinessInterface {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color BusinessColor
				border BorderBlack2 icon
				path "iconInterfaceIcon.svg" icon
				size ( 25 ,  16 )
				icon
				position
				Point ( 114 ,  2 )
			}
			phantom true
		}
		Node_line composesBusinessRoleBusinessInterfaceDef
		for reference BusinessInterface.composesBusinessRoleBusinessInterface {
			label "composes"
			style BorderBlack1
			source decoration arrow
			target decoration filled rhomb
		}
		Node_line usedByBusinessActorBusinessInterfaceDef
		for reference BusinessInterface.usedByBusinessActorBusinessInterface {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line usedByBusinessRoleBusinessInterfaceDef
		for reference BusinessInterface.usedByBusinessRoleBusinessInterface {
			label "usedBy"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line assignedToBusinessServiceBusinessInterfaceDef
		for reference BusinessInterface.assignedToBusinessServiceBusinessInterface {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessActorDef
		for class BusinessActor {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color BusinessColor
				border BorderBlack2 icon
				path "iconActorIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom true
		}
		Node_line aggregatedByBusinessCollaborationBusinessRoleDef
		for reference BusinessRole.aggregatedByBusinessCollaborationBusinessRole {
			label "aggregatedBy"
			style BorderBlack1
			source decoration arrow
			target decoration rhomb
		}
		Node_line assignedToBusinessActorBusinessRoleDef
		for reference BusinessRole.assignedToBusinessActorBusinessRole {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToBusinessBehaviorElementBusinessRoleDef
		for reference BusinessRole.assignedToBusinessBehaviorElementBusinessRole {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Internal_node composedOfBusinessInterfaceBusinessRoleDef
		for reference BusinessRole.composedOfBusinessInterfaceBusinessRole {
			layout default
			layout
		}
		Node_line usesBusinessInterfaceBusinessRoleDef
		for reference BusinessRole.usesBusinessInterfaceBusinessRole {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usesElementBusinessServiceBusinessRoleDef
		for reference BusinessRole.usesElementBusinessServiceBusinessRole {
			label "usesElement"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element BusinessCollaborationDef
		for class BusinessCollaboration {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color BusinessColor
				border BorderBlack1 icon
				path "iconcollaboarationIconF.svg" icon
				size ( 24 ,  16 )
				icon
				position
				Point ( 114 ,  2 )
			}
			phantom true
		}
		Node_line aggregatesBusinessActorBusinessCollaborationDef
		for reference
		BusinessCollaboration.aggregatesBusinessActorBusinessCollaboration {
			label "aggregates"
			style BorderBlack1
			source decoration rhomb
			target decoration arrow
		}
		Node_line aggregatesBusinessRoleBusinessCollaborationDef
		for reference
		BusinessCollaboration.aggregatesBusinessRoleBusinessCollaboration {
			label "aggregates"
			style BorderBlack1
			source decoration rhomb
			target decoration arrow
		}
		Node_element BusinessRoleDef
		for class BusinessRole {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  60 )
			Regular figure extends rectRounded10 {
				background color BusinessColor
				border BorderBlack2 icon
				path "iconroleIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom true
		}
		Node_line aggregatesByBusinessCollaborationBusinessActorDef
		for reference BusinessActor.aggregatesByBusinessCollaborationBusinessActor {
			label "aggregatesBy"
			style BorderBlack1
			source decoration rhomb
			target decoration arrow
		}
		Node_line usesBusinessInterfaceBusinessActorDef
		for reference BusinessActor.usesBusinessInterfaceBusinessActor {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToBusinessRoleBusinessActorDef
		for reference BusinessActor.assignedToBusinessRoleBusinessActor {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usesElementBusinessServiceBusinessActorDef
		for reference BusinessActor.usesElementBusinessServiceBusinessActor {
			label "usesElement"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToLocationBusinessActorDef
		for reference BusinessActor.assignedToLocationBusinessActor {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_element NodeDef
		for class Node {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  65 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 icon
				path "iconNodeIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom false
		}
		Node_element DeviceDef
		for class Device {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  65 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 icon
				path "icondeviceIIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom false
		}
		Node_element SystemSoftwareDef
		for class SystemSoftware {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  65 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 icon
				path "iconSystemSWIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom false
		}
		Node_element InfrastructureInterfaceDef
		for class InfrastructureInterface {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  65 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 icon
				path "iconinterfaceIconSmall.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom true
		}
		Node_element NetworkDef
		for class Network {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  65 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 icon
				path "iconNetworkIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom true
		}
		Node_element CommunicationPathDef
		for class CommunicationPath {
			label elementName
			label icon false
			label placement internal
			size ( 70 ,  50 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 icon
				path "iconComunicationPath.svg" icon
				size ( 32 ,  32 )
				icon
				position
				Point ( 20 ,  15 )
			}
			phantom true
		}
		Node_element InfrastructureServiceDef
		for class InfrastructureService {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  65 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2
			}
			phantom false
		}
		Node_element ArtifactDef
		for class Artifact {
			label elementName
			label icon false
			label placement internal
			size ( 140 ,  65 )
			Regular figure extends rectRounded10 {
				background color techLayer
				border BorderBlack2 icon
				path "iconArtifactIcon.svg" icon
				size ( 16 ,  16 )
				icon
				position
				Point ( 123 ,  2 )
			}
			phantom false
		}
		Node_line accessedByInfrastructureServiceArtifactDef
		for reference Artifact.accessedByInfrastructureServiceArtifact {
			label "accessedBy"
			style BorderBlackDash
			source decoration arrow
			target decoration none
		}
		Node_line assignedToNodeArtifactDef
		for reference Artifact.assignedToNodeArtifact {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line accessesArtifactInfrastructureServiceDef
		for reference InfrastructureService.accessesArtifactInfrastructureService {
			label "accesses"
			style BorderBlackDash
			source decoration arrow
			target decoration none
		}
		Node_line assignedToInfrastructureInterfaceInfrastructureServiceDef
		for reference
		InfrastructureService.assignedToInfrastructureInterfaceInfrastructureService {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line realizedByNodeInfrastructureServiceDef
		for reference InfrastructureService.realizedByNodeInfrastructureService {
			label "realizedBy"
			style BorderBlackDash
			source decoration arrow
			target decoration none
		}
		Node_line assignedToInfrastructureServiceInfrastructureInterfaceDef
		for reference
		InfrastructureInterface.assignedToInfrastructureServiceInfrastructureInterface {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line usedByNodeInfrastructureInterfaceDef
		for reference InfrastructureInterface.usedByNodeInfrastructureInterface {
			label "usedBy"
			style BorderBlack1
			source decoration arrow
			target decoration none
		}
		Node_line associatedWithCommunicationPathNodeDef
		for reference Node.associatedWithCommunicationPathNode {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToArtifactNodeDef
		for reference Node.assignedToArtifactNode {
			label "assignedTo"
			style BorderBlackDash
			source decoration none
			target decoration none
		}
		Internal_node composedOfInfrastructureInterfaceNodeDef
		for reference Node.composedOfInfrastructureInterfaceNode {
			layout default
			layout
		}
		Node_line usesInfrastructureInterfaceNodeDef
		for reference Node.usesInfrastructureInterfaceNode {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line usesInfrastructureServiceNodeDef
		for reference Node.usesInfrastructureServiceNode {
			label "uses"
			style BorderBlack1
			source decoration none
			target decoration arrow
		}
		Node_line assignedToDeviceSystemSoftwareDef
		for reference SystemSoftware.assignedToDeviceSystemSoftware {
			label "assignedTo"
			style BorderBlackDash
			source decoration none
			target decoration none
		}
		Node_line associatedWithNetworkDeviceDef
		for reference Device.associatedWithNetworkDevice {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line assignedToSystemSoftwareDeviceDef
		for reference Device.assignedToSystemSoftwareDevice {
			label "assignedTo"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line associatedWithNodeCommunicationPathDef
		for reference CommunicationPath.associatedWithNodeCommunicationPath {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
		Node_line realizedByNetworkCommunicationPathDef
		for reference CommunicationPath.realizedByNetworkCommunicationPath {
			label "realizedBy"
			style BorderBlackDash
			source decoration closed arrow
			target decoration none
		}
		Node_line realizesCommunicationPathNetworkDef
		for reference Network.realizesCommunicationPathNetwork {
			label "realizes"
			style BorderBlackDash
			source decoration none
			target decoration closed arrow
		}
		Node_line associatedWithDeviceNetworkDef
		for reference Network.associatedWithDeviceNetwork {
			label "associatedWith"
			style BorderBlack1
			source decoration none
			target decoration none
		}
	}
	Rules definition {
	}
	Interaction definition {
		Interaction elements {
			Wizard WizardForCreateBasicDataObject
			for context class DataObject {
				title "DataObjectWizard"
				description "Create DataObject Wizard"
				type create
				pages {
					Page {
						title "DataObject Attributes"
						description "Definie DataObject Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicApplicationService
			for context class ApplicationService {
				title "ApplicationServiceWizard"
				description "Create ApplicationService Wizard"
				type create
				pages {
					Page {
						title "ApplicationService Attributes"
						description "Definie ApplicationService Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicApplicationFunction
			for context class ApplicationFunction {
				title "ApplicationFunctionWizard"
				description "Create ApplicationFunction Wizard"
				type create
				pages {
					Page {
						title "ApplicationFunction Attributes"
						description "Definie ApplicationFunction Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicApplicationInteraction
			for context class ApplicationInteraction {
				title "ApplicationInteractionWizard"
				description "Create ApplicationInteraction Wizard"
				type create
				pages {
					Page {
						title "ApplicationInteraction Attributes"
						description "Definie ApplicationInteraction Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicApplicationInterface
			for context class ApplicationInterface {
				title "ApplicationInterfaceWizard"
				description "Create ApplicationInterface Wizard"
				type create
				pages {
					Page {
						title "ApplicationInterface Attributes"
						description "Definie ApplicationInterface Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicApplicationComponent
			for context class ApplicationComponent {
				title "ApplicationComponentWizard"
				description "Create ApplicationComponent Wizard"
				type create
				pages {
					Page {
						title "ApplicationComponent Attributes"
						description "Definie ApplicationComponent Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicApplicationCollaboration
			for context class ApplicationCollaboration {
				title "ApplicationCollaborationWizard"
				description "Create ApplicationCollaboration Wizard"
				type create
				pages {
					Page {
						title "ApplicationCollaboration Attributes"
						description "Definie ApplicationCollaboration Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicArtifact
			for context class Artifact {
				title "ArtifactWizard"
				description "Create Artifact Wizard"
				type create
				pages {
					Page {
						title "Artifact Attributes"
						description "Definie Artifact Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicInfrastructureService
			for context class InfrastructureService {
				title "InfrastructureServiceWizard"
				description "Create InfrastructureService Wizard"
				type create
				pages {
					Page {
						title "InfrastructureService Attributes"
						description "Definie InfrastructureService Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicInfrastructureInterface
			for context class InfrastructureInterface {
				title "InfrastructureInterfaceWizard"
				description "Create InfrastructureInterface Wizard"
				type create
				pages {
					Page {
						title "InfrastructureInterface Attributes"
						description "Definie InfrastructureInterface Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicNode
			for context class Node {
				title "NodeWizard"
				description "Create Node Wizard"
				type create
				pages {
					Page {
						title "Node Attributes"
						description "Definie Node Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicSystemSoftware
			for context class SystemSoftware {
				title "SystemSoftwareWizard"
				description "Create SystemSoftware Wizard"
				type create
				pages {
					Page {
						title "SystemSoftware Attributes"
						description "Definie SystemSoftware Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicDevice
			for context class Device {
				title "DeviceWizard"
				description "Create Device Wizard"
				type create
				pages {
					Page {
						title "Device Attributes"
						description "Definie Device Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicCommunicationPath
			for context class CommunicationPath {
				title "CommunicationPathWizard"
				description "Create CommunicationPath Wizard"
				type create
				pages {
					Page {
						title "CommunicationPath Attributes"
						description "Definie CommunicationPath Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
			Wizard WizardForCreateBasicNetwork
			for context class Network {
				title "NetworkWizard"
				description "Create Network Wizard"
				type create
				pages {
					Page {
						title "Network Attributes"
						description "Definie Network Attributes"
						Attributes to show {
							( "elementName" ,  "Name" ,  textField ,  "Default Name" )
						}
					}
				} default buttons true
			}
		}
		Statements {
			Actions for type DataObject {
				on create
				do {
					show wizard WizardForCreateBasicDataObject
				}
			}
			Actions for type ApplicationService {
				on create
				do {
					show wizard WizardForCreateBasicApplicationService
				}
			}
			Actions for type ApplicationFunction {
				on create
				do {
					show wizard WizardForCreateBasicApplicationFunction
				}
			}
			Actions for type ApplicationInteraction {
				on create
				do {
					show wizard WizardForCreateBasicApplicationInteraction
				}
			}
			Actions for type ApplicationInterface {
				on create
				do {
					show wizard WizardForCreateBasicApplicationInterface
				}
			}
			Actions for type ApplicationComponent {
				on create
				do {
					show wizard WizardForCreateBasicApplicationComponent
				}
			}
			Actions for type ApplicationCollaboration {
				on create
				do {
					show wizard WizardForCreateBasicApplicationCollaboration
				}
			}
			Actions for type Artifact {
				on create
				do {
					show wizard WizardForCreateBasicArtifact
				}
			}
			Actions for type InfrastructureService {
				on create
				do {
					show wizard WizardForCreateBasicInfrastructureService
				}
			}
			Actions for type InfrastructureInterface {
				on create
				do {
					show wizard WizardForCreateBasicInfrastructureInterface
				}
			}
			Actions for type Node {
				on create
				do {
					show wizard WizardForCreateBasicNode
				}
			}
			Actions for type SystemSoftware {
				on create
				do {
					show wizard WizardForCreateBasicSystemSoftware
				}
			}
			Actions for type Device {
				on create
				do {
					show wizard WizardForCreateBasicDevice
				}
			}
			Actions for type CommunicationPath {
				on create
				do {
					show wizard WizardForCreateBasicCommunicationPath
				}
			}
			Actions for type Network {
				on create
				do {
					show wizard WizardForCreateBasicNetwork
				}
			}
		}
	}
}