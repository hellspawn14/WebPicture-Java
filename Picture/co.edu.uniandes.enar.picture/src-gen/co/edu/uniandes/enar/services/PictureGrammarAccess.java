/*
* generated by Xtext
*/
package co.edu.uniandes.enar.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PictureGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cImportsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportsImportParserRuleCall_1_0 = (RuleCall)cImportsAssignment_1.eContents().get(0);
		private final Assignment cGraphicalREpresentationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cGraphicalREpresentationGraphicalRepresentationParserRuleCall_2_0 = (RuleCall)cGraphicalREpresentationAssignment_2.eContents().get(0);
		
		//Model:
		//	{Model} imports+=Import graphicalREpresentation=GraphicalRepresentation;
		public ParserRule getRule() { return rule; }

		//{Model} imports+=Import graphicalREpresentation=GraphicalRepresentation
		public Group getGroup() { return cGroup; }

		//{Model}
		public Action getModelAction_0() { return cModelAction_0; }

		//imports+=Import
		public Assignment getImportsAssignment_1() { return cImportsAssignment_1; }

		//Import
		public RuleCall getImportsImportParserRuleCall_1_0() { return cImportsImportParserRuleCall_1_0; }

		//graphicalREpresentation=GraphicalRepresentation
		public Assignment getGraphicalREpresentationAssignment_2() { return cGraphicalREpresentationAssignment_2; }

		//GraphicalRepresentation
		public RuleCall getGraphicalREpresentationGraphicalRepresentationParserRuleCall_2_0() { return cGraphicalREpresentationGraphicalRepresentationParserRuleCall_2_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceSTRINGTerminalRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//Import:
		//	"import" importedNamespace=STRING "as" name=ID;
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=STRING "as" name=ID
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=STRING
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//STRING
		public RuleCall getImportedNamespaceSTRINGTerminalRuleCall_1_0() { return cImportedNamespaceSTRINGTerminalRuleCall_1_0; }

		//"as"
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}

	public class GraphicalRepresentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GraphicalRepresentation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGraphicalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRepresentationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cReferenceKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cPackageKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cReferencePackageAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cReferencePackageQualifiedNameParserRuleCall_4_2_0 = (RuleCall)cReferencePackageAssignment_4_2.eContents().get(0);
		private final Assignment cRootAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRootROOTParserRuleCall_5_0 = (RuleCall)cRootAssignment_5.eContents().get(0);
		private final Assignment cToolsDefinitionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cToolsDefinitionToolDefinitionParserRuleCall_6_0 = (RuleCall)cToolsDefinitionAssignment_6.eContents().get(0);
		private final Assignment cStyleDefinitionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cStyleDefinitionStyleDefinitionParserRuleCall_7_0 = (RuleCall)cStyleDefinitionAssignment_7.eContents().get(0);
		private final Assignment cGraphicalDefinitionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cGraphicalDefinitionGraphicalDefinitionParserRuleCall_8_0 = (RuleCall)cGraphicalDefinitionAssignment_8.eContents().get(0);
		private final Assignment cRulesDefinitionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cRulesDefinitionRulesDefinitionParserRuleCall_9_0 = (RuleCall)cRulesDefinitionAssignment_9.eContents().get(0);
		private final Assignment cInteractionDefinitionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cInteractionDefinitionInteractionDefinitionParserRuleCall_10_0 = (RuleCall)cInteractionDefinitionAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//GraphicalRepresentation:
		//	"Graphical" "representation" name=ID "{" ("reference" "package" referencePackage=QualifiedName)? root=ROOT
		//	toolsDefinition=ToolDefinition styleDefinition=StyleDefinition graphicalDefinition=GraphicalDefinition
		//	rulesDefinition=RulesDefinition interactionDefinition=InteractionDefinition "}";
		public ParserRule getRule() { return rule; }

		//"Graphical" "representation" name=ID "{" ("reference" "package" referencePackage=QualifiedName)? root=ROOT
		//toolsDefinition=ToolDefinition styleDefinition=StyleDefinition graphicalDefinition=GraphicalDefinition
		//rulesDefinition=RulesDefinition interactionDefinition=InteractionDefinition "}"
		public Group getGroup() { return cGroup; }

		//"Graphical"
		public Keyword getGraphicalKeyword_0() { return cGraphicalKeyword_0; }

		//"representation"
		public Keyword getRepresentationKeyword_1() { return cRepresentationKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("reference" "package" referencePackage=QualifiedName)?
		public Group getGroup_4() { return cGroup_4; }

		//"reference"
		public Keyword getReferenceKeyword_4_0() { return cReferenceKeyword_4_0; }

		//"package"
		public Keyword getPackageKeyword_4_1() { return cPackageKeyword_4_1; }

		//referencePackage=QualifiedName
		public Assignment getReferencePackageAssignment_4_2() { return cReferencePackageAssignment_4_2; }

		//QualifiedName
		public RuleCall getReferencePackageQualifiedNameParserRuleCall_4_2_0() { return cReferencePackageQualifiedNameParserRuleCall_4_2_0; }

		//root=ROOT
		public Assignment getRootAssignment_5() { return cRootAssignment_5; }

		//ROOT
		public RuleCall getRootROOTParserRuleCall_5_0() { return cRootROOTParserRuleCall_5_0; }

		//toolsDefinition=ToolDefinition
		public Assignment getToolsDefinitionAssignment_6() { return cToolsDefinitionAssignment_6; }

		//ToolDefinition
		public RuleCall getToolsDefinitionToolDefinitionParserRuleCall_6_0() { return cToolsDefinitionToolDefinitionParserRuleCall_6_0; }

		//styleDefinition=StyleDefinition
		public Assignment getStyleDefinitionAssignment_7() { return cStyleDefinitionAssignment_7; }

		//StyleDefinition
		public RuleCall getStyleDefinitionStyleDefinitionParserRuleCall_7_0() { return cStyleDefinitionStyleDefinitionParserRuleCall_7_0; }

		//graphicalDefinition=GraphicalDefinition
		public Assignment getGraphicalDefinitionAssignment_8() { return cGraphicalDefinitionAssignment_8; }

		//GraphicalDefinition
		public RuleCall getGraphicalDefinitionGraphicalDefinitionParserRuleCall_8_0() { return cGraphicalDefinitionGraphicalDefinitionParserRuleCall_8_0; }

		//rulesDefinition=RulesDefinition
		public Assignment getRulesDefinitionAssignment_9() { return cRulesDefinitionAssignment_9; }

		//RulesDefinition
		public RuleCall getRulesDefinitionRulesDefinitionParserRuleCall_9_0() { return cRulesDefinitionRulesDefinitionParserRuleCall_9_0; }

		//interactionDefinition=InteractionDefinition
		public Assignment getInteractionDefinitionAssignment_10() { return cInteractionDefinitionAssignment_10; }

		//InteractionDefinition
		public RuleCall getInteractionDefinitionInteractionDefinitionParserRuleCall_10_0() { return cInteractionDefinitionInteractionDefinitionParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class MetaConceptReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetaConceptReference");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MetaConceptReference:
		//	ClassReference | AttReference;
		public ParserRule getRule() { return rule; }

		//ClassReference | AttReference
		public Alternatives getAlternatives() { return cAlternatives; }

		//ClassReference
		public RuleCall getClassReferenceParserRuleCall_0() { return cClassReferenceParserRuleCall_0; }

		//AttReference
		public RuleCall getAttReferenceParserRuleCall_1() { return cAttReferenceParserRuleCall_1; }
	}

	public class ClassReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassQualifiedNameParserRuleCall_1_0 = (RuleCall)cClassAssignment_1.eContents().get(0);
		
		//ClassReference:
		//	"class" class=QualifiedName;
		public ParserRule getRule() { return rule; }

		//"class" class=QualifiedName
		public Group getGroup() { return cGroup; }

		//"class"
		public Keyword getClassKeyword_0() { return cClassKeyword_0; }

		//class=QualifiedName
		public Assignment getClassAssignment_1() { return cClassAssignment_1; }

		//QualifiedName
		public RuleCall getClassQualifiedNameParserRuleCall_1_0() { return cClassQualifiedNameParserRuleCall_1_0; }
	}

	public class AttReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReferenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassQualifiedNameParserRuleCall_1_0 = (RuleCall)cClassAssignment_1.eContents().get(0);
		
		//AttReference:
		//	"reference" class=QualifiedName;
		public ParserRule getRule() { return rule; }

		//"reference" class=QualifiedName
		public Group getGroup() { return cGroup; }

		//"reference"
		public Keyword getReferenceKeyword_0() { return cReferenceKeyword_0; }

		//class=QualifiedName
		public Assignment getClassAssignment_1() { return cClassAssignment_1; }

		//QualifiedName
		public RuleCall getClassQualifiedNameParserRuleCall_1_0() { return cClassQualifiedNameParserRuleCall_1_0; }
	}

	public class ROOTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ROOT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRootKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ROOT:
		//	"root" name=ID;
		public ParserRule getRule() { return rule; }

		//"root" name=ID
		public Group getGroup() { return cGroup; }

		//"root"
		public Keyword getRootKeyword_0() { return cRootKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ToolDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ToolDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cToolDefinitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPaletteForKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cNameROOTCrossReference_2_0 = (CrossReference)cNameAssignment_2.eContents().get(0);
		private final RuleCall cNameROOTIDTerminalRuleCall_2_0_1 = (RuleCall)cNameROOTCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cToolGroupsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cToolGroupsToolGroupParserRuleCall_4_0 = (RuleCall)cToolGroupsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		///////////ToolDefinition/////////
		//ToolDefinition:
		//	{ToolDefinition} "Palette for" name=[ROOT] "{" toolGroups+=ToolGroup+ "}";
		public ParserRule getRule() { return rule; }

		//{ToolDefinition} "Palette for" name=[ROOT] "{" toolGroups+=ToolGroup+ "}"
		public Group getGroup() { return cGroup; }

		//{ToolDefinition}
		public Action getToolDefinitionAction_0() { return cToolDefinitionAction_0; }

		//"Palette for"
		public Keyword getPaletteForKeyword_1() { return cPaletteForKeyword_1; }

		//name=[ROOT]
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//[ROOT]
		public CrossReference getNameROOTCrossReference_2_0() { return cNameROOTCrossReference_2_0; }

		//ID
		public RuleCall getNameROOTIDTerminalRuleCall_2_0_1() { return cNameROOTIDTerminalRuleCall_2_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//toolGroups+=ToolGroup+
		public Assignment getToolGroupsAssignment_4() { return cToolGroupsAssignment_4; }

		//ToolGroup
		public RuleCall getToolGroupsToolGroupParserRuleCall_4_0() { return cToolGroupsToolGroupParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ToolGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ToolGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cToolGroupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDescriptionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDescriptionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_0 = (RuleCall)cDescriptionAssignment_4.eContents().get(0);
		private final Assignment cToolGroupsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cToolGroupsToolGroupParserRuleCall_5_0 = (RuleCall)cToolGroupsAssignment_5.eContents().get(0);
		private final Assignment cButtonsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cButtonsCreationButtonParserRuleCall_6_0 = (RuleCall)cButtonsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ToolGroup:
		//	"Tool group" name=ID "{" "description" description=STRING toolGroups+=ToolGroup* buttons+=CreationButton* "}";
		public ParserRule getRule() { return rule; }

		//"Tool group" name=ID "{" "description" description=STRING toolGroups+=ToolGroup* buttons+=CreationButton* "}"
		public Group getGroup() { return cGroup; }

		//"Tool group"
		public Keyword getToolGroupKeyword_0() { return cToolGroupKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"description"
		public Keyword getDescriptionKeyword_3() { return cDescriptionKeyword_3; }

		//description=STRING
		public Assignment getDescriptionAssignment_4() { return cDescriptionAssignment_4; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_0() { return cDescriptionSTRINGTerminalRuleCall_4_0; }

		//toolGroups+=ToolGroup*
		public Assignment getToolGroupsAssignment_5() { return cToolGroupsAssignment_5; }

		//ToolGroup
		public RuleCall getToolGroupsToolGroupParserRuleCall_5_0() { return cToolGroupsToolGroupParserRuleCall_5_0; }

		//buttons+=CreationButton*
		public Assignment getButtonsAssignment_6() { return cButtonsAssignment_6; }

		//CreationButton
		public RuleCall getButtonsCreationButtonParserRuleCall_6_0() { return cButtonsCreationButtonParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class CreationButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CreationButton");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCreationButtonAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCreationButtonForKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMetaConceptReferenceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMetaConceptReferenceClassReferenceParserRuleCall_2_0 = (RuleCall)cMetaConceptReferenceAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cDescriptionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_0 = (RuleCall)cDescriptionAssignment_7.eContents().get(0);
		private final Keyword cIconKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cIconAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cIconSTRINGTerminalRuleCall_9_0 = (RuleCall)cIconAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//CreationButton:
		//	{CreationButton} "Creation button for" metaConceptReference=ClassReference "{" "name" name=STRING "description"
		//	description=STRING "icon" icon=STRING "}";
		public ParserRule getRule() { return rule; }

		//{CreationButton} "Creation button for" metaConceptReference=ClassReference "{" "name" name=STRING "description"
		//description=STRING "icon" icon=STRING "}"
		public Group getGroup() { return cGroup; }

		//{CreationButton}
		public Action getCreationButtonAction_0() { return cCreationButtonAction_0; }

		//"Creation button for"
		public Keyword getCreationButtonForKeyword_1() { return cCreationButtonForKeyword_1; }

		//metaConceptReference=ClassReference
		public Assignment getMetaConceptReferenceAssignment_2() { return cMetaConceptReferenceAssignment_2; }

		//ClassReference
		public RuleCall getMetaConceptReferenceClassReferenceParserRuleCall_2_0() { return cMetaConceptReferenceClassReferenceParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"name"
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }

		//name=STRING
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_5_0() { return cNameSTRINGTerminalRuleCall_5_0; }

		//"description"
		public Keyword getDescriptionKeyword_6() { return cDescriptionKeyword_6; }

		//description=STRING
		public Assignment getDescriptionAssignment_7() { return cDescriptionAssignment_7; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_0() { return cDescriptionSTRINGTerminalRuleCall_7_0; }

		//"icon"
		public Keyword getIconKeyword_8() { return cIconKeyword_8; }

		//icon=STRING
		public Assignment getIconAssignment_9() { return cIconAssignment_9; }

		//STRING
		public RuleCall getIconSTRINGTerminalRuleCall_9_0() { return cIconSTRINGTerminalRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class StyleDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StyleDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStyleDefinitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStyleDefinitionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStyleElementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStyleElementsStyleElementParserRuleCall_3_0 = (RuleCall)cStyleElementsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///////////StyleDefinition/////////
		//StyleDefinition:
		//	{StyleDefinition} "Style definition" "{" styleElements+=StyleElement* "}";
		public ParserRule getRule() { return rule; }

		//{StyleDefinition} "Style definition" "{" styleElements+=StyleElement* "}"
		public Group getGroup() { return cGroup; }

		//{StyleDefinition}
		public Action getStyleDefinitionAction_0() { return cStyleDefinitionAction_0; }

		//"Style definition"
		public Keyword getStyleDefinitionKeyword_1() { return cStyleDefinitionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//styleElements+=StyleElement*
		public Assignment getStyleElementsAssignment_3() { return cStyleElementsAssignment_3; }

		//StyleElement
		public RuleCall getStyleElementsStyleElementParserRuleCall_3_0() { return cStyleElementsStyleElementParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class StyleElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StyleElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLineStyleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cColorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLineDecorationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFigureStyleParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//StyleElement:
		//	LineStyle | Color | LineDecoration | FigureStyle;
		public ParserRule getRule() { return rule; }

		//LineStyle | Color | LineDecoration | FigureStyle
		public Alternatives getAlternatives() { return cAlternatives; }

		//LineStyle
		public RuleCall getLineStyleParserRuleCall_0() { return cLineStyleParserRuleCall_0; }

		//Color
		public RuleCall getColorParserRuleCall_1() { return cColorParserRuleCall_1; }

		//LineDecoration
		public RuleCall getLineDecorationParserRuleCall_2() { return cLineDecorationParserRuleCall_2; }

		//FigureStyle
		public RuleCall getFigureStyleParserRuleCall_3() { return cFigureStyleParserRuleCall_3; }
	}

	public class LineStyleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LineStyle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLineStyleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cWidthKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cWidthAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cWidthINTTerminalRuleCall_4_0 = (RuleCall)cWidthAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLineTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLineTypeLineTypeEnumRuleCall_6_0 = (RuleCall)cLineTypeAssignment_6.eContents().get(0);
		private final Keyword cColorKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cColorAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cColorColorCrossReference_8_0 = (CrossReference)cColorAssignment_8.eContents().get(0);
		private final RuleCall cColorColorIDTerminalRuleCall_8_0_1 = (RuleCall)cColorColorCrossReference_8_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//LineStyle:
		//	"Line style" name=ID "{" "width" width=INT "type" lineType=LineType "color" color=[Color] "}";
		public ParserRule getRule() { return rule; }

		//"Line style" name=ID "{" "width" width=INT "type" lineType=LineType "color" color=[Color] "}"
		public Group getGroup() { return cGroup; }

		//"Line style"
		public Keyword getLineStyleKeyword_0() { return cLineStyleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"width"
		public Keyword getWidthKeyword_3() { return cWidthKeyword_3; }

		//width=INT
		public Assignment getWidthAssignment_4() { return cWidthAssignment_4; }

		//INT
		public RuleCall getWidthINTTerminalRuleCall_4_0() { return cWidthINTTerminalRuleCall_4_0; }

		//"type"
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }

		//lineType=LineType
		public Assignment getLineTypeAssignment_6() { return cLineTypeAssignment_6; }

		//LineType
		public RuleCall getLineTypeLineTypeEnumRuleCall_6_0() { return cLineTypeLineTypeEnumRuleCall_6_0; }

		//"color"
		public Keyword getColorKeyword_7() { return cColorKeyword_7; }

		//color=[Color]
		public Assignment getColorAssignment_8() { return cColorAssignment_8; }

		//[Color]
		public CrossReference getColorColorCrossReference_8_0() { return cColorColorCrossReference_8_0; }

		//ID
		public RuleCall getColorColorIDTerminalRuleCall_8_0_1() { return cColorColorIDTerminalRuleCall_8_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class LineDecorationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LineDecoration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefaultLineDecorationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCustomLineDecorationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//LineDecoration:
		//	DefaultLineDecoration | CustomLineDecoration;
		public ParserRule getRule() { return rule; }

		//DefaultLineDecoration | CustomLineDecoration
		public Alternatives getAlternatives() { return cAlternatives; }

		//DefaultLineDecoration
		public RuleCall getDefaultLineDecorationParserRuleCall_0() { return cDefaultLineDecorationParserRuleCall_0; }

		//CustomLineDecoration
		public RuleCall getCustomLineDecorationParserRuleCall_1() { return cCustomLineDecorationParserRuleCall_1; }
	}

	public class DefaultLineDecorationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DefaultLineDecoration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNoneAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cNoneNoneKeyword_0_0 = (Keyword)cNoneAssignment_0.eContents().get(0);
		private final Assignment cArrowAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cArrowArrowKeyword_1_0 = (Keyword)cArrowAssignment_1.eContents().get(0);
		private final Assignment cRhombAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cRhombRhombKeyword_2_0 = (Keyword)cRhombAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cFilledrhombAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cFilledrhombFilledKeyword_3_0_0 = (Keyword)cFilledrhombAssignment_3_0.eContents().get(0);
		private final Keyword cRhombKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cSquareAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cSquareSquareKeyword_4_0 = (Keyword)cSquareAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cFilledsquareAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cFilledsquareFilledKeyword_5_0_0 = (Keyword)cFilledsquareAssignment_5_0.eContents().get(0);
		private final Keyword cSquareKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cClosedarrowAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cClosedarrowClosedKeyword_6_0_0 = (Keyword)cClosedarrowAssignment_6_0.eContents().get(0);
		private final Keyword cArrowKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cFilledclosedarrowAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cFilledclosedarrowFilledKeyword_7_0_0 = (Keyword)cFilledclosedarrowAssignment_7_0.eContents().get(0);
		private final Keyword cClosedKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cArrowKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		
		//DefaultLineDecoration:
		//	none="none" | arrow="arrow" | rhomb="rhomb" | filledrhomb="filled" "rhomb" | square="square" | filledsquare="filled"
		//	"square" | closedarrow="closed" "arrow" | filledclosedarrow="filled" "closed" "arrow";
		public ParserRule getRule() { return rule; }

		//none="none" | arrow="arrow" | rhomb="rhomb" | filledrhomb="filled" "rhomb" | square="square" | filledsquare="filled"
		//"square" | closedarrow="closed" "arrow" | filledclosedarrow="filled" "closed" "arrow"
		public Alternatives getAlternatives() { return cAlternatives; }

		//none="none"
		public Assignment getNoneAssignment_0() { return cNoneAssignment_0; }

		//"none"
		public Keyword getNoneNoneKeyword_0_0() { return cNoneNoneKeyword_0_0; }

		//arrow="arrow"
		public Assignment getArrowAssignment_1() { return cArrowAssignment_1; }

		//"arrow"
		public Keyword getArrowArrowKeyword_1_0() { return cArrowArrowKeyword_1_0; }

		//rhomb="rhomb"
		public Assignment getRhombAssignment_2() { return cRhombAssignment_2; }

		//"rhomb"
		public Keyword getRhombRhombKeyword_2_0() { return cRhombRhombKeyword_2_0; }

		//filledrhomb="filled" "rhomb"
		public Group getGroup_3() { return cGroup_3; }

		//filledrhomb="filled"
		public Assignment getFilledrhombAssignment_3_0() { return cFilledrhombAssignment_3_0; }

		//"filled"
		public Keyword getFilledrhombFilledKeyword_3_0_0() { return cFilledrhombFilledKeyword_3_0_0; }

		//"rhomb"
		public Keyword getRhombKeyword_3_1() { return cRhombKeyword_3_1; }

		//square="square"
		public Assignment getSquareAssignment_4() { return cSquareAssignment_4; }

		//"square"
		public Keyword getSquareSquareKeyword_4_0() { return cSquareSquareKeyword_4_0; }

		//filledsquare="filled" "square"
		public Group getGroup_5() { return cGroup_5; }

		//filledsquare="filled"
		public Assignment getFilledsquareAssignment_5_0() { return cFilledsquareAssignment_5_0; }

		//"filled"
		public Keyword getFilledsquareFilledKeyword_5_0_0() { return cFilledsquareFilledKeyword_5_0_0; }

		//"square"
		public Keyword getSquareKeyword_5_1() { return cSquareKeyword_5_1; }

		//closedarrow="closed" "arrow"
		public Group getGroup_6() { return cGroup_6; }

		//closedarrow="closed"
		public Assignment getClosedarrowAssignment_6_0() { return cClosedarrowAssignment_6_0; }

		//"closed"
		public Keyword getClosedarrowClosedKeyword_6_0_0() { return cClosedarrowClosedKeyword_6_0_0; }

		//"arrow"
		public Keyword getArrowKeyword_6_1() { return cArrowKeyword_6_1; }

		//filledclosedarrow="filled" "closed" "arrow"
		public Group getGroup_7() { return cGroup_7; }

		//filledclosedarrow="filled"
		public Assignment getFilledclosedarrowAssignment_7_0() { return cFilledclosedarrowAssignment_7_0; }

		//"filled"
		public Keyword getFilledclosedarrowFilledKeyword_7_0_0() { return cFilledclosedarrowFilledKeyword_7_0_0; }

		//"closed"
		public Keyword getClosedKeyword_7_1() { return cClosedKeyword_7_1; }

		//"arrow"
		public Keyword getArrowKeyword_7_2() { return cArrowKeyword_7_2; }
	}

	public class CustomLineDecorationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CustomLineDecoration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomLineDecorationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cClassKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReferenceImplementationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReferenceImplementationSTRINGTerminalRuleCall_4_0 = (RuleCall)cReferenceImplementationAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CustomLineDecoration:
		//	"Custom line decoration" name=ID "{" "class" referenceImplementation=STRING "}";
		public ParserRule getRule() { return rule; }

		//"Custom line decoration" name=ID "{" "class" referenceImplementation=STRING "}"
		public Group getGroup() { return cGroup; }

		//"Custom line decoration"
		public Keyword getCustomLineDecorationKeyword_0() { return cCustomLineDecorationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"class"
		public Keyword getClassKeyword_3() { return cClassKeyword_3; }

		//referenceImplementation=STRING
		public Assignment getReferenceImplementationAssignment_4() { return cReferenceImplementationAssignment_4; }

		//STRING
		public RuleCall getReferenceImplementationSTRINGTerminalRuleCall_4_0() { return cReferenceImplementationSTRINGTerminalRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Color");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRedAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRedINTTerminalRuleCall_3_0 = (RuleCall)cRedAssignment_3.eContents().get(0);
		private final Keyword cCommaSpaceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cGreenAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cGreenINTTerminalRuleCall_5_0 = (RuleCall)cGreenAssignment_5.eContents().get(0);
		private final Keyword cCommaSpaceKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cBlueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cBlueINTTerminalRuleCall_7_0 = (RuleCall)cBlueAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Color:
		//	"Color" name=ID "(" red=INT ", " green=INT ", " blue=INT ")";
		public ParserRule getRule() { return rule; }

		//"Color" name=ID "(" red=INT ", " green=INT ", " blue=INT ")"
		public Group getGroup() { return cGroup; }

		//"Color"
		public Keyword getColorKeyword_0() { return cColorKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//red=INT
		public Assignment getRedAssignment_3() { return cRedAssignment_3; }

		//INT
		public RuleCall getRedINTTerminalRuleCall_3_0() { return cRedINTTerminalRuleCall_3_0; }

		//", "
		public Keyword getCommaSpaceKeyword_4() { return cCommaSpaceKeyword_4; }

		//green=INT
		public Assignment getGreenAssignment_5() { return cGreenAssignment_5; }

		//INT
		public RuleCall getGreenINTTerminalRuleCall_5_0() { return cGreenINTTerminalRuleCall_5_0; }

		//", "
		public Keyword getCommaSpaceKeyword_6() { return cCommaSpaceKeyword_6; }

		//blue=INT
		public Assignment getBlueAssignment_7() { return cBlueAssignment_7; }

		//INT
		public RuleCall getBlueINTTerminalRuleCall_7_0() { return cBlueINTTerminalRuleCall_7_0; }

		//")"
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
	}

	public class LayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Layout");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefaultLayoutParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCustomLayoutParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Layout:
		//	DefaultLayout | CustomLayout;
		public ParserRule getRule() { return rule; }

		//DefaultLayout | CustomLayout
		public Alternatives getAlternatives() { return cAlternatives; }

		//DefaultLayout
		public RuleCall getDefaultLayoutParserRuleCall_0() { return cDefaultLayoutParserRuleCall_0; }

		//CustomLayout
		public RuleCall getCustomLayoutParserRuleCall_1() { return cCustomLayoutParserRuleCall_1; }
	}

	public class DefaultLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DefaultLayout");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cListAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cListListKeyword_0_0_0 = (Keyword)cListAssignment_0_0.eContents().get(0);
		private final Keyword cLayoutKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cDefaultAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cDefaultDefaultKeyword_1_0_0 = (Keyword)cDefaultAssignment_1_0.eContents().get(0);
		private final Keyword cLayoutKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//DefaultLayout:
		//	list="list" "layout" | default="default" "layout";
		public ParserRule getRule() { return rule; }

		//list="list" "layout" | default="default" "layout"
		public Alternatives getAlternatives() { return cAlternatives; }

		//list="list" "layout"
		public Group getGroup_0() { return cGroup_0; }

		//list="list"
		public Assignment getListAssignment_0_0() { return cListAssignment_0_0; }

		//"list"
		public Keyword getListListKeyword_0_0_0() { return cListListKeyword_0_0_0; }

		//"layout"
		public Keyword getLayoutKeyword_0_1() { return cLayoutKeyword_0_1; }

		//default="default" "layout"
		public Group getGroup_1() { return cGroup_1; }

		//default="default"
		public Assignment getDefaultAssignment_1_0() { return cDefaultAssignment_1_0; }

		//"default"
		public Keyword getDefaultDefaultKeyword_1_0_0() { return cDefaultDefaultKeyword_1_0_0; }

		//"layout"
		public Keyword getLayoutKeyword_1_1() { return cLayoutKeyword_1_1; }
	}

	public class CustomLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CustomLayout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLayoutKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cImplementationReferenceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReferenceImplementationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReferenceImplementationSTRINGTerminalRuleCall_4_0 = (RuleCall)cReferenceImplementationAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CustomLayout:
		//	"custom" "layout" "{" "implementation reference" referenceImplementation=STRING "}";
		public ParserRule getRule() { return rule; }

		//"custom" "layout" "{" "implementation reference" referenceImplementation=STRING "}"
		public Group getGroup() { return cGroup; }

		//"custom"
		public Keyword getCustomKeyword_0() { return cCustomKeyword_0; }

		//"layout"
		public Keyword getLayoutKeyword_1() { return cLayoutKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"implementation reference"
		public Keyword getImplementationReferenceKeyword_3() { return cImplementationReferenceKeyword_3; }

		//referenceImplementation=STRING
		public Assignment getReferenceImplementationAssignment_4() { return cReferenceImplementationAssignment_4; }

		//STRING
		public RuleCall getReferenceImplementationSTRINGTerminalRuleCall_4_0() { return cReferenceImplementationSTRINGTerminalRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class FigureStyleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FigureStyle");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRoundedParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRegularPolygonParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEllipseParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCustomFigureParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//FigureStyle:
		//	Rounded | RegularPolygon | Ellipse | CustomFigure;
		public ParserRule getRule() { return rule; }

		//Rounded | RegularPolygon | Ellipse | CustomFigure
		public Alternatives getAlternatives() { return cAlternatives; }

		//Rounded
		public RuleCall getRoundedParserRuleCall_0() { return cRoundedParserRuleCall_0; }

		//RegularPolygon
		public RuleCall getRegularPolygonParserRuleCall_1() { return cRegularPolygonParserRuleCall_1; }

		//Ellipse
		public RuleCall getEllipseParserRuleCall_2() { return cEllipseParserRuleCall_2; }

		//CustomFigure
		public RuleCall getCustomFigureParserRuleCall_3() { return cCustomFigureParserRuleCall_3; }
	}

	public class RoundedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Rounded");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoundedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRadioxKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRxAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRxINTTerminalRuleCall_4_0 = (RuleCall)cRxAssignment_4.eContents().get(0);
		private final Keyword cRadioyKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRyINTTerminalRuleCall_6_0 = (RuleCall)cRyAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Rounded:
		//	"Rounded" name=ID "{" "radiox" rx=INT "radioy" ry=INT "}";
		public ParserRule getRule() { return rule; }

		//"Rounded" name=ID "{" "radiox" rx=INT "radioy" ry=INT "}"
		public Group getGroup() { return cGroup; }

		//"Rounded"
		public Keyword getRoundedKeyword_0() { return cRoundedKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"radiox"
		public Keyword getRadioxKeyword_3() { return cRadioxKeyword_3; }

		//rx=INT
		public Assignment getRxAssignment_4() { return cRxAssignment_4; }

		//INT
		public RuleCall getRxINTTerminalRuleCall_4_0() { return cRxINTTerminalRuleCall_4_0; }

		//"radioy"
		public Keyword getRadioyKeyword_5() { return cRadioyKeyword_5; }

		//ry=INT
		public Assignment getRyAssignment_6() { return cRyAssignment_6; }

		//INT
		public RuleCall getRyINTTerminalRuleCall_6_0() { return cRyINTTerminalRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class RegularPolygonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegularPolygon");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegularPolygonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cVertexQuantityKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVertexCantAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVertexCantINTTerminalRuleCall_4_0 = (RuleCall)cVertexCantAssignment_4.eContents().get(0);
		private final Keyword cStartAngleKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cStartAngleAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cStartAngleINTTerminalRuleCall_6_0 = (RuleCall)cStartAngleAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RegularPolygon:
		//	"Regular polygon" name=ID "{" "vertex quantity" vertexCant=INT "start angle" startAngle=INT "}";
		public ParserRule getRule() { return rule; }

		//"Regular polygon" name=ID "{" "vertex quantity" vertexCant=INT "start angle" startAngle=INT "}"
		public Group getGroup() { return cGroup; }

		//"Regular polygon"
		public Keyword getRegularPolygonKeyword_0() { return cRegularPolygonKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"vertex quantity"
		public Keyword getVertexQuantityKeyword_3() { return cVertexQuantityKeyword_3; }

		//vertexCant=INT
		public Assignment getVertexCantAssignment_4() { return cVertexCantAssignment_4; }

		//INT
		public RuleCall getVertexCantINTTerminalRuleCall_4_0() { return cVertexCantINTTerminalRuleCall_4_0; }

		//"start angle"
		public Keyword getStartAngleKeyword_5() { return cStartAngleKeyword_5; }

		//startAngle=INT
		public Assignment getStartAngleAssignment_6() { return cStartAngleAssignment_6; }

		//INT
		public RuleCall getStartAngleINTTerminalRuleCall_6_0() { return cStartAngleINTTerminalRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class EllipseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Ellipse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEllipseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cProportionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRadioxAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRadioxINTTerminalRuleCall_5_0 = (RuleCall)cRadioxAssignment_5.eContents().get(0);
		private final Keyword cCommaSpaceKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRadioyAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRadioyINTTerminalRuleCall_7_0 = (RuleCall)cRadioyAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Ellipse:
		//	"Ellipse" name=ID "{" "proportion" "(" radiox=INT ", " radioy=INT ")" "}";
		public ParserRule getRule() { return rule; }

		//"Ellipse" name=ID "{" "proportion" "(" radiox=INT ", " radioy=INT ")" "}"
		public Group getGroup() { return cGroup; }

		//"Ellipse"
		public Keyword getEllipseKeyword_0() { return cEllipseKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"proportion"
		public Keyword getProportionKeyword_3() { return cProportionKeyword_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//radiox=INT
		public Assignment getRadioxAssignment_5() { return cRadioxAssignment_5; }

		//INT
		public RuleCall getRadioxINTTerminalRuleCall_5_0() { return cRadioxINTTerminalRuleCall_5_0; }

		//", "
		public Keyword getCommaSpaceKeyword_6() { return cCommaSpaceKeyword_6; }

		//radioy=INT
		public Assignment getRadioyAssignment_7() { return cRadioyAssignment_7; }

		//INT
		public RuleCall getRadioyINTTerminalRuleCall_7_0() { return cRadioyINTTerminalRuleCall_7_0; }

		//")"
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class CustomFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CustomFigure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomFigureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPointsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPointsPointParserRuleCall_3_0 = (RuleCall)cPointsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CustomFigure:
		//	"Custom figure" name=ID "{" points+=Point "}";
		public ParserRule getRule() { return rule; }

		//"Custom figure" name=ID "{" points+=Point "}"
		public Group getGroup() { return cGroup; }

		//"Custom figure"
		public Keyword getCustomFigureKeyword_0() { return cCustomFigureKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//points+=Point
		public Assignment getPointsAssignment_3() { return cPointsAssignment_3; }

		//Point
		public RuleCall getPointsPointParserRuleCall_3_0() { return cPointsPointParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class PointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Point");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPointAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPointKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXINTTerminalRuleCall_3_0 = (RuleCall)cXAssignment_3.eContents().get(0);
		private final Keyword cCommaSpaceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cYAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cYINTTerminalRuleCall_5_0 = (RuleCall)cYAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Point:
		//	{Point} "Point" "(" x=INT ", " y=INT ")";
		public ParserRule getRule() { return rule; }

		//{Point} "Point" "(" x=INT ", " y=INT ")"
		public Group getGroup() { return cGroup; }

		//{Point}
		public Action getPointAction_0() { return cPointAction_0; }

		//"Point"
		public Keyword getPointKeyword_1() { return cPointKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//x=INT
		public Assignment getXAssignment_3() { return cXAssignment_3; }

		//INT
		public RuleCall getXINTTerminalRuleCall_3_0() { return cXINTTerminalRuleCall_3_0; }

		//", "
		public Keyword getCommaSpaceKeyword_4() { return cCommaSpaceKeyword_4; }

		//y=INT
		public Assignment getYAssignment_5() { return cYAssignment_5; }

		//INT
		public RuleCall getYINTTerminalRuleCall_5_0() { return cYINTTerminalRuleCall_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class LabelPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LabelPosition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cInternalAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cInternalInternalKeyword_0_0 = (Keyword)cInternalAssignment_0.eContents().get(0);
		private final Assignment cExternalAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cExternalExternalKeyword_1_0 = (Keyword)cExternalAssignment_1.eContents().get(0);
		
		//LabelPosition:
		//	internal="internal" | external="external";
		public ParserRule getRule() { return rule; }

		//internal="internal" | external="external"
		public Alternatives getAlternatives() { return cAlternatives; }

		//internal="internal"
		public Assignment getInternalAssignment_0() { return cInternalAssignment_0; }

		//"internal"
		public Keyword getInternalInternalKeyword_0_0() { return cInternalInternalKeyword_0_0; }

		//external="external"
		public Assignment getExternalAssignment_1() { return cExternalAssignment_1; }

		//"external"
		public Keyword getExternalExternalKeyword_1_0() { return cExternalExternalKeyword_1_0; }
	}

	public class SizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Size");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSizeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cWidthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cWidthINTTerminalRuleCall_2_0 = (RuleCall)cWidthAssignment_2.eContents().get(0);
		private final Keyword cCommaSpaceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHeightAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cHeightINTTerminalRuleCall_4_0 = (RuleCall)cHeightAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Size:
		//	{Size} "(" width=INT ", " height=INT ")";
		public ParserRule getRule() { return rule; }

		//{Size} "(" width=INT ", " height=INT ")"
		public Group getGroup() { return cGroup; }

		//{Size}
		public Action getSizeAction_0() { return cSizeAction_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//width=INT
		public Assignment getWidthAssignment_2() { return cWidthAssignment_2; }

		//INT
		public RuleCall getWidthINTTerminalRuleCall_2_0() { return cWidthINTTerminalRuleCall_2_0; }

		//", "
		public Keyword getCommaSpaceKeyword_3() { return cCommaSpaceKeyword_3; }

		//height=INT
		public Assignment getHeightAssignment_4() { return cHeightAssignment_4; }

		//INT
		public RuleCall getHeightINTTerminalRuleCall_4_0() { return cHeightINTTerminalRuleCall_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class GraphicalDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GraphicalDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicalDefinitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGraphicalKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDefinitionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsGraphicalElementParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		///////////GraphicalDefinition/////////
		//GraphicalDefinition:
		//	{GraphicalDefinition} "Graphical" "definition" "{" elements+=GraphicalElement+ "}";
		public ParserRule getRule() { return rule; }

		//{GraphicalDefinition} "Graphical" "definition" "{" elements+=GraphicalElement+ "}"
		public Group getGroup() { return cGroup; }

		//{GraphicalDefinition}
		public Action getGraphicalDefinitionAction_0() { return cGraphicalDefinitionAction_0; }

		//"Graphical"
		public Keyword getGraphicalKeyword_1() { return cGraphicalKeyword_1; }

		//"definition"
		public Keyword getDefinitionKeyword_2() { return cDefinitionKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//elements+=GraphicalElement+
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }

		//GraphicalElement
		public RuleCall getElementsGraphicalElementParserRuleCall_4_0() { return cElementsGraphicalElementParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class GraphicalElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GraphicalElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cElementAltParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//GraphicalElement:
		//	ElementDef | ElementAlt;
		public ParserRule getRule() { return rule; }

		//ElementDef | ElementAlt
		public Alternatives getAlternatives() { return cAlternatives; }

		//ElementDef
		public RuleCall getElementDefParserRuleCall_0() { return cElementDefParserRuleCall_0; }

		//ElementAlt
		public RuleCall getElementAltParserRuleCall_1() { return cElementAltParserRuleCall_1; }
	}

	public class ElementDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNodeDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttLinkDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ElementDef:
		//	NodeDef | AttLinkDef;
		public ParserRule getRule() { return rule; }

		//NodeDef | AttLinkDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//NodeDef
		public RuleCall getNodeDefParserRuleCall_0() { return cNodeDefParserRuleCall_0; }

		//AttLinkDef
		public RuleCall getAttLinkDefParserRuleCall_1() { return cAttLinkDefParserRuleCall_1; }
	}

	public class NodeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNodeElementDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNodeLinkDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NodeDef:
		//	NodeElementDef | NodeLinkDef;
		public ParserRule getRule() { return rule; }

		//NodeElementDef | NodeLinkDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//NodeElementDef
		public RuleCall getNodeElementDefParserRuleCall_0() { return cNodeElementDefParserRuleCall_0; }

		//NodeLinkDef
		public RuleCall getNodeLinkDefParserRuleCall_1() { return cNodeLinkDefParserRuleCall_1; }
	}

	public class AttLinkDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttLinkDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNodeLineDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInterNodeDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cExternalNodeDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//AttLinkDef:
		//	NodeLineDef | InterNodeDef | ExternalNodeDef;
		public ParserRule getRule() { return rule; }

		//NodeLineDef | InterNodeDef | ExternalNodeDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//NodeLineDef
		public RuleCall getNodeLineDefParserRuleCall_0() { return cNodeLineDefParserRuleCall_0; }

		//InterNodeDef
		public RuleCall getInterNodeDefParserRuleCall_1() { return cInterNodeDefParserRuleCall_1; }

		//ExternalNodeDef
		public RuleCall getExternalNodeDefParserRuleCall_2() { return cExternalNodeDefParserRuleCall_2; }
	}

	public class ElementAltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementAlt");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNodeAltParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttLinkAltParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ElementAlt:
		//	NodeAlt | AttLinkAlt;
		public ParserRule getRule() { return rule; }

		//NodeAlt | AttLinkAlt
		public Alternatives getAlternatives() { return cAlternatives; }

		//NodeAlt
		public RuleCall getNodeAltParserRuleCall_0() { return cNodeAltParserRuleCall_0; }

		//AttLinkAlt
		public RuleCall getAttLinkAltParserRuleCall_1() { return cAttLinkAltParserRuleCall_1; }
	}

	public class NodeAltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeAlt");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNodeElementAltParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNodeLinkAltParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NodeAlt:
		//	NodeElementAlt | NodeLinkAlt;
		public ParserRule getRule() { return rule; }

		//NodeElementAlt | NodeLinkAlt
		public Alternatives getAlternatives() { return cAlternatives; }

		//NodeElementAlt
		public RuleCall getNodeElementAltParserRuleCall_0() { return cNodeElementAltParserRuleCall_0; }

		//NodeLinkAlt
		public RuleCall getNodeLinkAltParserRuleCall_1() { return cNodeLinkAltParserRuleCall_1; }
	}

	public class AttLinkAltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttLinkAlt");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNodeLineAltParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInterNodeAltParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cExternalNodeAltParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//AttLinkAlt:
		//	NodeLineAlt | InterNodeAlt | ExternalNodeAlt;
		public ParserRule getRule() { return rule; }

		//NodeLineAlt | InterNodeAlt | ExternalNodeAlt
		public Alternatives getAlternatives() { return cAlternatives; }

		//NodeLineAlt
		public RuleCall getNodeLineAltParserRuleCall_0() { return cNodeLineAltParserRuleCall_0; }

		//InterNodeAlt
		public RuleCall getInterNodeAltParserRuleCall_1() { return cInterNodeAltParserRuleCall_1; }

		//ExternalNodeAlt
		public RuleCall getExternalNodeAltParserRuleCall_2() { return cExternalNodeAltParserRuleCall_2; }
	}

	public class NodeElementDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeElementDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNode_elementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cForKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferenceClassAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReferenceClassClassReferenceParserRuleCall_3_0 = (RuleCall)cReferenceClassAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLabelKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLabelAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLabelIDTerminalRuleCall_6_0 = (RuleCall)cLabelAssignment_6.eContents().get(0);
		private final Keyword cLabelKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cIconKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cLabelIconAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cLabelIconEBooleanParserRuleCall_9_0 = (RuleCall)cLabelIconAssignment_9.eContents().get(0);
		private final Keyword cLabelKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cPlacementKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cLabelPlacementAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cLabelPlacementLabelPositionParserRuleCall_12_0 = (RuleCall)cLabelPlacementAssignment_12.eContents().get(0);
		private final Keyword cSizeKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cSizeAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cSizeSizeParserRuleCall_14_0 = (RuleCall)cSizeAssignment_14.eContents().get(0);
		private final Assignment cFigureAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cFigureFigureParserRuleCall_15_0 = (RuleCall)cFigureAssignment_15.eContents().get(0);
		private final Keyword cPhantomKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cPhantomNAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cPhantomNEBooleanParserRuleCall_17_0 = (RuleCall)cPhantomNAssignment_17.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//NodeElementDef:
		//	"Node_element" name=ID "for" referenceClass=ClassReference "{" "label" label=ID "label" "icon" labelIcon=EBoolean
		//	"label" "placement" labelPlacement=LabelPosition "size" size=Size figure=Figure "phantom" phantomN=EBoolean "}";
		public ParserRule getRule() { return rule; }

		//"Node_element" name=ID "for" referenceClass=ClassReference "{" "label" label=ID "label" "icon" labelIcon=EBoolean
		//"label" "placement" labelPlacement=LabelPosition "size" size=Size figure=Figure "phantom" phantomN=EBoolean "}"
		public Group getGroup() { return cGroup; }

		//"Node_element"
		public Keyword getNode_elementKeyword_0() { return cNode_elementKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"for"
		public Keyword getForKeyword_2() { return cForKeyword_2; }

		//referenceClass=ClassReference
		public Assignment getReferenceClassAssignment_3() { return cReferenceClassAssignment_3; }

		//ClassReference
		public RuleCall getReferenceClassClassReferenceParserRuleCall_3_0() { return cReferenceClassClassReferenceParserRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"label"
		public Keyword getLabelKeyword_5() { return cLabelKeyword_5; }

		//label=ID
		public Assignment getLabelAssignment_6() { return cLabelAssignment_6; }

		//ID
		public RuleCall getLabelIDTerminalRuleCall_6_0() { return cLabelIDTerminalRuleCall_6_0; }

		//"label"
		public Keyword getLabelKeyword_7() { return cLabelKeyword_7; }

		//"icon"
		public Keyword getIconKeyword_8() { return cIconKeyword_8; }

		//labelIcon=EBoolean
		public Assignment getLabelIconAssignment_9() { return cLabelIconAssignment_9; }

		//EBoolean
		public RuleCall getLabelIconEBooleanParserRuleCall_9_0() { return cLabelIconEBooleanParserRuleCall_9_0; }

		//"label"
		public Keyword getLabelKeyword_10() { return cLabelKeyword_10; }

		//"placement"
		public Keyword getPlacementKeyword_11() { return cPlacementKeyword_11; }

		//labelPlacement=LabelPosition
		public Assignment getLabelPlacementAssignment_12() { return cLabelPlacementAssignment_12; }

		//LabelPosition
		public RuleCall getLabelPlacementLabelPositionParserRuleCall_12_0() { return cLabelPlacementLabelPositionParserRuleCall_12_0; }

		//"size"
		public Keyword getSizeKeyword_13() { return cSizeKeyword_13; }

		//size=Size
		public Assignment getSizeAssignment_14() { return cSizeAssignment_14; }

		//Size
		public RuleCall getSizeSizeParserRuleCall_14_0() { return cSizeSizeParserRuleCall_14_0; }

		//figure=Figure
		public Assignment getFigureAssignment_15() { return cFigureAssignment_15; }

		//Figure
		public RuleCall getFigureFigureParserRuleCall_15_0() { return cFigureFigureParserRuleCall_15_0; }

		//"phantom"
		public Keyword getPhantomKeyword_16() { return cPhantomKeyword_16; }

		//phantomN=EBoolean
		public Assignment getPhantomNAssignment_17() { return cPhantomNAssignment_17; }

		//EBoolean
		public RuleCall getPhantomNEBooleanParserRuleCall_17_0() { return cPhantomNEBooleanParserRuleCall_17_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}

	public class NodeElementAltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeElementAlt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNode_elementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cExtendsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cParentNodeElementDefCrossReference_3_0 = (CrossReference)cParentAssignment_3.eContents().get(0);
		private final RuleCall cParentNodeElementDefIDTerminalRuleCall_3_0_1 = (RuleCall)cParentNodeElementDefCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLabelKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cPlacementKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLabelPlacementAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cLabelPlacementLabelPositionParserRuleCall_5_2_0 = (RuleCall)cLabelPlacementAssignment_5_2.eContents().get(0);
		private final Assignment cFigureAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cFigureFigureParserRuleCall_6_0 = (RuleCall)cFigureAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSizeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSizeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSizeSizeParserRuleCall_7_1_0 = (RuleCall)cSizeAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//NodeElementAlt:
		//	"Node_element" name=ID "extends" parent=[NodeElementDef] "{" ("label" "placement" labelPlacement=LabelPosition)?
		//	figure=Figure? ("size" size=Size)? "}";
		public ParserRule getRule() { return rule; }

		//"Node_element" name=ID "extends" parent=[NodeElementDef] "{" ("label" "placement" labelPlacement=LabelPosition)?
		//figure=Figure? ("size" size=Size)? "}"
		public Group getGroup() { return cGroup; }

		//"Node_element"
		public Keyword getNode_elementKeyword_0() { return cNode_elementKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"extends"
		public Keyword getExtendsKeyword_2() { return cExtendsKeyword_2; }

		//parent=[NodeElementDef]
		public Assignment getParentAssignment_3() { return cParentAssignment_3; }

		//[NodeElementDef]
		public CrossReference getParentNodeElementDefCrossReference_3_0() { return cParentNodeElementDefCrossReference_3_0; }

		//ID
		public RuleCall getParentNodeElementDefIDTerminalRuleCall_3_0_1() { return cParentNodeElementDefIDTerminalRuleCall_3_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("label" "placement" labelPlacement=LabelPosition)?
		public Group getGroup_5() { return cGroup_5; }

		//"label"
		public Keyword getLabelKeyword_5_0() { return cLabelKeyword_5_0; }

		//"placement"
		public Keyword getPlacementKeyword_5_1() { return cPlacementKeyword_5_1; }

		//labelPlacement=LabelPosition
		public Assignment getLabelPlacementAssignment_5_2() { return cLabelPlacementAssignment_5_2; }

		//LabelPosition
		public RuleCall getLabelPlacementLabelPositionParserRuleCall_5_2_0() { return cLabelPlacementLabelPositionParserRuleCall_5_2_0; }

		//figure=Figure?
		public Assignment getFigureAssignment_6() { return cFigureAssignment_6; }

		//Figure
		public RuleCall getFigureFigureParserRuleCall_6_0() { return cFigureFigureParserRuleCall_6_0; }

		//("size" size=Size)?
		public Group getGroup_7() { return cGroup_7; }

		//"size"
		public Keyword getSizeKeyword_7_0() { return cSizeKeyword_7_0; }

		//size=Size
		public Assignment getSizeAssignment_7_1() { return cSizeAssignment_7_1; }

		//Size
		public RuleCall getSizeSizeParserRuleCall_7_1_0() { return cSizeSizeParserRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class FigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Figure");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRegularFigureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cImageFigureParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cComplexFigureParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Figure:
		//	RegularFigure | ImageFigure | ComplexFigure;
		public ParserRule getRule() { return rule; }

		//RegularFigure | ImageFigure | ComplexFigure
		public Alternatives getAlternatives() { return cAlternatives; }

		//RegularFigure
		public RuleCall getRegularFigureParserRuleCall_0() { return cRegularFigureParserRuleCall_0; }

		//ImageFigure
		public RuleCall getImageFigureParserRuleCall_1() { return cImageFigureParserRuleCall_1; }

		//ComplexFigure
		public RuleCall getComplexFigureParserRuleCall_2() { return cComplexFigureParserRuleCall_2; }
	}

	public class RegularFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegularFigure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRegularFigureAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRegularFigureExtendsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFigureStyleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cFigureStyleFigureStyleCrossReference_2_0 = (CrossReference)cFigureStyleAssignment_2.eContents().get(0);
		private final RuleCall cFigureStyleFigureStyleIDTerminalRuleCall_2_0_1 = (RuleCall)cFigureStyleFigureStyleCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cBackgroundColorKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBacgroundColorAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cBacgroundColorColorCrossReference_5_0 = (CrossReference)cBacgroundColorAssignment_5.eContents().get(0);
		private final RuleCall cBacgroundColorColorIDTerminalRuleCall_5_0_1 = (RuleCall)cBacgroundColorColorCrossReference_5_0.eContents().get(1);
		private final Keyword cBorderKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cBorderAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cBorderLineStyleCrossReference_7_0 = (CrossReference)cBorderAssignment_7.eContents().get(0);
		private final RuleCall cBorderLineStyleIDTerminalRuleCall_7_0_1 = (RuleCall)cBorderLineStyleCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cIconKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cPathKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cPathAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cPathSTRINGTerminalRuleCall_8_2_0 = (RuleCall)cPathAssignment_8_2.eContents().get(0);
		private final Keyword cIconKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Keyword cSizeKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Assignment cSizeAssignment_8_5 = (Assignment)cGroup_8.eContents().get(5);
		private final RuleCall cSizeSizeParserRuleCall_8_5_0 = (RuleCall)cSizeAssignment_8_5.eContents().get(0);
		private final Keyword cIconKeyword_8_6 = (Keyword)cGroup_8.eContents().get(6);
		private final Keyword cPositionKeyword_8_7 = (Keyword)cGroup_8.eContents().get(7);
		private final Assignment cPositionAssignment_8_8 = (Assignment)cGroup_8.eContents().get(8);
		private final RuleCall cPositionPointParserRuleCall_8_8_0 = (RuleCall)cPositionAssignment_8_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//RegularFigure:
		//	{RegularFigure} "Regular figure extends" figureStyle=[FigureStyle] "{" "background color" bacgroundColor=[Color]
		//	"border" border=[LineStyle] ("icon" "path" path=STRING "icon" "size" size=Size "icon" "position" position=Point)? "}";
		public ParserRule getRule() { return rule; }

		//{RegularFigure} "Regular figure extends" figureStyle=[FigureStyle] "{" "background color" bacgroundColor=[Color]
		//"border" border=[LineStyle] ("icon" "path" path=STRING "icon" "size" size=Size "icon" "position" position=Point)? "}"
		public Group getGroup() { return cGroup; }

		//{RegularFigure}
		public Action getRegularFigureAction_0() { return cRegularFigureAction_0; }

		//"Regular figure extends"
		public Keyword getRegularFigureExtendsKeyword_1() { return cRegularFigureExtendsKeyword_1; }

		//figureStyle=[FigureStyle]
		public Assignment getFigureStyleAssignment_2() { return cFigureStyleAssignment_2; }

		//[FigureStyle]
		public CrossReference getFigureStyleFigureStyleCrossReference_2_0() { return cFigureStyleFigureStyleCrossReference_2_0; }

		//ID
		public RuleCall getFigureStyleFigureStyleIDTerminalRuleCall_2_0_1() { return cFigureStyleFigureStyleIDTerminalRuleCall_2_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"background color"
		public Keyword getBackgroundColorKeyword_4() { return cBackgroundColorKeyword_4; }

		//bacgroundColor=[Color]
		public Assignment getBacgroundColorAssignment_5() { return cBacgroundColorAssignment_5; }

		//[Color]
		public CrossReference getBacgroundColorColorCrossReference_5_0() { return cBacgroundColorColorCrossReference_5_0; }

		//ID
		public RuleCall getBacgroundColorColorIDTerminalRuleCall_5_0_1() { return cBacgroundColorColorIDTerminalRuleCall_5_0_1; }

		//"border"
		public Keyword getBorderKeyword_6() { return cBorderKeyword_6; }

		//border=[LineStyle]
		public Assignment getBorderAssignment_7() { return cBorderAssignment_7; }

		//[LineStyle]
		public CrossReference getBorderLineStyleCrossReference_7_0() { return cBorderLineStyleCrossReference_7_0; }

		//ID
		public RuleCall getBorderLineStyleIDTerminalRuleCall_7_0_1() { return cBorderLineStyleIDTerminalRuleCall_7_0_1; }

		//("icon" "path" path=STRING "icon" "size" size=Size "icon" "position" position=Point)?
		public Group getGroup_8() { return cGroup_8; }

		//"icon"
		public Keyword getIconKeyword_8_0() { return cIconKeyword_8_0; }

		//"path"
		public Keyword getPathKeyword_8_1() { return cPathKeyword_8_1; }

		//path=STRING
		public Assignment getPathAssignment_8_2() { return cPathAssignment_8_2; }

		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_8_2_0() { return cPathSTRINGTerminalRuleCall_8_2_0; }

		//"icon"
		public Keyword getIconKeyword_8_3() { return cIconKeyword_8_3; }

		//"size"
		public Keyword getSizeKeyword_8_4() { return cSizeKeyword_8_4; }

		//size=Size
		public Assignment getSizeAssignment_8_5() { return cSizeAssignment_8_5; }

		//Size
		public RuleCall getSizeSizeParserRuleCall_8_5_0() { return cSizeSizeParserRuleCall_8_5_0; }

		//"icon"
		public Keyword getIconKeyword_8_6() { return cIconKeyword_8_6; }

		//"position"
		public Keyword getPositionKeyword_8_7() { return cPositionKeyword_8_7; }

		//position=Point
		public Assignment getPositionAssignment_8_8() { return cPositionAssignment_8_8; }

		//Point
		public RuleCall getPositionPointParserRuleCall_8_8_0() { return cPositionPointParserRuleCall_8_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class ImageFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImageFigure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImageFigureAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cImageFigureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cImagePathKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPathAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPathSTRINGTerminalRuleCall_4_0 = (RuleCall)cPathAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ImageFigure:
		//	{ImageFigure} "Image figure" "{" "image path" path=STRING "}";
		public ParserRule getRule() { return rule; }

		//{ImageFigure} "Image figure" "{" "image path" path=STRING "}"
		public Group getGroup() { return cGroup; }

		//{ImageFigure}
		public Action getImageFigureAction_0() { return cImageFigureAction_0; }

		//"Image figure"
		public Keyword getImageFigureKeyword_1() { return cImageFigureKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"image path"
		public Keyword getImagePathKeyword_3() { return cImagePathKeyword_3; }

		//path=STRING
		public Assignment getPathAssignment_4() { return cPathAssignment_4; }

		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_4_0() { return cPathSTRINGTerminalRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ComplexFigureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComplexFigure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComplexFigureAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComplexFigureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cClassKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cImplementationReferenceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cImplementationReferenceSTRINGTerminalRuleCall_4_0 = (RuleCall)cImplementationReferenceAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ComplexFigure:
		//	{ComplexFigure} "Complex figure" "{" "class" implementationReference=STRING "}";
		public ParserRule getRule() { return rule; }

		//{ComplexFigure} "Complex figure" "{" "class" implementationReference=STRING "}"
		public Group getGroup() { return cGroup; }

		//{ComplexFigure}
		public Action getComplexFigureAction_0() { return cComplexFigureAction_0; }

		//"Complex figure"
		public Keyword getComplexFigureKeyword_1() { return cComplexFigureKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"class"
		public Keyword getClassKeyword_3() { return cClassKeyword_3; }

		//implementationReference=STRING
		public Assignment getImplementationReferenceAssignment_4() { return cImplementationReferenceAssignment_4; }

		//STRING
		public RuleCall getImplementationReferenceSTRINGTerminalRuleCall_4_0() { return cImplementationReferenceSTRINGTerminalRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class NodeLinkDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeLinkDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNode_linkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cForKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferenceClassAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReferenceClassClassReferenceParserRuleCall_3_0 = (RuleCall)cReferenceClassAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLabelKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLabelAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLabelIDTerminalRuleCall_6_0 = (RuleCall)cLabelAssignment_6.eContents().get(0);
		private final Keyword cStyleKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cStyleAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cStyleLineStyleParserRuleCall_8_0 = (RuleCall)cStyleAssignment_8.eContents().get(0);
		private final Keyword cSourceKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cDecorationKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cSourceDecorationAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cSourceDecorationLineDecorationParserRuleCall_11_0 = (RuleCall)cSourceDecorationAssignment_11.eContents().get(0);
		private final Keyword cTargetKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cDecorationKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cTargetDecorationAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cTargetDecorationLineDecorationParserRuleCall_14_0 = (RuleCall)cTargetDecorationAssignment_14.eContents().get(0);
		private final Keyword cSourceKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cReferenceKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cLessThanSignHyphenMinusKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cSourceReferenceAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cSourceReferenceIDTerminalRuleCall_18_0 = (RuleCall)cSourceReferenceAssignment_18.eContents().get(0);
		private final Keyword cTargetKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cReferenceKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Keyword cLessThanSignHyphenMinusKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cTargetReferenceAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cTargetReferenceIDTerminalRuleCall_22_0 = (RuleCall)cTargetReferenceAssignment_22.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_23 = (Keyword)cGroup.eContents().get(23);
		
		//NodeLinkDef:
		//	"Node_link" name=ID "for" referenceClass=ClassReference "{" "label" label=ID "style" style=LineStyle "source"
		//	"decoration" sourceDecoration=LineDecoration "target" "decoration" targetDecoration=LineDecoration "source"
		//	"reference" "<-" sourceReference=ID "target" "reference" "<-" targetReference=ID "}";
		public ParserRule getRule() { return rule; }

		//"Node_link" name=ID "for" referenceClass=ClassReference "{" "label" label=ID "style" style=LineStyle "source"
		//"decoration" sourceDecoration=LineDecoration "target" "decoration" targetDecoration=LineDecoration "source" "reference"
		//"<-" sourceReference=ID "target" "reference" "<-" targetReference=ID "}"
		public Group getGroup() { return cGroup; }

		//"Node_link"
		public Keyword getNode_linkKeyword_0() { return cNode_linkKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"for"
		public Keyword getForKeyword_2() { return cForKeyword_2; }

		//referenceClass=ClassReference
		public Assignment getReferenceClassAssignment_3() { return cReferenceClassAssignment_3; }

		//ClassReference
		public RuleCall getReferenceClassClassReferenceParserRuleCall_3_0() { return cReferenceClassClassReferenceParserRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"label"
		public Keyword getLabelKeyword_5() { return cLabelKeyword_5; }

		//label=ID
		public Assignment getLabelAssignment_6() { return cLabelAssignment_6; }

		//ID
		public RuleCall getLabelIDTerminalRuleCall_6_0() { return cLabelIDTerminalRuleCall_6_0; }

		//"style"
		public Keyword getStyleKeyword_7() { return cStyleKeyword_7; }

		//style=LineStyle
		public Assignment getStyleAssignment_8() { return cStyleAssignment_8; }

		//LineStyle
		public RuleCall getStyleLineStyleParserRuleCall_8_0() { return cStyleLineStyleParserRuleCall_8_0; }

		//"source"
		public Keyword getSourceKeyword_9() { return cSourceKeyword_9; }

		//"decoration"
		public Keyword getDecorationKeyword_10() { return cDecorationKeyword_10; }

		//sourceDecoration=LineDecoration
		public Assignment getSourceDecorationAssignment_11() { return cSourceDecorationAssignment_11; }

		//LineDecoration
		public RuleCall getSourceDecorationLineDecorationParserRuleCall_11_0() { return cSourceDecorationLineDecorationParserRuleCall_11_0; }

		//"target"
		public Keyword getTargetKeyword_12() { return cTargetKeyword_12; }

		//"decoration"
		public Keyword getDecorationKeyword_13() { return cDecorationKeyword_13; }

		//targetDecoration=LineDecoration
		public Assignment getTargetDecorationAssignment_14() { return cTargetDecorationAssignment_14; }

		//LineDecoration
		public RuleCall getTargetDecorationLineDecorationParserRuleCall_14_0() { return cTargetDecorationLineDecorationParserRuleCall_14_0; }

		//"source"
		public Keyword getSourceKeyword_15() { return cSourceKeyword_15; }

		//"reference"
		public Keyword getReferenceKeyword_16() { return cReferenceKeyword_16; }

		//"<-"
		public Keyword getLessThanSignHyphenMinusKeyword_17() { return cLessThanSignHyphenMinusKeyword_17; }

		//sourceReference=ID
		public Assignment getSourceReferenceAssignment_18() { return cSourceReferenceAssignment_18; }

		//ID
		public RuleCall getSourceReferenceIDTerminalRuleCall_18_0() { return cSourceReferenceIDTerminalRuleCall_18_0; }

		//"target"
		public Keyword getTargetKeyword_19() { return cTargetKeyword_19; }

		//"reference"
		public Keyword getReferenceKeyword_20() { return cReferenceKeyword_20; }

		//"<-"
		public Keyword getLessThanSignHyphenMinusKeyword_21() { return cLessThanSignHyphenMinusKeyword_21; }

		//targetReference=ID
		public Assignment getTargetReferenceAssignment_22() { return cTargetReferenceAssignment_22; }

		//ID
		public RuleCall getTargetReferenceIDTerminalRuleCall_22_0() { return cTargetReferenceIDTerminalRuleCall_22_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_23() { return cRightCurlyBracketKeyword_23; }
	}

	public class NodeLinkAltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeLinkAlt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNode_linkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cExtendsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cParentNodeLinkDefCrossReference_3_0 = (CrossReference)cParentAssignment_3.eContents().get(0);
		private final RuleCall cParentNodeLinkDefIDTerminalRuleCall_3_0_1 = (RuleCall)cParentNodeLinkDefCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cStyleKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cStyleAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cStyleLineStyleParserRuleCall_5_1_0 = (RuleCall)cStyleAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSourceKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cDecorationKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cSourceDecorationAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cSourceDecorationLineDecorationParserRuleCall_6_2_0 = (RuleCall)cSourceDecorationAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cTargetKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cDecorationKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cTargetDecorationAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cTargetDecorationLineDecorationParserRuleCall_7_2_0 = (RuleCall)cTargetDecorationAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//NodeLinkAlt:
		//	"Node_link" name=ID "extends" parent=[NodeLinkDef] "{" ("style" style=LineStyle)? ("source" "decoration"
		//	sourceDecoration=LineDecoration)? ("target" "decoration" targetDecoration=LineDecoration)? "}";
		public ParserRule getRule() { return rule; }

		//"Node_link" name=ID "extends" parent=[NodeLinkDef] "{" ("style" style=LineStyle)? ("source" "decoration"
		//sourceDecoration=LineDecoration)? ("target" "decoration" targetDecoration=LineDecoration)? "}"
		public Group getGroup() { return cGroup; }

		//"Node_link"
		public Keyword getNode_linkKeyword_0() { return cNode_linkKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"extends"
		public Keyword getExtendsKeyword_2() { return cExtendsKeyword_2; }

		//parent=[NodeLinkDef]
		public Assignment getParentAssignment_3() { return cParentAssignment_3; }

		//[NodeLinkDef]
		public CrossReference getParentNodeLinkDefCrossReference_3_0() { return cParentNodeLinkDefCrossReference_3_0; }

		//ID
		public RuleCall getParentNodeLinkDefIDTerminalRuleCall_3_0_1() { return cParentNodeLinkDefIDTerminalRuleCall_3_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("style" style=LineStyle)?
		public Group getGroup_5() { return cGroup_5; }

		//"style"
		public Keyword getStyleKeyword_5_0() { return cStyleKeyword_5_0; }

		//style=LineStyle
		public Assignment getStyleAssignment_5_1() { return cStyleAssignment_5_1; }

		//LineStyle
		public RuleCall getStyleLineStyleParserRuleCall_5_1_0() { return cStyleLineStyleParserRuleCall_5_1_0; }

		//("source" "decoration" sourceDecoration=LineDecoration)?
		public Group getGroup_6() { return cGroup_6; }

		//"source"
		public Keyword getSourceKeyword_6_0() { return cSourceKeyword_6_0; }

		//"decoration"
		public Keyword getDecorationKeyword_6_1() { return cDecorationKeyword_6_1; }

		//sourceDecoration=LineDecoration
		public Assignment getSourceDecorationAssignment_6_2() { return cSourceDecorationAssignment_6_2; }

		//LineDecoration
		public RuleCall getSourceDecorationLineDecorationParserRuleCall_6_2_0() { return cSourceDecorationLineDecorationParserRuleCall_6_2_0; }

		//("target" "decoration" targetDecoration=LineDecoration)?
		public Group getGroup_7() { return cGroup_7; }

		//"target"
		public Keyword getTargetKeyword_7_0() { return cTargetKeyword_7_0; }

		//"decoration"
		public Keyword getDecorationKeyword_7_1() { return cDecorationKeyword_7_1; }

		//targetDecoration=LineDecoration
		public Assignment getTargetDecorationAssignment_7_2() { return cTargetDecorationAssignment_7_2; }

		//LineDecoration
		public RuleCall getTargetDecorationLineDecorationParserRuleCall_7_2_0() { return cTargetDecorationLineDecorationParserRuleCall_7_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class NodeLineDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeLineDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNode_lineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cForKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferenceNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReferenceNameAttReferenceParserRuleCall_3_0 = (RuleCall)cReferenceNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLabelKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLabelAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLabelSTRINGTerminalRuleCall_6_0 = (RuleCall)cLabelAssignment_6.eContents().get(0);
		private final Keyword cStyleKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cStyleAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cStyleLineStyleCrossReference_8_0 = (CrossReference)cStyleAssignment_8.eContents().get(0);
		private final RuleCall cStyleLineStyleIDTerminalRuleCall_8_0_1 = (RuleCall)cStyleLineStyleCrossReference_8_0.eContents().get(1);
		private final Keyword cSourceKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cDecorationKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cSourceDecorationAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cSourceDecorationLineDecorationParserRuleCall_11_0 = (RuleCall)cSourceDecorationAssignment_11.eContents().get(0);
		private final Keyword cTargetKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cDecorationKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cTargetDecorationAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cTargetDecorationLineDecorationParserRuleCall_14_0 = (RuleCall)cTargetDecorationAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//NodeLineDef:
		//	"Node_line" name=ID "for" referenceName=AttReference "{" "label" label=STRING "style" style=[LineStyle] "source"
		//	"decoration" sourceDecoration=LineDecoration "target" "decoration" targetDecoration=LineDecoration "}";
		public ParserRule getRule() { return rule; }

		//"Node_line" name=ID "for" referenceName=AttReference "{" "label" label=STRING "style" style=[LineStyle] "source"
		//"decoration" sourceDecoration=LineDecoration "target" "decoration" targetDecoration=LineDecoration "}"
		public Group getGroup() { return cGroup; }

		//"Node_line"
		public Keyword getNode_lineKeyword_0() { return cNode_lineKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"for"
		public Keyword getForKeyword_2() { return cForKeyword_2; }

		//referenceName=AttReference
		public Assignment getReferenceNameAssignment_3() { return cReferenceNameAssignment_3; }

		//AttReference
		public RuleCall getReferenceNameAttReferenceParserRuleCall_3_0() { return cReferenceNameAttReferenceParserRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"label"
		public Keyword getLabelKeyword_5() { return cLabelKeyword_5; }

		//label=STRING
		public Assignment getLabelAssignment_6() { return cLabelAssignment_6; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_6_0() { return cLabelSTRINGTerminalRuleCall_6_0; }

		//"style"
		public Keyword getStyleKeyword_7() { return cStyleKeyword_7; }

		//style=[LineStyle]
		public Assignment getStyleAssignment_8() { return cStyleAssignment_8; }

		//[LineStyle]
		public CrossReference getStyleLineStyleCrossReference_8_0() { return cStyleLineStyleCrossReference_8_0; }

		//ID
		public RuleCall getStyleLineStyleIDTerminalRuleCall_8_0_1() { return cStyleLineStyleIDTerminalRuleCall_8_0_1; }

		//"source"
		public Keyword getSourceKeyword_9() { return cSourceKeyword_9; }

		//"decoration"
		public Keyword getDecorationKeyword_10() { return cDecorationKeyword_10; }

		//sourceDecoration=LineDecoration
		public Assignment getSourceDecorationAssignment_11() { return cSourceDecorationAssignment_11; }

		//LineDecoration
		public RuleCall getSourceDecorationLineDecorationParserRuleCall_11_0() { return cSourceDecorationLineDecorationParserRuleCall_11_0; }

		//"target"
		public Keyword getTargetKeyword_12() { return cTargetKeyword_12; }

		//"decoration"
		public Keyword getDecorationKeyword_13() { return cDecorationKeyword_13; }

		//targetDecoration=LineDecoration
		public Assignment getTargetDecorationAssignment_14() { return cTargetDecorationAssignment_14; }

		//LineDecoration
		public RuleCall getTargetDecorationLineDecorationParserRuleCall_14_0() { return cTargetDecorationLineDecorationParserRuleCall_14_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}

	public class NodeLineAltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NodeLineAlt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNode_lineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cExtendsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cParentNodeLineDefCrossReference_3_0 = (CrossReference)cParentAssignment_3.eContents().get(0);
		private final RuleCall cParentNodeLineDefIDTerminalRuleCall_3_0_1 = (RuleCall)cParentNodeLineDefCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cStyleKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cStyleAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cStyleLineStyleCrossReference_5_1_0 = (CrossReference)cStyleAssignment_5_1.eContents().get(0);
		private final RuleCall cStyleLineStyleIDTerminalRuleCall_5_1_0_1 = (RuleCall)cStyleLineStyleCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSourceKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cDecorationKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cSourceDecorationAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cSourceDecorationLineDecorationParserRuleCall_6_2_0 = (RuleCall)cSourceDecorationAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cTargetKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cDecorationKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cTargetDecorationAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cTargetDecorationLineDecorationParserRuleCall_7_2_0 = (RuleCall)cTargetDecorationAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//NodeLineAlt:
		//	"Node_line" name=ID "extends" parent=[NodeLineDef] "{" ("style" style=[LineStyle])? ("source" "decoration"
		//	sourceDecoration=LineDecoration)? ("target" "decoration" targetDecoration=LineDecoration)? "}";
		public ParserRule getRule() { return rule; }

		//"Node_line" name=ID "extends" parent=[NodeLineDef] "{" ("style" style=[LineStyle])? ("source" "decoration"
		//sourceDecoration=LineDecoration)? ("target" "decoration" targetDecoration=LineDecoration)? "}"
		public Group getGroup() { return cGroup; }

		//"Node_line"
		public Keyword getNode_lineKeyword_0() { return cNode_lineKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"extends"
		public Keyword getExtendsKeyword_2() { return cExtendsKeyword_2; }

		//parent=[NodeLineDef]
		public Assignment getParentAssignment_3() { return cParentAssignment_3; }

		//[NodeLineDef]
		public CrossReference getParentNodeLineDefCrossReference_3_0() { return cParentNodeLineDefCrossReference_3_0; }

		//ID
		public RuleCall getParentNodeLineDefIDTerminalRuleCall_3_0_1() { return cParentNodeLineDefIDTerminalRuleCall_3_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("style" style=[LineStyle])?
		public Group getGroup_5() { return cGroup_5; }

		//"style"
		public Keyword getStyleKeyword_5_0() { return cStyleKeyword_5_0; }

		//style=[LineStyle]
		public Assignment getStyleAssignment_5_1() { return cStyleAssignment_5_1; }

		//[LineStyle]
		public CrossReference getStyleLineStyleCrossReference_5_1_0() { return cStyleLineStyleCrossReference_5_1_0; }

		//ID
		public RuleCall getStyleLineStyleIDTerminalRuleCall_5_1_0_1() { return cStyleLineStyleIDTerminalRuleCall_5_1_0_1; }

		//("source" "decoration" sourceDecoration=LineDecoration)?
		public Group getGroup_6() { return cGroup_6; }

		//"source"
		public Keyword getSourceKeyword_6_0() { return cSourceKeyword_6_0; }

		//"decoration"
		public Keyword getDecorationKeyword_6_1() { return cDecorationKeyword_6_1; }

		//sourceDecoration=LineDecoration
		public Assignment getSourceDecorationAssignment_6_2() { return cSourceDecorationAssignment_6_2; }

		//LineDecoration
		public RuleCall getSourceDecorationLineDecorationParserRuleCall_6_2_0() { return cSourceDecorationLineDecorationParserRuleCall_6_2_0; }

		//("target" "decoration" targetDecoration=LineDecoration)?
		public Group getGroup_7() { return cGroup_7; }

		//"target"
		public Keyword getTargetKeyword_7_0() { return cTargetKeyword_7_0; }

		//"decoration"
		public Keyword getDecorationKeyword_7_1() { return cDecorationKeyword_7_1; }

		//targetDecoration=LineDecoration
		public Assignment getTargetDecorationAssignment_7_2() { return cTargetDecorationAssignment_7_2; }

		//LineDecoration
		public RuleCall getTargetDecorationLineDecorationParserRuleCall_7_2_0() { return cTargetDecorationLineDecorationParserRuleCall_7_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class InterNodeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InterNodeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInternal_nodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cForKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferenceNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReferenceNameAttReferenceParserRuleCall_3_0 = (RuleCall)cReferenceNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLayoutKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLayoutAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLayoutLayoutParserRuleCall_6_0 = (RuleCall)cLayoutAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//InterNodeDef:
		//	"Internal_node" name=ID "for" referenceName=AttReference "{" "layout" layout=Layout "}";
		public ParserRule getRule() { return rule; }

		//"Internal_node" name=ID "for" referenceName=AttReference "{" "layout" layout=Layout "}"
		public Group getGroup() { return cGroup; }

		//"Internal_node"
		public Keyword getInternal_nodeKeyword_0() { return cInternal_nodeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"for"
		public Keyword getForKeyword_2() { return cForKeyword_2; }

		//referenceName=AttReference
		public Assignment getReferenceNameAssignment_3() { return cReferenceNameAssignment_3; }

		//AttReference
		public RuleCall getReferenceNameAttReferenceParserRuleCall_3_0() { return cReferenceNameAttReferenceParserRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"layout"
		public Keyword getLayoutKeyword_5() { return cLayoutKeyword_5; }

		//layout=Layout
		public Assignment getLayoutAssignment_6() { return cLayoutAssignment_6; }

		//Layout
		public RuleCall getLayoutLayoutParserRuleCall_6_0() { return cLayoutLayoutParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class InterNodeAltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InterNodeAlt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInternal_nodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cExtendsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cParentInterNodeDefCrossReference_3_0 = (CrossReference)cParentAssignment_3.eContents().get(0);
		private final RuleCall cParentInterNodeDefIDTerminalRuleCall_3_0_1 = (RuleCall)cParentInterNodeDefCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLayoutKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLayoutAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLayoutLayoutParserRuleCall_6_0 = (RuleCall)cLayoutAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//InterNodeAlt:
		//	"Internal_node" name=ID "extends" parent=[InterNodeDef] "{" "layout" layout=Layout "}";
		public ParserRule getRule() { return rule; }

		//"Internal_node" name=ID "extends" parent=[InterNodeDef] "{" "layout" layout=Layout "}"
		public Group getGroup() { return cGroup; }

		//"Internal_node"
		public Keyword getInternal_nodeKeyword_0() { return cInternal_nodeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"extends"
		public Keyword getExtendsKeyword_2() { return cExtendsKeyword_2; }

		//parent=[InterNodeDef]
		public Assignment getParentAssignment_3() { return cParentAssignment_3; }

		//[InterNodeDef]
		public CrossReference getParentInterNodeDefCrossReference_3_0() { return cParentInterNodeDefCrossReference_3_0; }

		//ID
		public RuleCall getParentInterNodeDefIDTerminalRuleCall_3_0_1() { return cParentInterNodeDefIDTerminalRuleCall_3_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"layout"
		public Keyword getLayoutKeyword_5() { return cLayoutKeyword_5; }

		//layout=Layout
		public Assignment getLayoutAssignment_6() { return cLayoutAssignment_6; }

		//Layout
		public RuleCall getLayoutLayoutParserRuleCall_6_0() { return cLayoutLayoutParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ExternalNodeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExternalNodeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExternal_nodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cForKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferenceNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReferenceNameAttReferenceParserRuleCall_3_0 = (RuleCall)cReferenceNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSizeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSizeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSizeSizeParserRuleCall_6_0 = (RuleCall)cSizeAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ExternalNodeDef:
		//	"External_node" name=ID "for" referenceName=AttReference "{" "size" size=Size "}";
		public ParserRule getRule() { return rule; }

		//"External_node" name=ID "for" referenceName=AttReference "{" "size" size=Size "}"
		public Group getGroup() { return cGroup; }

		//"External_node"
		public Keyword getExternal_nodeKeyword_0() { return cExternal_nodeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"for"
		public Keyword getForKeyword_2() { return cForKeyword_2; }

		//referenceName=AttReference
		public Assignment getReferenceNameAssignment_3() { return cReferenceNameAssignment_3; }

		//AttReference
		public RuleCall getReferenceNameAttReferenceParserRuleCall_3_0() { return cReferenceNameAttReferenceParserRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"size"
		public Keyword getSizeKeyword_5() { return cSizeKeyword_5; }

		//size=Size
		public Assignment getSizeAssignment_6() { return cSizeAssignment_6; }

		//Size
		public RuleCall getSizeSizeParserRuleCall_6_0() { return cSizeSizeParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ExternalNodeAltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExternalNodeAlt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExternal_nodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cExtendsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cParentExternalNodeDefCrossReference_3_0 = (CrossReference)cParentAssignment_3.eContents().get(0);
		private final RuleCall cParentExternalNodeDefIDTerminalRuleCall_3_0_1 = (RuleCall)cParentExternalNodeDefCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSizeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSizeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSizeSizeParserRuleCall_6_0 = (RuleCall)cSizeAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ExternalNodeAlt:
		//	"External_node" name=ID "extends" parent=[ExternalNodeDef] "{" "size" size=Size "}";
		public ParserRule getRule() { return rule; }

		//"External_node" name=ID "extends" parent=[ExternalNodeDef] "{" "size" size=Size "}"
		public Group getGroup() { return cGroup; }

		//"External_node"
		public Keyword getExternal_nodeKeyword_0() { return cExternal_nodeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"extends"
		public Keyword getExtendsKeyword_2() { return cExtendsKeyword_2; }

		//parent=[ExternalNodeDef]
		public Assignment getParentAssignment_3() { return cParentAssignment_3; }

		//[ExternalNodeDef]
		public CrossReference getParentExternalNodeDefCrossReference_3_0() { return cParentExternalNodeDefCrossReference_3_0; }

		//ID
		public RuleCall getParentExternalNodeDefIDTerminalRuleCall_3_0_1() { return cParentExternalNodeDefIDTerminalRuleCall_3_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"size"
		public Keyword getSizeKeyword_5() { return cSizeKeyword_5; }

		//size=Size
		public Assignment getSizeAssignment_6() { return cSizeAssignment_6; }

		//Size
		public RuleCall getSizeSizeParserRuleCall_6_0() { return cSizeSizeParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class RulesDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RulesDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRulesDefinitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRulesDefinitionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRulessAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRulessRuleParserRuleCall_3_0 = (RuleCall)cRulessAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///////////RulesDefinition/////////
		//RulesDefinition:
		//	{RulesDefinition} "Rules definition" "{" ruless+=Rule* "}";
		public ParserRule getRule() { return rule; }

		//{RulesDefinition} "Rules definition" "{" ruless+=Rule* "}"
		public Group getGroup() { return cGroup; }

		//{RulesDefinition}
		public Action getRulesDefinitionAction_0() { return cRulesDefinitionAction_0; }

		//"Rules definition"
		public Keyword getRulesDefinitionKeyword_1() { return cRulesDefinitionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//ruless+=Rule*
		public Assignment getRulessAssignment_3() { return cRulessAssignment_3; }

		//Rule
		public RuleCall getRulessRuleParserRuleCall_3_0() { return cRulessRuleParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Rule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRuleForTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRuleForReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Rule:
		//	RuleForType | RuleForReference;
		public ParserRule getRule() { return rule; }

		//RuleForType | RuleForReference
		public Alternatives getAlternatives() { return cAlternatives; }

		//RuleForType
		public RuleCall getRuleForTypeParserRuleCall_0() { return cRuleForTypeParserRuleCall_0; }

		//RuleForReference
		public RuleCall getRuleForReferenceParserRuleCall_1() { return cRuleForReferenceParserRuleCall_1; }
	}

	public class RuleForTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RuleForType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRulesForKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassReferenceClassReferenceParserRuleCall_1_0 = (RuleCall)cClassReferenceAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCasesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCasesCaseTypeParserRuleCall_3_0 = (RuleCall)cCasesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RuleForType:
		//	"Rules for" classReference=ClassReference "{" cases+=CaseType* "}";
		public ParserRule getRule() { return rule; }

		//"Rules for" classReference=ClassReference "{" cases+=CaseType* "}"
		public Group getGroup() { return cGroup; }

		//"Rules for"
		public Keyword getRulesForKeyword_0() { return cRulesForKeyword_0; }

		//classReference=ClassReference
		public Assignment getClassReferenceAssignment_1() { return cClassReferenceAssignment_1; }

		//ClassReference
		public RuleCall getClassReferenceClassReferenceParserRuleCall_1_0() { return cClassReferenceClassReferenceParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//cases+=CaseType*
		public Assignment getCasesAssignment_3() { return cCasesAssignment_3; }

		//CaseType
		public RuleCall getCasesCaseTypeParserRuleCall_3_0() { return cCasesCaseTypeParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class RuleForReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RuleForReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRulesForKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReferenceAttReferenceParserRuleCall_1_0 = (RuleCall)cReferenceAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCasesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCasesCaseReferenceParserRuleCall_3_0 = (RuleCall)cCasesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RuleForReference:
		//	"Rules for" reference=AttReference "{" cases+=CaseReference* "}";
		public ParserRule getRule() { return rule; }

		//"Rules for" reference=AttReference "{" cases+=CaseReference* "}"
		public Group getGroup() { return cGroup; }

		//"Rules for"
		public Keyword getRulesForKeyword_0() { return cRulesForKeyword_0; }

		//reference=AttReference
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }

		//AttReference
		public RuleCall getReferenceAttReferenceParserRuleCall_1_0() { return cReferenceAttReferenceParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//cases+=CaseReference*
		public Assignment getCasesAssignment_3() { return cCasesAssignment_3; }

		//CaseReference
		public RuleCall getCasesCaseReferenceParserRuleCall_3_0() { return cCasesCaseReferenceParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class CaseTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CaseType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCaseTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCaseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConditionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConditionSTRINGTerminalRuleCall_2_0 = (RuleCall)cConditionAssignment_2.eContents().get(0);
		private final Keyword cUseKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cNodeElementAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final CrossReference cNodeElementNodeAltCrossReference_4_0_0 = (CrossReference)cNodeElementAssignment_4_0.eContents().get(0);
		private final RuleCall cNodeElementNodeAltIDTerminalRuleCall_4_0_0_1 = (RuleCall)cNodeElementNodeAltCrossReference_4_0_0.eContents().get(1);
		private final Keyword cDefaultKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		
		//CaseType:
		//	{CaseType} "case" condition=STRING "use" (nodeElement=[NodeAlt] | "default");
		public ParserRule getRule() { return rule; }

		//{CaseType} "case" condition=STRING "use" (nodeElement=[NodeAlt] | "default")
		public Group getGroup() { return cGroup; }

		//{CaseType}
		public Action getCaseTypeAction_0() { return cCaseTypeAction_0; }

		//"case"
		public Keyword getCaseKeyword_1() { return cCaseKeyword_1; }

		//condition=STRING
		public Assignment getConditionAssignment_2() { return cConditionAssignment_2; }

		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_2_0() { return cConditionSTRINGTerminalRuleCall_2_0; }

		//"use"
		public Keyword getUseKeyword_3() { return cUseKeyword_3; }

		//nodeElement=[NodeAlt] | "default"
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//nodeElement=[NodeAlt]
		public Assignment getNodeElementAssignment_4_0() { return cNodeElementAssignment_4_0; }

		//[NodeAlt]
		public CrossReference getNodeElementNodeAltCrossReference_4_0_0() { return cNodeElementNodeAltCrossReference_4_0_0; }

		//ID
		public RuleCall getNodeElementNodeAltIDTerminalRuleCall_4_0_0_1() { return cNodeElementNodeAltIDTerminalRuleCall_4_0_0_1; }

		//"default"
		public Keyword getDefaultKeyword_4_1() { return cDefaultKeyword_4_1; }
	}

	public class CaseReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CaseReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCaseReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCaseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConditionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConditionSTRINGTerminalRuleCall_2_0 = (RuleCall)cConditionAssignment_2.eContents().get(0);
		private final Keyword cUseKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cReferenceElementAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final CrossReference cReferenceElementAttLinkAltCrossReference_4_0_0 = (CrossReference)cReferenceElementAssignment_4_0.eContents().get(0);
		private final RuleCall cReferenceElementAttLinkAltIDTerminalRuleCall_4_0_0_1 = (RuleCall)cReferenceElementAttLinkAltCrossReference_4_0_0.eContents().get(1);
		private final Keyword cDefaultKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		
		//CaseReference:
		//	{CaseReference} "case" condition=STRING "use" (referenceElement=[AttLinkAlt] | "default");
		public ParserRule getRule() { return rule; }

		//{CaseReference} "case" condition=STRING "use" (referenceElement=[AttLinkAlt] | "default")
		public Group getGroup() { return cGroup; }

		//{CaseReference}
		public Action getCaseReferenceAction_0() { return cCaseReferenceAction_0; }

		//"case"
		public Keyword getCaseKeyword_1() { return cCaseKeyword_1; }

		//condition=STRING
		public Assignment getConditionAssignment_2() { return cConditionAssignment_2; }

		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_2_0() { return cConditionSTRINGTerminalRuleCall_2_0; }

		//"use"
		public Keyword getUseKeyword_3() { return cUseKeyword_3; }

		//referenceElement=[AttLinkAlt] | "default"
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//referenceElement=[AttLinkAlt]
		public Assignment getReferenceElementAssignment_4_0() { return cReferenceElementAssignment_4_0; }

		//[AttLinkAlt]
		public CrossReference getReferenceElementAttLinkAltCrossReference_4_0_0() { return cReferenceElementAttLinkAltCrossReference_4_0_0; }

		//ID
		public RuleCall getReferenceElementAttLinkAltIDTerminalRuleCall_4_0_0_1() { return cReferenceElementAttLinkAltIDTerminalRuleCall_4_0_0_1; }

		//"default"
		public Keyword getDefaultKeyword_4_1() { return cDefaultKeyword_4_1; }
	}

	public class InteractionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InteractionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInteractionDefinitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInteractionDefinitionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInteractionElementsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInteractionElementsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInteractionElementsInteractionElementParserRuleCall_5_0 = (RuleCall)cInteractionElementsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cStatementsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cStatementsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cStatementsStatementParserRuleCall_9_0 = (RuleCall)cStatementsAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		///////////InteractionDefinition/////////
		//InteractionDefinition:
		//	{InteractionDefinition} "Interaction definition" "{" "Interaction elements" "{"
		//	interactionElements+=InteractionElement* "}" "Statements" "{" statements+=Statement* "}" "}";
		public ParserRule getRule() { return rule; }

		//{InteractionDefinition} "Interaction definition" "{" "Interaction elements" "{" interactionElements+=InteractionElement*
		//"}" "Statements" "{" statements+=Statement* "}" "}"
		public Group getGroup() { return cGroup; }

		//{InteractionDefinition}
		public Action getInteractionDefinitionAction_0() { return cInteractionDefinitionAction_0; }

		//"Interaction definition"
		public Keyword getInteractionDefinitionKeyword_1() { return cInteractionDefinitionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"Interaction elements"
		public Keyword getInteractionElementsKeyword_3() { return cInteractionElementsKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//interactionElements+=InteractionElement*
		public Assignment getInteractionElementsAssignment_5() { return cInteractionElementsAssignment_5; }

		//InteractionElement
		public RuleCall getInteractionElementsInteractionElementParserRuleCall_5_0() { return cInteractionElementsInteractionElementParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//"Statements"
		public Keyword getStatementsKeyword_7() { return cStatementsKeyword_7; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }

		//statements+=Statement*
		public Assignment getStatementsAssignment_9() { return cStatementsAssignment_9; }

		//Statement
		public RuleCall getStatementsStatementParserRuleCall_9_0() { return cStatementsStatementParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class InteractionElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InteractionElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cWizardParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cViewParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//InteractionElement:
		//	Wizard | View;
		public ParserRule getRule() { return rule; }

		//Wizard | View
		public Alternatives getAlternatives() { return cAlternatives; }

		//Wizard
		public RuleCall getWizardParserRuleCall_0() { return cWizardParserRuleCall_0; }

		//View
		public RuleCall getViewParserRuleCall_1() { return cViewParserRuleCall_1; }
	}

	public class WizardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Wizard");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementWizardParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPersonalWizardParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Wizard:
		//	ElementWizard | PersonalWizard;
		public ParserRule getRule() { return rule; }

		//ElementWizard | PersonalWizard
		public Alternatives getAlternatives() { return cAlternatives; }

		//ElementWizard
		public RuleCall getElementWizardParserRuleCall_0() { return cElementWizardParserRuleCall_0; }

		//PersonalWizard
		public RuleCall getPersonalWizardParserRuleCall_1() { return cPersonalWizardParserRuleCall_1; }
	}

	public class ElementWizardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementWizard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWizardKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cForKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cContextKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cClassReferenceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cClassReferenceClassReferenceParserRuleCall_4_0 = (RuleCall)cClassReferenceAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cTitleKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTitleAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTitleSTRINGTerminalRuleCall_7_0 = (RuleCall)cTitleAssignment_7.eContents().get(0);
		private final Keyword cDescriptionKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDescriptionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_9_0 = (RuleCall)cDescriptionAssignment_9.eContents().get(0);
		private final Keyword cTypeKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cTypeAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cTypeWizardTypeEnumRuleCall_11_0 = (RuleCall)cTypeAssignment_11.eContents().get(0);
		private final Keyword cPagesKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cPagesAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cPagesPageParserRuleCall_14_0 = (RuleCall)cPagesAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cDefaultKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cButtonsKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cDefaultButtonsAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cDefaultButtonsEBooleanParserRuleCall_18_0 = (RuleCall)cDefaultButtonsAssignment_18.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//ElementWizard:
		//	"Wizard" name=ID "for" "context" classReference=ClassReference "{" "title" title=STRING "description"
		//	description=STRING "type" type=WizardType "pages" "{" pages+=Page* "}" "default" "buttons" defaultButtons=EBoolean
		//	"}";
		public ParserRule getRule() { return rule; }

		//"Wizard" name=ID "for" "context" classReference=ClassReference "{" "title" title=STRING "description" description=STRING
		//"type" type=WizardType "pages" "{" pages+=Page* "}" "default" "buttons" defaultButtons=EBoolean "}"
		public Group getGroup() { return cGroup; }

		//"Wizard"
		public Keyword getWizardKeyword_0() { return cWizardKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"for"
		public Keyword getForKeyword_2() { return cForKeyword_2; }

		//"context"
		public Keyword getContextKeyword_3() { return cContextKeyword_3; }

		//classReference=ClassReference
		public Assignment getClassReferenceAssignment_4() { return cClassReferenceAssignment_4; }

		//ClassReference
		public RuleCall getClassReferenceClassReferenceParserRuleCall_4_0() { return cClassReferenceClassReferenceParserRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//"title"
		public Keyword getTitleKeyword_6() { return cTitleKeyword_6; }

		//title=STRING
		public Assignment getTitleAssignment_7() { return cTitleAssignment_7; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_7_0() { return cTitleSTRINGTerminalRuleCall_7_0; }

		//"description"
		public Keyword getDescriptionKeyword_8() { return cDescriptionKeyword_8; }

		//description=STRING
		public Assignment getDescriptionAssignment_9() { return cDescriptionAssignment_9; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_9_0() { return cDescriptionSTRINGTerminalRuleCall_9_0; }

		//"type"
		public Keyword getTypeKeyword_10() { return cTypeKeyword_10; }

		//type=WizardType
		public Assignment getTypeAssignment_11() { return cTypeAssignment_11; }

		//WizardType
		public RuleCall getTypeWizardTypeEnumRuleCall_11_0() { return cTypeWizardTypeEnumRuleCall_11_0; }

		//"pages"
		public Keyword getPagesKeyword_12() { return cPagesKeyword_12; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }

		//pages+=Page*
		public Assignment getPagesAssignment_14() { return cPagesAssignment_14; }

		//Page
		public RuleCall getPagesPageParserRuleCall_14_0() { return cPagesPageParserRuleCall_14_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }

		//"default"
		public Keyword getDefaultKeyword_16() { return cDefaultKeyword_16; }

		//"buttons"
		public Keyword getButtonsKeyword_17() { return cButtonsKeyword_17; }

		//defaultButtons=EBoolean
		public Assignment getDefaultButtonsAssignment_18() { return cDefaultButtonsAssignment_18; }

		//EBoolean
		public RuleCall getDefaultButtonsEBooleanParserRuleCall_18_0() { return cDefaultButtonsEBooleanParserRuleCall_18_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}

	public class PageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Page");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTitleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTitleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTitleSTRINGTerminalRuleCall_4_0 = (RuleCall)cTitleAssignment_4.eContents().get(0);
		private final Keyword cDescriptionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDescriptionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_6_0 = (RuleCall)cDescriptionAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAttributesToShowKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cAttributesAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cAttributesAttMapParserRuleCall_7_2_0 = (RuleCall)cAttributesAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cReferencesToShowKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cReferencesAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cReferencesIDTerminalRuleCall_8_2_0 = (RuleCall)cReferencesAssignment_8_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cAdditionalsButtonsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cButtonsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cButtonsButtonParserRuleCall_9_2_0 = (RuleCall)cButtonsAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Page:
		//	{Page} "Page" "{" "title" title=STRING "description" description=STRING ("Attributes to show" "{" attributes+=AttMap*
		//	"}")? ("References to show" "{" references+=ID* "}")? ("Additionals buttons" "{" buttons+=Button* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{Page} "Page" "{" "title" title=STRING "description" description=STRING ("Attributes to show" "{" attributes+=AttMap*
		//"}")? ("References to show" "{" references+=ID* "}")? ("Additionals buttons" "{" buttons+=Button* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{Page}
		public Action getPageAction_0() { return cPageAction_0; }

		//"Page"
		public Keyword getPageKeyword_1() { return cPageKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"title"
		public Keyword getTitleKeyword_3() { return cTitleKeyword_3; }

		//title=STRING
		public Assignment getTitleAssignment_4() { return cTitleAssignment_4; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_4_0() { return cTitleSTRINGTerminalRuleCall_4_0; }

		//"description"
		public Keyword getDescriptionKeyword_5() { return cDescriptionKeyword_5; }

		//description=STRING
		public Assignment getDescriptionAssignment_6() { return cDescriptionAssignment_6; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_6_0() { return cDescriptionSTRINGTerminalRuleCall_6_0; }

		//("Attributes to show" "{" attributes+=AttMap* "}")?
		public Group getGroup_7() { return cGroup_7; }

		//"Attributes to show"
		public Keyword getAttributesToShowKeyword_7_0() { return cAttributesToShowKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//attributes+=AttMap*
		public Assignment getAttributesAssignment_7_2() { return cAttributesAssignment_7_2; }

		//AttMap
		public RuleCall getAttributesAttMapParserRuleCall_7_2_0() { return cAttributesAttMapParserRuleCall_7_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_3() { return cRightCurlyBracketKeyword_7_3; }

		//("References to show" "{" references+=ID* "}")?
		public Group getGroup_8() { return cGroup_8; }

		//"References to show"
		public Keyword getReferencesToShowKeyword_8_0() { return cReferencesToShowKeyword_8_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }

		//references+=ID*
		public Assignment getReferencesAssignment_8_2() { return cReferencesAssignment_8_2; }

		//ID
		public RuleCall getReferencesIDTerminalRuleCall_8_2_0() { return cReferencesIDTerminalRuleCall_8_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_3() { return cRightCurlyBracketKeyword_8_3; }

		//("Additionals buttons" "{" buttons+=Button* "}")?
		public Group getGroup_9() { return cGroup_9; }

		//"Additionals buttons"
		public Keyword getAdditionalsButtonsKeyword_9_0() { return cAdditionalsButtonsKeyword_9_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }

		//buttons+=Button*
		public Assignment getButtonsAssignment_9_2() { return cButtonsAssignment_9_2; }

		//Button
		public RuleCall getButtonsButtonParserRuleCall_9_2_0() { return cButtonsButtonParserRuleCall_9_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_3() { return cRightCurlyBracketKeyword_9_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class AttMapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttMap");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttMapAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributeSTRINGTerminalRuleCall_2_0 = (RuleCall)cAttributeAssignment_2.eContents().get(0);
		private final Keyword cCommaSpaceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLabelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLabelSTRINGTerminalRuleCall_4_0 = (RuleCall)cLabelAssignment_4.eContents().get(0);
		private final Keyword cCommaSpaceKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cComponentAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cComponentComponentTypeEnumRuleCall_6_0 = (RuleCall)cComponentAssignment_6.eContents().get(0);
		private final Keyword cCommaSpaceKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDefaultValueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_8_0 = (RuleCall)cDefaultValueAssignment_8.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//AttMap:
		//	{AttMap} "(" attribute=STRING ", " label=STRING ", " component=ComponentType ", " defaultValue=STRING ")";
		public ParserRule getRule() { return rule; }

		//{AttMap} "(" attribute=STRING ", " label=STRING ", " component=ComponentType ", " defaultValue=STRING ")"
		public Group getGroup() { return cGroup; }

		//{AttMap}
		public Action getAttMapAction_0() { return cAttMapAction_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//attribute=STRING
		public Assignment getAttributeAssignment_2() { return cAttributeAssignment_2; }

		//STRING
		public RuleCall getAttributeSTRINGTerminalRuleCall_2_0() { return cAttributeSTRINGTerminalRuleCall_2_0; }

		//", "
		public Keyword getCommaSpaceKeyword_3() { return cCommaSpaceKeyword_3; }

		//label=STRING
		public Assignment getLabelAssignment_4() { return cLabelAssignment_4; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_4_0() { return cLabelSTRINGTerminalRuleCall_4_0; }

		//", "
		public Keyword getCommaSpaceKeyword_5() { return cCommaSpaceKeyword_5; }

		//component=ComponentType
		public Assignment getComponentAssignment_6() { return cComponentAssignment_6; }

		//ComponentType
		public RuleCall getComponentComponentTypeEnumRuleCall_6_0() { return cComponentComponentTypeEnumRuleCall_6_0; }

		//", "
		public Keyword getCommaSpaceKeyword_7() { return cCommaSpaceKeyword_7; }

		//defaultValue=STRING
		public Assignment getDefaultValueAssignment_8() { return cDefaultValueAssignment_8; }

		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_8_0() { return cDefaultValueSTRINGTerminalRuleCall_8_0; }

		//")"
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
	}

	public class ButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Button");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cButtonAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cButtonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLabelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLabelSTRINGTerminalRuleCall_3_0 = (RuleCall)cLabelAssignment_3.eContents().get(0);
		private final Keyword cCommaSpaceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMethodActionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMethodActionSTRINGTerminalRuleCall_5_0 = (RuleCall)cMethodActionAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Button:
		//	{Button} "Button" "(" label=STRING ", " methodAction=STRING ")";
		public ParserRule getRule() { return rule; }

		//{Button} "Button" "(" label=STRING ", " methodAction=STRING ")"
		public Group getGroup() { return cGroup; }

		//{Button}
		public Action getButtonAction_0() { return cButtonAction_0; }

		//"Button"
		public Keyword getButtonKeyword_1() { return cButtonKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//label=STRING
		public Assignment getLabelAssignment_3() { return cLabelAssignment_3; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_3_0() { return cLabelSTRINGTerminalRuleCall_3_0; }

		//", "
		public Keyword getCommaSpaceKeyword_4() { return cCommaSpaceKeyword_4; }

		//methodAction=STRING
		public Assignment getMethodActionAssignment_5() { return cMethodActionAssignment_5; }

		//STRING
		public RuleCall getMethodActionSTRINGTerminalRuleCall_5_0() { return cMethodActionSTRINGTerminalRuleCall_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class PersonalWizardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PersonalWizard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPersonalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cWizardKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cImplementationReferenceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cReferenceImplementationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cReferenceImplementationSTRINGTerminalRuleCall_5_0 = (RuleCall)cReferenceImplementationAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//PersonalWizard:
		//	"Personal" "wizard" name=ID "{" "implementation reference" referenceImplementation=STRING "}";
		public ParserRule getRule() { return rule; }

		//"Personal" "wizard" name=ID "{" "implementation reference" referenceImplementation=STRING "}"
		public Group getGroup() { return cGroup; }

		//"Personal"
		public Keyword getPersonalKeyword_0() { return cPersonalKeyword_0; }

		//"wizard"
		public Keyword getWizardKeyword_1() { return cWizardKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"implementation reference"
		public Keyword getImplementationReferenceKeyword_4() { return cImplementationReferenceKeyword_4; }

		//referenceImplementation=STRING
		public Assignment getReferenceImplementationAssignment_5() { return cReferenceImplementationAssignment_5; }

		//STRING
		public RuleCall getReferenceImplementationSTRINGTerminalRuleCall_5_0() { return cReferenceImplementationSTRINGTerminalRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "View");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPredefinedViewParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPersonalViewParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//View:
		//	PredefinedView | PersonalView;
		public ParserRule getRule() { return rule; }

		//PredefinedView | PersonalView
		public Alternatives getAlternatives() { return cAlternatives; }

		//PredefinedView
		public RuleCall getPredefinedViewParserRuleCall_0() { return cPredefinedViewParserRuleCall_0; }

		//PersonalView
		public RuleCall getPersonalViewParserRuleCall_1() { return cPersonalViewParserRuleCall_1; }
	}

	public class PredefinedViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PredefinedView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cViewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTitleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTitleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTitleSTRINGTerminalRuleCall_4_0 = (RuleCall)cTitleAssignment_4.eContents().get(0);
		private final Keyword cDescriptionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDescriptionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_6_0 = (RuleCall)cDescriptionAssignment_6.eContents().get(0);
		private final Keyword cTypeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTypeViewTypeParserRuleCall_8_0 = (RuleCall)cTypeAssignment_8.eContents().get(0);
		private final Keyword cStyleKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cStyleAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cStyleViewStyleParserRuleCall_10_0 = (RuleCall)cStyleAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cClassKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cDataKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cProviderKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Assignment cReferenceImplementationAssignment_11_3 = (Assignment)cGroup_11.eContents().get(3);
		private final RuleCall cReferenceImplementationSTRINGTerminalRuleCall_11_3_0 = (RuleCall)cReferenceImplementationAssignment_11_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//PredefinedView:
		//	"View" name=ID "{" "title" title=STRING "description" description=STRING "type" type=ViewType "style" style=ViewStyle
		//	("class" "data" "provider" referenceImplementation=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"View" name=ID "{" "title" title=STRING "description" description=STRING "type" type=ViewType "style" style=ViewStyle
		//("class" "data" "provider" referenceImplementation=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"View"
		public Keyword getViewKeyword_0() { return cViewKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"title"
		public Keyword getTitleKeyword_3() { return cTitleKeyword_3; }

		//title=STRING
		public Assignment getTitleAssignment_4() { return cTitleAssignment_4; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_4_0() { return cTitleSTRINGTerminalRuleCall_4_0; }

		//"description"
		public Keyword getDescriptionKeyword_5() { return cDescriptionKeyword_5; }

		//description=STRING
		public Assignment getDescriptionAssignment_6() { return cDescriptionAssignment_6; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_6_0() { return cDescriptionSTRINGTerminalRuleCall_6_0; }

		//"type"
		public Keyword getTypeKeyword_7() { return cTypeKeyword_7; }

		//type=ViewType
		public Assignment getTypeAssignment_8() { return cTypeAssignment_8; }

		//ViewType
		public RuleCall getTypeViewTypeParserRuleCall_8_0() { return cTypeViewTypeParserRuleCall_8_0; }

		//"style"
		public Keyword getStyleKeyword_9() { return cStyleKeyword_9; }

		//style=ViewStyle
		public Assignment getStyleAssignment_10() { return cStyleAssignment_10; }

		//ViewStyle
		public RuleCall getStyleViewStyleParserRuleCall_10_0() { return cStyleViewStyleParserRuleCall_10_0; }

		//("class" "data" "provider" referenceImplementation=STRING)?
		public Group getGroup_11() { return cGroup_11; }

		//"class"
		public Keyword getClassKeyword_11_0() { return cClassKeyword_11_0; }

		//"data"
		public Keyword getDataKeyword_11_1() { return cDataKeyword_11_1; }

		//"provider"
		public Keyword getProviderKeyword_11_2() { return cProviderKeyword_11_2; }

		//referenceImplementation=STRING
		public Assignment getReferenceImplementationAssignment_11_3() { return cReferenceImplementationAssignment_11_3; }

		//STRING
		public RuleCall getReferenceImplementationSTRINGTerminalRuleCall_11_3_0() { return cReferenceImplementationSTRINGTerminalRuleCall_11_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class ViewTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ViewType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cShowChildsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cShowSelectionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCountTypesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ViewType:
		//	ShowChilds | ShowSelection | CountTypes;
		public ParserRule getRule() { return rule; }

		//ShowChilds | ShowSelection | CountTypes
		public Alternatives getAlternatives() { return cAlternatives; }

		//ShowChilds
		public RuleCall getShowChildsParserRuleCall_0() { return cShowChildsParserRuleCall_0; }

		//ShowSelection
		public RuleCall getShowSelectionParserRuleCall_1() { return cShowSelectionParserRuleCall_1; }

		//CountTypes
		public RuleCall getCountTypesParserRuleCall_2() { return cCountTypesParserRuleCall_2; }
	}

	public class ShowChildsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ShowChilds");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cShowChildsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cShowKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cChildsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cParentElementKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cClassReferenceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cClassReferenceClassReferenceParserRuleCall_5_0 = (RuleCall)cClassReferenceAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ShowChilds:
		//	{ShowChilds} "Show" "childs" "(" "parent element" classReference=ClassReference ")";
		public ParserRule getRule() { return rule; }

		//{ShowChilds} "Show" "childs" "(" "parent element" classReference=ClassReference ")"
		public Group getGroup() { return cGroup; }

		//{ShowChilds}
		public Action getShowChildsAction_0() { return cShowChildsAction_0; }

		//"Show"
		public Keyword getShowKeyword_1() { return cShowKeyword_1; }

		//"childs"
		public Keyword getChildsKeyword_2() { return cChildsKeyword_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//"parent element"
		public Keyword getParentElementKeyword_4() { return cParentElementKeyword_4; }

		//classReference=ClassReference
		public Assignment getClassReferenceAssignment_5() { return cClassReferenceAssignment_5; }

		//ClassReference
		public RuleCall getClassReferenceClassReferenceParserRuleCall_5_0() { return cClassReferenceClassReferenceParserRuleCall_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class ShowSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ShowSelection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cShowSelectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cShowKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSelectionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cFilterTypeKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cClassReferenceAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cClassReferenceClassReferenceParserRuleCall_3_2_0 = (RuleCall)cClassReferenceAssignment_3_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//ShowSelection:
		//	{ShowSelection} "Show" "selection" ("(" "filter type" classReference=ClassReference ")")?;
		public ParserRule getRule() { return rule; }

		//{ShowSelection} "Show" "selection" ("(" "filter type" classReference=ClassReference ")")?
		public Group getGroup() { return cGroup; }

		//{ShowSelection}
		public Action getShowSelectionAction_0() { return cShowSelectionAction_0; }

		//"Show"
		public Keyword getShowKeyword_1() { return cShowKeyword_1; }

		//"selection"
		public Keyword getSelectionKeyword_2() { return cSelectionKeyword_2; }

		//("(" "filter type" classReference=ClassReference ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//"filter type"
		public Keyword getFilterTypeKeyword_3_1() { return cFilterTypeKeyword_3_1; }

		//classReference=ClassReference
		public Assignment getClassReferenceAssignment_3_2() { return cClassReferenceAssignment_3_2; }

		//ClassReference
		public RuleCall getClassReferenceClassReferenceParserRuleCall_3_2_0() { return cClassReferenceClassReferenceParserRuleCall_3_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }
	}

	public class CountTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CountTypes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCountTypesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCountKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cClassReferenceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cClassReferenceClassReferenceParserRuleCall_5_0 = (RuleCall)cClassReferenceAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//CountTypes:
		//	{CountTypes} "Count" "types" "(" "type" classReference=ClassReference ")";
		public ParserRule getRule() { return rule; }

		//{CountTypes} "Count" "types" "(" "type" classReference=ClassReference ")"
		public Group getGroup() { return cGroup; }

		//{CountTypes}
		public Action getCountTypesAction_0() { return cCountTypesAction_0; }

		//"Count"
		public Keyword getCountKeyword_1() { return cCountKeyword_1; }

		//"types"
		public Keyword getTypesKeyword_2() { return cTypesKeyword_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//"type"
		public Keyword getTypeKeyword_4() { return cTypeKeyword_4; }

		//classReference=ClassReference
		public Assignment getClassReferenceAssignment_5() { return cClassReferenceAssignment_5; }

		//ClassReference
		public RuleCall getClassReferenceClassReferenceParserRuleCall_5_0() { return cClassReferenceClassReferenceParserRuleCall_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class ViewStyleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ViewStyle");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cTreeAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cTreeTreeKeyword_0_0 = (Keyword)cTreeAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cSelectionSelectionKeyword_1_0 = (Keyword)cSelectionAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cTableAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cTableTableKeyword_2_0_0 = (Keyword)cTableAssignment_2_0.eContents().get(0);
		private final Assignment cResultGraphicAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Keyword cResultGraphicGraphicKeyword_2_1_0 = (Keyword)cResultGraphicAssignment_2_1.eContents().get(0);
		
		//ViewStyle:
		//	tree="tree" | selection="selection" | table="table" resultGraphic="graphic";
		public ParserRule getRule() { return rule; }

		//tree="tree" | selection="selection" | table="table" resultGraphic="graphic"
		public Alternatives getAlternatives() { return cAlternatives; }

		//tree="tree"
		public Assignment getTreeAssignment_0() { return cTreeAssignment_0; }

		//"tree"
		public Keyword getTreeTreeKeyword_0_0() { return cTreeTreeKeyword_0_0; }

		//selection="selection"
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }

		//"selection"
		public Keyword getSelectionSelectionKeyword_1_0() { return cSelectionSelectionKeyword_1_0; }

		//table="table" resultGraphic="graphic"
		public Group getGroup_2() { return cGroup_2; }

		//table="table"
		public Assignment getTableAssignment_2_0() { return cTableAssignment_2_0; }

		//"table"
		public Keyword getTableTableKeyword_2_0_0() { return cTableTableKeyword_2_0_0; }

		//resultGraphic="graphic"
		public Assignment getResultGraphicAssignment_2_1() { return cResultGraphicAssignment_2_1; }

		//"graphic"
		public Keyword getResultGraphicGraphicKeyword_2_1_0() { return cResultGraphicGraphicKeyword_2_1_0; }
	}

	public class PersonalViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PersonalView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPersonalViewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cImplementationReferenceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReferenceImplementationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReferenceImplementationSTRINGTerminalRuleCall_4_0 = (RuleCall)cReferenceImplementationAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PersonalView:
		//	"Personal view" name=ID "{" "implementation reference" referenceImplementation=STRING "}";
		public ParserRule getRule() { return rule; }

		//"Personal view" name=ID "{" "implementation reference" referenceImplementation=STRING "}"
		public Group getGroup() { return cGroup; }

		//"Personal view"
		public Keyword getPersonalViewKeyword_0() { return cPersonalViewKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"implementation reference"
		public Keyword getImplementationReferenceKeyword_3() { return cImplementationReferenceKeyword_3; }

		//referenceImplementation=STRING
		public Assignment getReferenceImplementationAssignment_4() { return cReferenceImplementationAssignment_4; }

		//STRING
		public RuleCall getReferenceImplementationSTRINGTerminalRuleCall_4_0() { return cReferenceImplementationSTRINGTerminalRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Statement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionsForTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassReferenceIDTerminalRuleCall_1_0 = (RuleCall)cClassReferenceAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEventsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEventsEventParserRuleCall_3_0 = (RuleCall)cEventsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Statement:
		//	"Actions for type" classReference=ID "{" events+=Event* "}";
		public ParserRule getRule() { return rule; }

		//"Actions for type" classReference=ID "{" events+=Event* "}"
		public Group getGroup() { return cGroup; }

		//"Actions for type"
		public Keyword getActionsForTypeKeyword_0() { return cActionsForTypeKeyword_0; }

		//classReference=ID
		public Assignment getClassReferenceAssignment_1() { return cClassReferenceAssignment_1; }

		//ID
		public RuleCall getClassReferenceIDTerminalRuleCall_1_0() { return cClassReferenceIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//events+=Event*
		public Assignment getEventsAssignment_3() { return cEventsAssignment_3; }

		//Event
		public RuleCall getEventsEventParserRuleCall_3_0() { return cEventsEventParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEventAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEventTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventTypeEventTypeParserRuleCall_2_0 = (RuleCall)cEventTypeAssignment_2.eContents().get(0);
		private final Keyword cDoKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInstructionsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInstructionsInstructionParserRuleCall_5_0 = (RuleCall)cInstructionsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Event:
		//	{Event} "on" eventType=EventType "do" "{" instructions+=Instruction* "}";
		public ParserRule getRule() { return rule; }

		//{Event} "on" eventType=EventType "do" "{" instructions+=Instruction* "}"
		public Group getGroup() { return cGroup; }

		//{Event}
		public Action getEventAction_0() { return cEventAction_0; }

		//"on"
		public Keyword getOnKeyword_1() { return cOnKeyword_1; }

		//eventType=EventType
		public Assignment getEventTypeAssignment_2() { return cEventTypeAssignment_2; }

		//EventType
		public RuleCall getEventTypeEventTypeParserRuleCall_2_0() { return cEventTypeEventTypeParserRuleCall_2_0; }

		//"do"
		public Keyword getDoKeyword_3() { return cDoKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//instructions+=Instruction*
		public Assignment getInstructionsAssignment_5() { return cInstructionsAssignment_5; }

		//Instruction
		public RuleCall getInstructionsInstructionParserRuleCall_5_0() { return cInstructionsInstructionParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EventTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EventType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMouseEventParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKeyEventParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cElementEventParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMenuEventParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//EventType:
		//	MouseEvent | KeyEvent | ElementEvent | MenuEvent;
		public ParserRule getRule() { return rule; }

		//MouseEvent | KeyEvent | ElementEvent | MenuEvent
		public Alternatives getAlternatives() { return cAlternatives; }

		//MouseEvent
		public RuleCall getMouseEventParserRuleCall_0() { return cMouseEventParserRuleCall_0; }

		//KeyEvent
		public RuleCall getKeyEventParserRuleCall_1() { return cKeyEventParserRuleCall_1; }

		//ElementEvent
		public RuleCall getElementEventParserRuleCall_2() { return cElementEventParserRuleCall_2; }

		//MenuEvent
		public RuleCall getMenuEventParserRuleCall_3() { return cMenuEventParserRuleCall_3; }
	}

	public class MouseEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MouseEvent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cMouseDownAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cMouseDownMouseKeyword_0_0_0 = (Keyword)cMouseDownAssignment_0_0.eContents().get(0);
		private final Keyword cDownKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cMouseEnterAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cMouseEnterMouseKeyword_1_0_0 = (Keyword)cMouseEnterAssignment_1_0.eContents().get(0);
		private final Keyword cEnterKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cMouseHorizontalWheelAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cMouseHorizontalWheelMouseKeyword_2_0_0 = (Keyword)cMouseHorizontalWheelAssignment_2_0.eContents().get(0);
		private final Keyword cHorizontalKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cWheelKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cMouseUpAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cMouseUpMouseKeyword_3_0_0 = (Keyword)cMouseUpAssignment_3_0.eContents().get(0);
		private final Keyword cUpKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cMouseWheelAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cMouseWheelMouseKeyword_4_0_0 = (Keyword)cMouseWheelAssignment_4_0.eContents().get(0);
		private final Keyword cWheelKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cMouseVerticalWheelAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cMouseVerticalWheelMouseKeyword_5_0_0 = (Keyword)cMouseVerticalWheelAssignment_5_0.eContents().get(0);
		private final Keyword cVerticalKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cWheelKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cMouseHoverAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cMouseHoverMouseKeyword_6_0_0 = (Keyword)cMouseHoverAssignment_6_0.eContents().get(0);
		private final Keyword cHoverKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cMouseExitAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cMouseExitMouseKeyword_7_0_0 = (Keyword)cMouseExitAssignment_7_0.eContents().get(0);
		private final Keyword cExitKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cMouseDoubleClickAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cMouseDoubleClickMouseKeyword_8_0_0 = (Keyword)cMouseDoubleClickAssignment_8_0.eContents().get(0);
		private final Keyword cDoubleKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cClickKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		
		//MouseEvent:
		//	mouseDown="mouse" "down" | mouseEnter="mouse" "enter" | mouseHorizontalWheel="mouse" "horizontal" "wheel" |
		//	mouseUp="mouse" "up" | mouseWheel="mouse" "wheel" | mouseVerticalWheel="mouse" "vertical" "wheel" | mouseHover="mouse"
		//	"hover" | mouseExit="mouse" "exit" | mouseDoubleClick="mouse" "double" "click";
		public ParserRule getRule() { return rule; }

		//mouseDown="mouse" "down" | mouseEnter="mouse" "enter" | mouseHorizontalWheel="mouse" "horizontal" "wheel" |
		//mouseUp="mouse" "up" | mouseWheel="mouse" "wheel" | mouseVerticalWheel="mouse" "vertical" "wheel" | mouseHover="mouse"
		//"hover" | mouseExit="mouse" "exit" | mouseDoubleClick="mouse" "double" "click"
		public Alternatives getAlternatives() { return cAlternatives; }

		//mouseDown="mouse" "down"
		public Group getGroup_0() { return cGroup_0; }

		//mouseDown="mouse"
		public Assignment getMouseDownAssignment_0_0() { return cMouseDownAssignment_0_0; }

		//"mouse"
		public Keyword getMouseDownMouseKeyword_0_0_0() { return cMouseDownMouseKeyword_0_0_0; }

		//"down"
		public Keyword getDownKeyword_0_1() { return cDownKeyword_0_1; }

		//mouseEnter="mouse" "enter"
		public Group getGroup_1() { return cGroup_1; }

		//mouseEnter="mouse"
		public Assignment getMouseEnterAssignment_1_0() { return cMouseEnterAssignment_1_0; }

		//"mouse"
		public Keyword getMouseEnterMouseKeyword_1_0_0() { return cMouseEnterMouseKeyword_1_0_0; }

		//"enter"
		public Keyword getEnterKeyword_1_1() { return cEnterKeyword_1_1; }

		//mouseHorizontalWheel="mouse" "horizontal" "wheel"
		public Group getGroup_2() { return cGroup_2; }

		//mouseHorizontalWheel="mouse"
		public Assignment getMouseHorizontalWheelAssignment_2_0() { return cMouseHorizontalWheelAssignment_2_0; }

		//"mouse"
		public Keyword getMouseHorizontalWheelMouseKeyword_2_0_0() { return cMouseHorizontalWheelMouseKeyword_2_0_0; }

		//"horizontal"
		public Keyword getHorizontalKeyword_2_1() { return cHorizontalKeyword_2_1; }

		//"wheel"
		public Keyword getWheelKeyword_2_2() { return cWheelKeyword_2_2; }

		//mouseUp="mouse" "up"
		public Group getGroup_3() { return cGroup_3; }

		//mouseUp="mouse"
		public Assignment getMouseUpAssignment_3_0() { return cMouseUpAssignment_3_0; }

		//"mouse"
		public Keyword getMouseUpMouseKeyword_3_0_0() { return cMouseUpMouseKeyword_3_0_0; }

		//"up"
		public Keyword getUpKeyword_3_1() { return cUpKeyword_3_1; }

		//mouseWheel="mouse" "wheel"
		public Group getGroup_4() { return cGroup_4; }

		//mouseWheel="mouse"
		public Assignment getMouseWheelAssignment_4_0() { return cMouseWheelAssignment_4_0; }

		//"mouse"
		public Keyword getMouseWheelMouseKeyword_4_0_0() { return cMouseWheelMouseKeyword_4_0_0; }

		//"wheel"
		public Keyword getWheelKeyword_4_1() { return cWheelKeyword_4_1; }

		//mouseVerticalWheel="mouse" "vertical" "wheel"
		public Group getGroup_5() { return cGroup_5; }

		//mouseVerticalWheel="mouse"
		public Assignment getMouseVerticalWheelAssignment_5_0() { return cMouseVerticalWheelAssignment_5_0; }

		//"mouse"
		public Keyword getMouseVerticalWheelMouseKeyword_5_0_0() { return cMouseVerticalWheelMouseKeyword_5_0_0; }

		//"vertical"
		public Keyword getVerticalKeyword_5_1() { return cVerticalKeyword_5_1; }

		//"wheel"
		public Keyword getWheelKeyword_5_2() { return cWheelKeyword_5_2; }

		//mouseHover="mouse" "hover"
		public Group getGroup_6() { return cGroup_6; }

		//mouseHover="mouse"
		public Assignment getMouseHoverAssignment_6_0() { return cMouseHoverAssignment_6_0; }

		//"mouse"
		public Keyword getMouseHoverMouseKeyword_6_0_0() { return cMouseHoverMouseKeyword_6_0_0; }

		//"hover"
		public Keyword getHoverKeyword_6_1() { return cHoverKeyword_6_1; }

		//mouseExit="mouse" "exit"
		public Group getGroup_7() { return cGroup_7; }

		//mouseExit="mouse"
		public Assignment getMouseExitAssignment_7_0() { return cMouseExitAssignment_7_0; }

		//"mouse"
		public Keyword getMouseExitMouseKeyword_7_0_0() { return cMouseExitMouseKeyword_7_0_0; }

		//"exit"
		public Keyword getExitKeyword_7_1() { return cExitKeyword_7_1; }

		//mouseDoubleClick="mouse" "double" "click"
		public Group getGroup_8() { return cGroup_8; }

		//mouseDoubleClick="mouse"
		public Assignment getMouseDoubleClickAssignment_8_0() { return cMouseDoubleClickAssignment_8_0; }

		//"mouse"
		public Keyword getMouseDoubleClickMouseKeyword_8_0_0() { return cMouseDoubleClickMouseKeyword_8_0_0; }

		//"double"
		public Keyword getDoubleKeyword_8_1() { return cDoubleKeyword_8_1; }

		//"click"
		public Keyword getClickKeyword_8_2() { return cClickKeyword_8_2; }
	}

	public class KeyEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KeyEvent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cKeyPressAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cKeyPressKeyKeyword_0_0_0 = (Keyword)cKeyPressAssignment_0_0.eContents().get(0);
		private final Keyword cPressKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cKeyUpAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cKeyUpKeyKeyword_1_0_0 = (Keyword)cKeyUpAssignment_1_0.eContents().get(0);
		private final Keyword cUpKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cKeyDownAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cKeyDownKeyKeyword_2_0_0 = (Keyword)cKeyDownAssignment_2_0.eContents().get(0);
		private final Keyword cDownKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		
		//KeyEvent:
		//	keyPress="key" "press" | keyUp="key" "up" | keyDown="key" "down";
		public ParserRule getRule() { return rule; }

		//keyPress="key" "press" | keyUp="key" "up" | keyDown="key" "down"
		public Alternatives getAlternatives() { return cAlternatives; }

		//keyPress="key" "press"
		public Group getGroup_0() { return cGroup_0; }

		//keyPress="key"
		public Assignment getKeyPressAssignment_0_0() { return cKeyPressAssignment_0_0; }

		//"key"
		public Keyword getKeyPressKeyKeyword_0_0_0() { return cKeyPressKeyKeyword_0_0_0; }

		//"press"
		public Keyword getPressKeyword_0_1() { return cPressKeyword_0_1; }

		//keyUp="key" "up"
		public Group getGroup_1() { return cGroup_1; }

		//keyUp="key"
		public Assignment getKeyUpAssignment_1_0() { return cKeyUpAssignment_1_0; }

		//"key"
		public Keyword getKeyUpKeyKeyword_1_0_0() { return cKeyUpKeyKeyword_1_0_0; }

		//"up"
		public Keyword getUpKeyword_1_1() { return cUpKeyword_1_1; }

		//keyDown="key" "down"
		public Group getGroup_2() { return cGroup_2; }

		//keyDown="key"
		public Assignment getKeyDownAssignment_2_0() { return cKeyDownAssignment_2_0; }

		//"key"
		public Keyword getKeyDownKeyKeyword_2_0_0() { return cKeyDownKeyKeyword_2_0_0; }

		//"down"
		public Keyword getDownKeyword_2_1() { return cDownKeyword_2_1; }
	}

	public class ElementEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementEvent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cCreateAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cCreateCreateKeyword_0_0 = (Keyword)cCreateAssignment_0.eContents().get(0);
		private final Assignment cDeleteAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cDeleteDeleteKeyword_1_0 = (Keyword)cDeleteAssignment_1.eContents().get(0);
		
		//ElementEvent:
		//	create="create" | delete="delete";
		public ParserRule getRule() { return rule; }

		//create="create" | delete="delete"
		public Alternatives getAlternatives() { return cAlternatives; }

		//create="create"
		public Assignment getCreateAssignment_0() { return cCreateAssignment_0; }

		//"create"
		public Keyword getCreateCreateKeyword_0_0() { return cCreateCreateKeyword_0_0; }

		//delete="delete"
		public Assignment getDeleteAssignment_1() { return cDeleteAssignment_1; }

		//"delete"
		public Keyword getDeleteDeleteKeyword_1_0() { return cDeleteDeleteKeyword_1_0; }
	}

	public class MenuEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MenuEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMenuEventAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMenuEventKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MenuEvent:
		//	{MenuEvent} "Menu event" "(" name=STRING ")";
		public ParserRule getRule() { return rule; }

		//{MenuEvent} "Menu event" "(" name=STRING ")"
		public Group getGroup() { return cGroup; }

		//{MenuEvent}
		public Action getMenuEventAction_0() { return cMenuEventAction_0; }

		//"Menu event"
		public Keyword getMenuEventKeyword_1() { return cMenuEventKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class InstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Instruction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cWizardStartParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cViewDeployParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cClassExecutionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Instruction:
		//	WizardStart | ViewDeploy | ClassExecution;
		public ParserRule getRule() { return rule; }

		//WizardStart | ViewDeploy | ClassExecution
		public Alternatives getAlternatives() { return cAlternatives; }

		//WizardStart
		public RuleCall getWizardStartParserRuleCall_0() { return cWizardStartParserRuleCall_0; }

		//ViewDeploy
		public RuleCall getViewDeployParserRuleCall_1() { return cViewDeployParserRuleCall_1; }

		//ClassExecution
		public RuleCall getClassExecutionParserRuleCall_2() { return cClassExecutionParserRuleCall_2; }
	}

	public class WizardStartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WizardStart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cShowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cWizardKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cWizardAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cWizardWizardCrossReference_2_0 = (CrossReference)cWizardAssignment_2.eContents().get(0);
		private final RuleCall cWizardWizardIDTerminalRuleCall_2_0_1 = (RuleCall)cWizardWizardCrossReference_2_0.eContents().get(1);
		
		//WizardStart:
		//	"show" "wizard" wizard=[Wizard];
		public ParserRule getRule() { return rule; }

		//"show" "wizard" wizard=[Wizard]
		public Group getGroup() { return cGroup; }

		//"show"
		public Keyword getShowKeyword_0() { return cShowKeyword_0; }

		//"wizard"
		public Keyword getWizardKeyword_1() { return cWizardKeyword_1; }

		//wizard=[Wizard]
		public Assignment getWizardAssignment_2() { return cWizardAssignment_2; }

		//[Wizard]
		public CrossReference getWizardWizardCrossReference_2_0() { return cWizardWizardCrossReference_2_0; }

		//ID
		public RuleCall getWizardWizardIDTerminalRuleCall_2_0_1() { return cWizardWizardIDTerminalRuleCall_2_0_1; }
	}

	public class ViewDeployElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ViewDeploy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cShowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cViewKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cViewAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cViewViewCrossReference_2_0 = (CrossReference)cViewAssignment_2.eContents().get(0);
		private final RuleCall cViewViewIDTerminalRuleCall_2_0_1 = (RuleCall)cViewViewCrossReference_2_0.eContents().get(1);
		
		//ViewDeploy:
		//	"show" "view" view=[View];
		public ParserRule getRule() { return rule; }

		//"show" "view" view=[View]
		public Group getGroup() { return cGroup; }

		//"show"
		public Keyword getShowKeyword_0() { return cShowKeyword_0; }

		//"view"
		public Keyword getViewKeyword_1() { return cViewKeyword_1; }

		//view=[View]
		public Assignment getViewAssignment_2() { return cViewAssignment_2; }

		//[View]
		public CrossReference getViewViewCrossReference_2_0() { return cViewViewCrossReference_2_0; }

		//ID
		public RuleCall getViewViewIDTerminalRuleCall_2_0_1() { return cViewViewIDTerminalRuleCall_2_0_1; }
	}

	public class ClassExecutionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassExecution");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExecuteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInplementationReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInplementationReferenceSTRINGTerminalRuleCall_1_0 = (RuleCall)cInplementationReferenceAssignment_1.eContents().get(0);
		
		//ClassExecution:
		//	"execute" inplementationReference=STRING;
		public ParserRule getRule() { return rule; }

		//"execute" inplementationReference=STRING
		public Group getGroup() { return cGroup; }

		//"execute"
		public Keyword getExecuteKeyword_0() { return cExecuteKeyword_0; }

		//inplementationReference=STRING
		public Assignment getInplementationReferenceAssignment_1() { return cInplementationReferenceAssignment_1; }

		//STRING
		public RuleCall getInplementationReferenceSTRINGTerminalRuleCall_1_0() { return cInplementationReferenceSTRINGTerminalRuleCall_1_0; }
	}
	
	
	public class LineTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "LineType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSolidEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSolidSolidKeyword_0_0 = (Keyword)cSolidEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDashEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDashDashKeyword_1_0 = (Keyword)cDashEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDotEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDotDotKeyword_2_0 = (Keyword)cDotEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDashdotEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDashdotDashdotKeyword_3_0 = (Keyword)cDashdotEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDashdotdotEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDashdotdotDashdotdotKeyword_4_0 = (Keyword)cDashdotdotEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum LineType:
		//	solid | dash | dot | dashdot | dashdotdot;
		public EnumRule getRule() { return rule; }

		//solid | dash | dot | dashdot | dashdotdot
		public Alternatives getAlternatives() { return cAlternatives; }

		//solid
		public EnumLiteralDeclaration getSolidEnumLiteralDeclaration_0() { return cSolidEnumLiteralDeclaration_0; }

		//"solid"
		public Keyword getSolidSolidKeyword_0_0() { return cSolidSolidKeyword_0_0; }

		//dash
		public EnumLiteralDeclaration getDashEnumLiteralDeclaration_1() { return cDashEnumLiteralDeclaration_1; }

		//"dash"
		public Keyword getDashDashKeyword_1_0() { return cDashDashKeyword_1_0; }

		//dot
		public EnumLiteralDeclaration getDotEnumLiteralDeclaration_2() { return cDotEnumLiteralDeclaration_2; }

		//"dot"
		public Keyword getDotDotKeyword_2_0() { return cDotDotKeyword_2_0; }

		//dashdot
		public EnumLiteralDeclaration getDashdotEnumLiteralDeclaration_3() { return cDashdotEnumLiteralDeclaration_3; }

		//"dashdot"
		public Keyword getDashdotDashdotKeyword_3_0() { return cDashdotDashdotKeyword_3_0; }

		//dashdotdot
		public EnumLiteralDeclaration getDashdotdotEnumLiteralDeclaration_4() { return cDashdotdotEnumLiteralDeclaration_4; }

		//"dashdotdot"
		public Keyword getDashdotdotDashdotdotKeyword_4_0() { return cDashdotdotDashdotdotKeyword_4_0; }
	}

	public class WizardTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "WizardType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCreateEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCreateCreateKeyword_0_0 = (Keyword)cCreateEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEditEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEditEditKeyword_1_0 = (Keyword)cEditEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInfoEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInfoInfoKeyword_2_0 = (Keyword)cInfoEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum WizardType:
		//	create | edit | info;
		public EnumRule getRule() { return rule; }

		//create | edit | info
		public Alternatives getAlternatives() { return cAlternatives; }

		//create
		public EnumLiteralDeclaration getCreateEnumLiteralDeclaration_0() { return cCreateEnumLiteralDeclaration_0; }

		//"create"
		public Keyword getCreateCreateKeyword_0_0() { return cCreateCreateKeyword_0_0; }

		//edit
		public EnumLiteralDeclaration getEditEnumLiteralDeclaration_1() { return cEditEnumLiteralDeclaration_1; }

		//"edit"
		public Keyword getEditEditKeyword_1_0() { return cEditEditKeyword_1_0; }

		//info
		public EnumLiteralDeclaration getInfoEnumLiteralDeclaration_2() { return cInfoEnumLiteralDeclaration_2; }

		//"info"
		public Keyword getInfoInfoKeyword_2_0() { return cInfoInfoKeyword_2_0; }
	}

	public class ComponentTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ComponentType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTextFieldEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTextFieldTextFieldKeyword_0_0 = (Keyword)cTextFieldEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTextAreaEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTextAreaTextAreaKeyword_1_0 = (Keyword)cTextAreaEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCheckBoxEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCheckBoxCheckBoxKeyword_2_0 = (Keyword)cCheckBoxEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cComboBoxEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cComboBoxComboBoxKeyword_3_0 = (Keyword)cComboBoxEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSliderEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSliderSliderKeyword_4_0 = (Keyword)cSliderEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cFileReferenceEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cFileReferenceFileKeyword_5_0 = (Keyword)cFileReferenceEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cImageReferenceEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cImageReferenceImageKeyword_6_0 = (Keyword)cImageReferenceEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum ComponentType:
		//	textField | textArea | checkBox | comboBox | slider="Slider" | fileReference="File" | imageReference="Image";
		public EnumRule getRule() { return rule; }

		//textField | textArea | checkBox | comboBox | slider="Slider" | fileReference="File" | imageReference="Image"
		public Alternatives getAlternatives() { return cAlternatives; }

		//textField
		public EnumLiteralDeclaration getTextFieldEnumLiteralDeclaration_0() { return cTextFieldEnumLiteralDeclaration_0; }

		//"textField"
		public Keyword getTextFieldTextFieldKeyword_0_0() { return cTextFieldTextFieldKeyword_0_0; }

		//textArea
		public EnumLiteralDeclaration getTextAreaEnumLiteralDeclaration_1() { return cTextAreaEnumLiteralDeclaration_1; }

		//"textArea"
		public Keyword getTextAreaTextAreaKeyword_1_0() { return cTextAreaTextAreaKeyword_1_0; }

		//checkBox
		public EnumLiteralDeclaration getCheckBoxEnumLiteralDeclaration_2() { return cCheckBoxEnumLiteralDeclaration_2; }

		//"checkBox"
		public Keyword getCheckBoxCheckBoxKeyword_2_0() { return cCheckBoxCheckBoxKeyword_2_0; }

		//comboBox
		public EnumLiteralDeclaration getComboBoxEnumLiteralDeclaration_3() { return cComboBoxEnumLiteralDeclaration_3; }

		//"comboBox"
		public Keyword getComboBoxComboBoxKeyword_3_0() { return cComboBoxComboBoxKeyword_3_0; }

		//slider="Slider"
		public EnumLiteralDeclaration getSliderEnumLiteralDeclaration_4() { return cSliderEnumLiteralDeclaration_4; }

		//"Slider"
		public Keyword getSliderSliderKeyword_4_0() { return cSliderSliderKeyword_4_0; }

		//fileReference="File"
		public EnumLiteralDeclaration getFileReferenceEnumLiteralDeclaration_5() { return cFileReferenceEnumLiteralDeclaration_5; }

		//"File"
		public Keyword getFileReferenceFileKeyword_5_0() { return cFileReferenceFileKeyword_5_0; }

		//imageReference="Image"
		public EnumLiteralDeclaration getImageReferenceEnumLiteralDeclaration_6() { return cImageReferenceEnumLiteralDeclaration_6; }

		//"Image"
		public Keyword getImageReferenceImageKeyword_6_0() { return cImageReferenceImageKeyword_6_0; }
	}
	
	private final ModelElements pModel;
	private final ImportElements pImport;
	private final GraphicalRepresentationElements pGraphicalRepresentation;
	private final QualifiedNameElements pQualifiedName;
	private final MetaConceptReferenceElements pMetaConceptReference;
	private final ClassReferenceElements pClassReference;
	private final AttReferenceElements pAttReference;
	private final ROOTElements pROOT;
	private final ToolDefinitionElements pToolDefinition;
	private final ToolGroupElements pToolGroup;
	private final CreationButtonElements pCreationButton;
	private final StyleDefinitionElements pStyleDefinition;
	private final StyleElementElements pStyleElement;
	private final LineStyleElements pLineStyle;
	private final LineDecorationElements pLineDecoration;
	private final DefaultLineDecorationElements pDefaultLineDecoration;
	private final CustomLineDecorationElements pCustomLineDecoration;
	private final LineTypeElements unknownRuleLineType;
	private final ColorElements pColor;
	private final LayoutElements pLayout;
	private final DefaultLayoutElements pDefaultLayout;
	private final CustomLayoutElements pCustomLayout;
	private final FigureStyleElements pFigureStyle;
	private final RoundedElements pRounded;
	private final RegularPolygonElements pRegularPolygon;
	private final EllipseElements pEllipse;
	private final CustomFigureElements pCustomFigure;
	private final PointElements pPoint;
	private final LabelPositionElements pLabelPosition;
	private final SizeElements pSize;
	private final EBooleanElements pEBoolean;
	private final GraphicalDefinitionElements pGraphicalDefinition;
	private final GraphicalElementElements pGraphicalElement;
	private final ElementDefElements pElementDef;
	private final NodeDefElements pNodeDef;
	private final AttLinkDefElements pAttLinkDef;
	private final ElementAltElements pElementAlt;
	private final NodeAltElements pNodeAlt;
	private final AttLinkAltElements pAttLinkAlt;
	private final NodeElementDefElements pNodeElementDef;
	private final NodeElementAltElements pNodeElementAlt;
	private final FigureElements pFigure;
	private final RegularFigureElements pRegularFigure;
	private final ImageFigureElements pImageFigure;
	private final ComplexFigureElements pComplexFigure;
	private final NodeLinkDefElements pNodeLinkDef;
	private final NodeLinkAltElements pNodeLinkAlt;
	private final NodeLineDefElements pNodeLineDef;
	private final NodeLineAltElements pNodeLineAlt;
	private final InterNodeDefElements pInterNodeDef;
	private final InterNodeAltElements pInterNodeAlt;
	private final ExternalNodeDefElements pExternalNodeDef;
	private final ExternalNodeAltElements pExternalNodeAlt;
	private final RulesDefinitionElements pRulesDefinition;
	private final RuleElements pRule;
	private final RuleForTypeElements pRuleForType;
	private final RuleForReferenceElements pRuleForReference;
	private final CaseTypeElements pCaseType;
	private final CaseReferenceElements pCaseReference;
	private final InteractionDefinitionElements pInteractionDefinition;
	private final InteractionElementElements pInteractionElement;
	private final WizardElements pWizard;
	private final ElementWizardElements pElementWizard;
	private final WizardTypeElements unknownRuleWizardType;
	private final PageElements pPage;
	private final AttMapElements pAttMap;
	private final ComponentTypeElements unknownRuleComponentType;
	private final ButtonElements pButton;
	private final PersonalWizardElements pPersonalWizard;
	private final ViewElements pView;
	private final PredefinedViewElements pPredefinedView;
	private final ViewTypeElements pViewType;
	private final ShowChildsElements pShowChilds;
	private final ShowSelectionElements pShowSelection;
	private final CountTypesElements pCountTypes;
	private final ViewStyleElements pViewStyle;
	private final PersonalViewElements pPersonalView;
	private final StatementElements pStatement;
	private final EventElements pEvent;
	private final EventTypeElements pEventType;
	private final MouseEventElements pMouseEvent;
	private final KeyEventElements pKeyEvent;
	private final ElementEventElements pElementEvent;
	private final MenuEventElements pMenuEvent;
	private final InstructionElements pInstruction;
	private final WizardStartElements pWizardStart;
	private final ViewDeployElements pViewDeploy;
	private final ClassExecutionElements pClassExecution;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PictureGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pImport = new ImportElements();
		this.pGraphicalRepresentation = new GraphicalRepresentationElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pMetaConceptReference = new MetaConceptReferenceElements();
		this.pClassReference = new ClassReferenceElements();
		this.pAttReference = new AttReferenceElements();
		this.pROOT = new ROOTElements();
		this.pToolDefinition = new ToolDefinitionElements();
		this.pToolGroup = new ToolGroupElements();
		this.pCreationButton = new CreationButtonElements();
		this.pStyleDefinition = new StyleDefinitionElements();
		this.pStyleElement = new StyleElementElements();
		this.pLineStyle = new LineStyleElements();
		this.pLineDecoration = new LineDecorationElements();
		this.pDefaultLineDecoration = new DefaultLineDecorationElements();
		this.pCustomLineDecoration = new CustomLineDecorationElements();
		this.unknownRuleLineType = new LineTypeElements();
		this.pColor = new ColorElements();
		this.pLayout = new LayoutElements();
		this.pDefaultLayout = new DefaultLayoutElements();
		this.pCustomLayout = new CustomLayoutElements();
		this.pFigureStyle = new FigureStyleElements();
		this.pRounded = new RoundedElements();
		this.pRegularPolygon = new RegularPolygonElements();
		this.pEllipse = new EllipseElements();
		this.pCustomFigure = new CustomFigureElements();
		this.pPoint = new PointElements();
		this.pLabelPosition = new LabelPositionElements();
		this.pSize = new SizeElements();
		this.pEBoolean = new EBooleanElements();
		this.pGraphicalDefinition = new GraphicalDefinitionElements();
		this.pGraphicalElement = new GraphicalElementElements();
		this.pElementDef = new ElementDefElements();
		this.pNodeDef = new NodeDefElements();
		this.pAttLinkDef = new AttLinkDefElements();
		this.pElementAlt = new ElementAltElements();
		this.pNodeAlt = new NodeAltElements();
		this.pAttLinkAlt = new AttLinkAltElements();
		this.pNodeElementDef = new NodeElementDefElements();
		this.pNodeElementAlt = new NodeElementAltElements();
		this.pFigure = new FigureElements();
		this.pRegularFigure = new RegularFigureElements();
		this.pImageFigure = new ImageFigureElements();
		this.pComplexFigure = new ComplexFigureElements();
		this.pNodeLinkDef = new NodeLinkDefElements();
		this.pNodeLinkAlt = new NodeLinkAltElements();
		this.pNodeLineDef = new NodeLineDefElements();
		this.pNodeLineAlt = new NodeLineAltElements();
		this.pInterNodeDef = new InterNodeDefElements();
		this.pInterNodeAlt = new InterNodeAltElements();
		this.pExternalNodeDef = new ExternalNodeDefElements();
		this.pExternalNodeAlt = new ExternalNodeAltElements();
		this.pRulesDefinition = new RulesDefinitionElements();
		this.pRule = new RuleElements();
		this.pRuleForType = new RuleForTypeElements();
		this.pRuleForReference = new RuleForReferenceElements();
		this.pCaseType = new CaseTypeElements();
		this.pCaseReference = new CaseReferenceElements();
		this.pInteractionDefinition = new InteractionDefinitionElements();
		this.pInteractionElement = new InteractionElementElements();
		this.pWizard = new WizardElements();
		this.pElementWizard = new ElementWizardElements();
		this.unknownRuleWizardType = new WizardTypeElements();
		this.pPage = new PageElements();
		this.pAttMap = new AttMapElements();
		this.unknownRuleComponentType = new ComponentTypeElements();
		this.pButton = new ButtonElements();
		this.pPersonalWizard = new PersonalWizardElements();
		this.pView = new ViewElements();
		this.pPredefinedView = new PredefinedViewElements();
		this.pViewType = new ViewTypeElements();
		this.pShowChilds = new ShowChildsElements();
		this.pShowSelection = new ShowSelectionElements();
		this.pCountTypes = new CountTypesElements();
		this.pViewStyle = new ViewStyleElements();
		this.pPersonalView = new PersonalViewElements();
		this.pStatement = new StatementElements();
		this.pEvent = new EventElements();
		this.pEventType = new EventTypeElements();
		this.pMouseEvent = new MouseEventElements();
		this.pKeyEvent = new KeyEventElements();
		this.pElementEvent = new ElementEventElements();
		this.pMenuEvent = new MenuEventElements();
		this.pInstruction = new InstructionElements();
		this.pWizardStart = new WizardStartElements();
		this.pViewDeploy = new ViewDeployElements();
		this.pClassExecution = new ClassExecutionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.edu.uniandes.enar.Picture".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	{Model} imports+=Import graphicalREpresentation=GraphicalRepresentation;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Import:
	//	"import" importedNamespace=STRING "as" name=ID;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//GraphicalRepresentation:
	//	"Graphical" "representation" name=ID "{" ("reference" "package" referencePackage=QualifiedName)? root=ROOT
	//	toolsDefinition=ToolDefinition styleDefinition=StyleDefinition graphicalDefinition=GraphicalDefinition
	//	rulesDefinition=RulesDefinition interactionDefinition=InteractionDefinition "}";
	public GraphicalRepresentationElements getGraphicalRepresentationAccess() {
		return pGraphicalRepresentation;
	}
	
	public ParserRule getGraphicalRepresentationRule() {
		return getGraphicalRepresentationAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//MetaConceptReference:
	//	ClassReference | AttReference;
	public MetaConceptReferenceElements getMetaConceptReferenceAccess() {
		return pMetaConceptReference;
	}
	
	public ParserRule getMetaConceptReferenceRule() {
		return getMetaConceptReferenceAccess().getRule();
	}

	//ClassReference:
	//	"class" class=QualifiedName;
	public ClassReferenceElements getClassReferenceAccess() {
		return pClassReference;
	}
	
	public ParserRule getClassReferenceRule() {
		return getClassReferenceAccess().getRule();
	}

	//AttReference:
	//	"reference" class=QualifiedName;
	public AttReferenceElements getAttReferenceAccess() {
		return pAttReference;
	}
	
	public ParserRule getAttReferenceRule() {
		return getAttReferenceAccess().getRule();
	}

	//ROOT:
	//	"root" name=ID;
	public ROOTElements getROOTAccess() {
		return pROOT;
	}
	
	public ParserRule getROOTRule() {
		return getROOTAccess().getRule();
	}

	///////////ToolDefinition/////////
	//ToolDefinition:
	//	{ToolDefinition} "Palette for" name=[ROOT] "{" toolGroups+=ToolGroup+ "}";
	public ToolDefinitionElements getToolDefinitionAccess() {
		return pToolDefinition;
	}
	
	public ParserRule getToolDefinitionRule() {
		return getToolDefinitionAccess().getRule();
	}

	//ToolGroup:
	//	"Tool group" name=ID "{" "description" description=STRING toolGroups+=ToolGroup* buttons+=CreationButton* "}";
	public ToolGroupElements getToolGroupAccess() {
		return pToolGroup;
	}
	
	public ParserRule getToolGroupRule() {
		return getToolGroupAccess().getRule();
	}

	//CreationButton:
	//	{CreationButton} "Creation button for" metaConceptReference=ClassReference "{" "name" name=STRING "description"
	//	description=STRING "icon" icon=STRING "}";
	public CreationButtonElements getCreationButtonAccess() {
		return pCreationButton;
	}
	
	public ParserRule getCreationButtonRule() {
		return getCreationButtonAccess().getRule();
	}

	///////////StyleDefinition/////////
	//StyleDefinition:
	//	{StyleDefinition} "Style definition" "{" styleElements+=StyleElement* "}";
	public StyleDefinitionElements getStyleDefinitionAccess() {
		return pStyleDefinition;
	}
	
	public ParserRule getStyleDefinitionRule() {
		return getStyleDefinitionAccess().getRule();
	}

	//StyleElement:
	//	LineStyle | Color | LineDecoration | FigureStyle;
	public StyleElementElements getStyleElementAccess() {
		return pStyleElement;
	}
	
	public ParserRule getStyleElementRule() {
		return getStyleElementAccess().getRule();
	}

	//LineStyle:
	//	"Line style" name=ID "{" "width" width=INT "type" lineType=LineType "color" color=[Color] "}";
	public LineStyleElements getLineStyleAccess() {
		return pLineStyle;
	}
	
	public ParserRule getLineStyleRule() {
		return getLineStyleAccess().getRule();
	}

	//LineDecoration:
	//	DefaultLineDecoration | CustomLineDecoration;
	public LineDecorationElements getLineDecorationAccess() {
		return pLineDecoration;
	}
	
	public ParserRule getLineDecorationRule() {
		return getLineDecorationAccess().getRule();
	}

	//DefaultLineDecoration:
	//	none="none" | arrow="arrow" | rhomb="rhomb" | filledrhomb="filled" "rhomb" | square="square" | filledsquare="filled"
	//	"square" | closedarrow="closed" "arrow" | filledclosedarrow="filled" "closed" "arrow";
	public DefaultLineDecorationElements getDefaultLineDecorationAccess() {
		return pDefaultLineDecoration;
	}
	
	public ParserRule getDefaultLineDecorationRule() {
		return getDefaultLineDecorationAccess().getRule();
	}

	//CustomLineDecoration:
	//	"Custom line decoration" name=ID "{" "class" referenceImplementation=STRING "}";
	public CustomLineDecorationElements getCustomLineDecorationAccess() {
		return pCustomLineDecoration;
	}
	
	public ParserRule getCustomLineDecorationRule() {
		return getCustomLineDecorationAccess().getRule();
	}

	//enum LineType:
	//	solid | dash | dot | dashdot | dashdotdot;
	public LineTypeElements getLineTypeAccess() {
		return unknownRuleLineType;
	}
	
	public EnumRule getLineTypeRule() {
		return getLineTypeAccess().getRule();
	}

	//Color:
	//	"Color" name=ID "(" red=INT ", " green=INT ", " blue=INT ")";
	public ColorElements getColorAccess() {
		return pColor;
	}
	
	public ParserRule getColorRule() {
		return getColorAccess().getRule();
	}

	//Layout:
	//	DefaultLayout | CustomLayout;
	public LayoutElements getLayoutAccess() {
		return pLayout;
	}
	
	public ParserRule getLayoutRule() {
		return getLayoutAccess().getRule();
	}

	//DefaultLayout:
	//	list="list" "layout" | default="default" "layout";
	public DefaultLayoutElements getDefaultLayoutAccess() {
		return pDefaultLayout;
	}
	
	public ParserRule getDefaultLayoutRule() {
		return getDefaultLayoutAccess().getRule();
	}

	//CustomLayout:
	//	"custom" "layout" "{" "implementation reference" referenceImplementation=STRING "}";
	public CustomLayoutElements getCustomLayoutAccess() {
		return pCustomLayout;
	}
	
	public ParserRule getCustomLayoutRule() {
		return getCustomLayoutAccess().getRule();
	}

	//FigureStyle:
	//	Rounded | RegularPolygon | Ellipse | CustomFigure;
	public FigureStyleElements getFigureStyleAccess() {
		return pFigureStyle;
	}
	
	public ParserRule getFigureStyleRule() {
		return getFigureStyleAccess().getRule();
	}

	//Rounded:
	//	"Rounded" name=ID "{" "radiox" rx=INT "radioy" ry=INT "}";
	public RoundedElements getRoundedAccess() {
		return pRounded;
	}
	
	public ParserRule getRoundedRule() {
		return getRoundedAccess().getRule();
	}

	//RegularPolygon:
	//	"Regular polygon" name=ID "{" "vertex quantity" vertexCant=INT "start angle" startAngle=INT "}";
	public RegularPolygonElements getRegularPolygonAccess() {
		return pRegularPolygon;
	}
	
	public ParserRule getRegularPolygonRule() {
		return getRegularPolygonAccess().getRule();
	}

	//Ellipse:
	//	"Ellipse" name=ID "{" "proportion" "(" radiox=INT ", " radioy=INT ")" "}";
	public EllipseElements getEllipseAccess() {
		return pEllipse;
	}
	
	public ParserRule getEllipseRule() {
		return getEllipseAccess().getRule();
	}

	//CustomFigure:
	//	"Custom figure" name=ID "{" points+=Point "}";
	public CustomFigureElements getCustomFigureAccess() {
		return pCustomFigure;
	}
	
	public ParserRule getCustomFigureRule() {
		return getCustomFigureAccess().getRule();
	}

	//Point:
	//	{Point} "Point" "(" x=INT ", " y=INT ")";
	public PointElements getPointAccess() {
		return pPoint;
	}
	
	public ParserRule getPointRule() {
		return getPointAccess().getRule();
	}

	//LabelPosition:
	//	internal="internal" | external="external";
	public LabelPositionElements getLabelPositionAccess() {
		return pLabelPosition;
	}
	
	public ParserRule getLabelPositionRule() {
		return getLabelPositionAccess().getRule();
	}

	//Size:
	//	{Size} "(" width=INT ", " height=INT ")";
	public SizeElements getSizeAccess() {
		return pSize;
	}
	
	public ParserRule getSizeRule() {
		return getSizeAccess().getRule();
	}

	//EBoolean returns ecore::EBoolean:
	//	"true" | "false";
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}

	///////////GraphicalDefinition/////////
	//GraphicalDefinition:
	//	{GraphicalDefinition} "Graphical" "definition" "{" elements+=GraphicalElement+ "}";
	public GraphicalDefinitionElements getGraphicalDefinitionAccess() {
		return pGraphicalDefinition;
	}
	
	public ParserRule getGraphicalDefinitionRule() {
		return getGraphicalDefinitionAccess().getRule();
	}

	//GraphicalElement:
	//	ElementDef | ElementAlt;
	public GraphicalElementElements getGraphicalElementAccess() {
		return pGraphicalElement;
	}
	
	public ParserRule getGraphicalElementRule() {
		return getGraphicalElementAccess().getRule();
	}

	//ElementDef:
	//	NodeDef | AttLinkDef;
	public ElementDefElements getElementDefAccess() {
		return pElementDef;
	}
	
	public ParserRule getElementDefRule() {
		return getElementDefAccess().getRule();
	}

	//NodeDef:
	//	NodeElementDef | NodeLinkDef;
	public NodeDefElements getNodeDefAccess() {
		return pNodeDef;
	}
	
	public ParserRule getNodeDefRule() {
		return getNodeDefAccess().getRule();
	}

	//AttLinkDef:
	//	NodeLineDef | InterNodeDef | ExternalNodeDef;
	public AttLinkDefElements getAttLinkDefAccess() {
		return pAttLinkDef;
	}
	
	public ParserRule getAttLinkDefRule() {
		return getAttLinkDefAccess().getRule();
	}

	//ElementAlt:
	//	NodeAlt | AttLinkAlt;
	public ElementAltElements getElementAltAccess() {
		return pElementAlt;
	}
	
	public ParserRule getElementAltRule() {
		return getElementAltAccess().getRule();
	}

	//NodeAlt:
	//	NodeElementAlt | NodeLinkAlt;
	public NodeAltElements getNodeAltAccess() {
		return pNodeAlt;
	}
	
	public ParserRule getNodeAltRule() {
		return getNodeAltAccess().getRule();
	}

	//AttLinkAlt:
	//	NodeLineAlt | InterNodeAlt | ExternalNodeAlt;
	public AttLinkAltElements getAttLinkAltAccess() {
		return pAttLinkAlt;
	}
	
	public ParserRule getAttLinkAltRule() {
		return getAttLinkAltAccess().getRule();
	}

	//NodeElementDef:
	//	"Node_element" name=ID "for" referenceClass=ClassReference "{" "label" label=ID "label" "icon" labelIcon=EBoolean
	//	"label" "placement" labelPlacement=LabelPosition "size" size=Size figure=Figure "phantom" phantomN=EBoolean "}";
	public NodeElementDefElements getNodeElementDefAccess() {
		return pNodeElementDef;
	}
	
	public ParserRule getNodeElementDefRule() {
		return getNodeElementDefAccess().getRule();
	}

	//NodeElementAlt:
	//	"Node_element" name=ID "extends" parent=[NodeElementDef] "{" ("label" "placement" labelPlacement=LabelPosition)?
	//	figure=Figure? ("size" size=Size)? "}";
	public NodeElementAltElements getNodeElementAltAccess() {
		return pNodeElementAlt;
	}
	
	public ParserRule getNodeElementAltRule() {
		return getNodeElementAltAccess().getRule();
	}

	//Figure:
	//	RegularFigure | ImageFigure | ComplexFigure;
	public FigureElements getFigureAccess() {
		return pFigure;
	}
	
	public ParserRule getFigureRule() {
		return getFigureAccess().getRule();
	}

	//RegularFigure:
	//	{RegularFigure} "Regular figure extends" figureStyle=[FigureStyle] "{" "background color" bacgroundColor=[Color]
	//	"border" border=[LineStyle] ("icon" "path" path=STRING "icon" "size" size=Size "icon" "position" position=Point)? "}";
	public RegularFigureElements getRegularFigureAccess() {
		return pRegularFigure;
	}
	
	public ParserRule getRegularFigureRule() {
		return getRegularFigureAccess().getRule();
	}

	//ImageFigure:
	//	{ImageFigure} "Image figure" "{" "image path" path=STRING "}";
	public ImageFigureElements getImageFigureAccess() {
		return pImageFigure;
	}
	
	public ParserRule getImageFigureRule() {
		return getImageFigureAccess().getRule();
	}

	//ComplexFigure:
	//	{ComplexFigure} "Complex figure" "{" "class" implementationReference=STRING "}";
	public ComplexFigureElements getComplexFigureAccess() {
		return pComplexFigure;
	}
	
	public ParserRule getComplexFigureRule() {
		return getComplexFigureAccess().getRule();
	}

	//NodeLinkDef:
	//	"Node_link" name=ID "for" referenceClass=ClassReference "{" "label" label=ID "style" style=LineStyle "source"
	//	"decoration" sourceDecoration=LineDecoration "target" "decoration" targetDecoration=LineDecoration "source"
	//	"reference" "<-" sourceReference=ID "target" "reference" "<-" targetReference=ID "}";
	public NodeLinkDefElements getNodeLinkDefAccess() {
		return pNodeLinkDef;
	}
	
	public ParserRule getNodeLinkDefRule() {
		return getNodeLinkDefAccess().getRule();
	}

	//NodeLinkAlt:
	//	"Node_link" name=ID "extends" parent=[NodeLinkDef] "{" ("style" style=LineStyle)? ("source" "decoration"
	//	sourceDecoration=LineDecoration)? ("target" "decoration" targetDecoration=LineDecoration)? "}";
	public NodeLinkAltElements getNodeLinkAltAccess() {
		return pNodeLinkAlt;
	}
	
	public ParserRule getNodeLinkAltRule() {
		return getNodeLinkAltAccess().getRule();
	}

	//NodeLineDef:
	//	"Node_line" name=ID "for" referenceName=AttReference "{" "label" label=STRING "style" style=[LineStyle] "source"
	//	"decoration" sourceDecoration=LineDecoration "target" "decoration" targetDecoration=LineDecoration "}";
	public NodeLineDefElements getNodeLineDefAccess() {
		return pNodeLineDef;
	}
	
	public ParserRule getNodeLineDefRule() {
		return getNodeLineDefAccess().getRule();
	}

	//NodeLineAlt:
	//	"Node_line" name=ID "extends" parent=[NodeLineDef] "{" ("style" style=[LineStyle])? ("source" "decoration"
	//	sourceDecoration=LineDecoration)? ("target" "decoration" targetDecoration=LineDecoration)? "}";
	public NodeLineAltElements getNodeLineAltAccess() {
		return pNodeLineAlt;
	}
	
	public ParserRule getNodeLineAltRule() {
		return getNodeLineAltAccess().getRule();
	}

	//InterNodeDef:
	//	"Internal_node" name=ID "for" referenceName=AttReference "{" "layout" layout=Layout "}";
	public InterNodeDefElements getInterNodeDefAccess() {
		return pInterNodeDef;
	}
	
	public ParserRule getInterNodeDefRule() {
		return getInterNodeDefAccess().getRule();
	}

	//InterNodeAlt:
	//	"Internal_node" name=ID "extends" parent=[InterNodeDef] "{" "layout" layout=Layout "}";
	public InterNodeAltElements getInterNodeAltAccess() {
		return pInterNodeAlt;
	}
	
	public ParserRule getInterNodeAltRule() {
		return getInterNodeAltAccess().getRule();
	}

	//ExternalNodeDef:
	//	"External_node" name=ID "for" referenceName=AttReference "{" "size" size=Size "}";
	public ExternalNodeDefElements getExternalNodeDefAccess() {
		return pExternalNodeDef;
	}
	
	public ParserRule getExternalNodeDefRule() {
		return getExternalNodeDefAccess().getRule();
	}

	//ExternalNodeAlt:
	//	"External_node" name=ID "extends" parent=[ExternalNodeDef] "{" "size" size=Size "}";
	public ExternalNodeAltElements getExternalNodeAltAccess() {
		return pExternalNodeAlt;
	}
	
	public ParserRule getExternalNodeAltRule() {
		return getExternalNodeAltAccess().getRule();
	}

	///////////RulesDefinition/////////
	//RulesDefinition:
	//	{RulesDefinition} "Rules definition" "{" ruless+=Rule* "}";
	public RulesDefinitionElements getRulesDefinitionAccess() {
		return pRulesDefinition;
	}
	
	public ParserRule getRulesDefinitionRule() {
		return getRulesDefinitionAccess().getRule();
	}

	//Rule:
	//	RuleForType | RuleForReference;
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}

	//RuleForType:
	//	"Rules for" classReference=ClassReference "{" cases+=CaseType* "}";
	public RuleForTypeElements getRuleForTypeAccess() {
		return pRuleForType;
	}
	
	public ParserRule getRuleForTypeRule() {
		return getRuleForTypeAccess().getRule();
	}

	//RuleForReference:
	//	"Rules for" reference=AttReference "{" cases+=CaseReference* "}";
	public RuleForReferenceElements getRuleForReferenceAccess() {
		return pRuleForReference;
	}
	
	public ParserRule getRuleForReferenceRule() {
		return getRuleForReferenceAccess().getRule();
	}

	//CaseType:
	//	{CaseType} "case" condition=STRING "use" (nodeElement=[NodeAlt] | "default");
	public CaseTypeElements getCaseTypeAccess() {
		return pCaseType;
	}
	
	public ParserRule getCaseTypeRule() {
		return getCaseTypeAccess().getRule();
	}

	//CaseReference:
	//	{CaseReference} "case" condition=STRING "use" (referenceElement=[AttLinkAlt] | "default");
	public CaseReferenceElements getCaseReferenceAccess() {
		return pCaseReference;
	}
	
	public ParserRule getCaseReferenceRule() {
		return getCaseReferenceAccess().getRule();
	}

	///////////InteractionDefinition/////////
	//InteractionDefinition:
	//	{InteractionDefinition} "Interaction definition" "{" "Interaction elements" "{"
	//	interactionElements+=InteractionElement* "}" "Statements" "{" statements+=Statement* "}" "}";
	public InteractionDefinitionElements getInteractionDefinitionAccess() {
		return pInteractionDefinition;
	}
	
	public ParserRule getInteractionDefinitionRule() {
		return getInteractionDefinitionAccess().getRule();
	}

	//InteractionElement:
	//	Wizard | View;
	public InteractionElementElements getInteractionElementAccess() {
		return pInteractionElement;
	}
	
	public ParserRule getInteractionElementRule() {
		return getInteractionElementAccess().getRule();
	}

	//Wizard:
	//	ElementWizard | PersonalWizard;
	public WizardElements getWizardAccess() {
		return pWizard;
	}
	
	public ParserRule getWizardRule() {
		return getWizardAccess().getRule();
	}

	//ElementWizard:
	//	"Wizard" name=ID "for" "context" classReference=ClassReference "{" "title" title=STRING "description"
	//	description=STRING "type" type=WizardType "pages" "{" pages+=Page* "}" "default" "buttons" defaultButtons=EBoolean
	//	"}";
	public ElementWizardElements getElementWizardAccess() {
		return pElementWizard;
	}
	
	public ParserRule getElementWizardRule() {
		return getElementWizardAccess().getRule();
	}

	//enum WizardType:
	//	create | edit | info;
	public WizardTypeElements getWizardTypeAccess() {
		return unknownRuleWizardType;
	}
	
	public EnumRule getWizardTypeRule() {
		return getWizardTypeAccess().getRule();
	}

	//Page:
	//	{Page} "Page" "{" "title" title=STRING "description" description=STRING ("Attributes to show" "{" attributes+=AttMap*
	//	"}")? ("References to show" "{" references+=ID* "}")? ("Additionals buttons" "{" buttons+=Button* "}")? "}";
	public PageElements getPageAccess() {
		return pPage;
	}
	
	public ParserRule getPageRule() {
		return getPageAccess().getRule();
	}

	//AttMap:
	//	{AttMap} "(" attribute=STRING ", " label=STRING ", " component=ComponentType ", " defaultValue=STRING ")";
	public AttMapElements getAttMapAccess() {
		return pAttMap;
	}
	
	public ParserRule getAttMapRule() {
		return getAttMapAccess().getRule();
	}

	//enum ComponentType:
	//	textField | textArea | checkBox | comboBox | slider="Slider" | fileReference="File" | imageReference="Image";
	public ComponentTypeElements getComponentTypeAccess() {
		return unknownRuleComponentType;
	}
	
	public EnumRule getComponentTypeRule() {
		return getComponentTypeAccess().getRule();
	}

	//Button:
	//	{Button} "Button" "(" label=STRING ", " methodAction=STRING ")";
	public ButtonElements getButtonAccess() {
		return pButton;
	}
	
	public ParserRule getButtonRule() {
		return getButtonAccess().getRule();
	}

	//PersonalWizard:
	//	"Personal" "wizard" name=ID "{" "implementation reference" referenceImplementation=STRING "}";
	public PersonalWizardElements getPersonalWizardAccess() {
		return pPersonalWizard;
	}
	
	public ParserRule getPersonalWizardRule() {
		return getPersonalWizardAccess().getRule();
	}

	//View:
	//	PredefinedView | PersonalView;
	public ViewElements getViewAccess() {
		return pView;
	}
	
	public ParserRule getViewRule() {
		return getViewAccess().getRule();
	}

	//PredefinedView:
	//	"View" name=ID "{" "title" title=STRING "description" description=STRING "type" type=ViewType "style" style=ViewStyle
	//	("class" "data" "provider" referenceImplementation=STRING)? "}";
	public PredefinedViewElements getPredefinedViewAccess() {
		return pPredefinedView;
	}
	
	public ParserRule getPredefinedViewRule() {
		return getPredefinedViewAccess().getRule();
	}

	//ViewType:
	//	ShowChilds | ShowSelection | CountTypes;
	public ViewTypeElements getViewTypeAccess() {
		return pViewType;
	}
	
	public ParserRule getViewTypeRule() {
		return getViewTypeAccess().getRule();
	}

	//ShowChilds:
	//	{ShowChilds} "Show" "childs" "(" "parent element" classReference=ClassReference ")";
	public ShowChildsElements getShowChildsAccess() {
		return pShowChilds;
	}
	
	public ParserRule getShowChildsRule() {
		return getShowChildsAccess().getRule();
	}

	//ShowSelection:
	//	{ShowSelection} "Show" "selection" ("(" "filter type" classReference=ClassReference ")")?;
	public ShowSelectionElements getShowSelectionAccess() {
		return pShowSelection;
	}
	
	public ParserRule getShowSelectionRule() {
		return getShowSelectionAccess().getRule();
	}

	//CountTypes:
	//	{CountTypes} "Count" "types" "(" "type" classReference=ClassReference ")";
	public CountTypesElements getCountTypesAccess() {
		return pCountTypes;
	}
	
	public ParserRule getCountTypesRule() {
		return getCountTypesAccess().getRule();
	}

	//ViewStyle:
	//	tree="tree" | selection="selection" | table="table" resultGraphic="graphic";
	public ViewStyleElements getViewStyleAccess() {
		return pViewStyle;
	}
	
	public ParserRule getViewStyleRule() {
		return getViewStyleAccess().getRule();
	}

	//PersonalView:
	//	"Personal view" name=ID "{" "implementation reference" referenceImplementation=STRING "}";
	public PersonalViewElements getPersonalViewAccess() {
		return pPersonalView;
	}
	
	public ParserRule getPersonalViewRule() {
		return getPersonalViewAccess().getRule();
	}

	//Statement:
	//	"Actions for type" classReference=ID "{" events+=Event* "}";
	public StatementElements getStatementAccess() {
		return pStatement;
	}
	
	public ParserRule getStatementRule() {
		return getStatementAccess().getRule();
	}

	//Event:
	//	{Event} "on" eventType=EventType "do" "{" instructions+=Instruction* "}";
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}

	//EventType:
	//	MouseEvent | KeyEvent | ElementEvent | MenuEvent;
	public EventTypeElements getEventTypeAccess() {
		return pEventType;
	}
	
	public ParserRule getEventTypeRule() {
		return getEventTypeAccess().getRule();
	}

	//MouseEvent:
	//	mouseDown="mouse" "down" | mouseEnter="mouse" "enter" | mouseHorizontalWheel="mouse" "horizontal" "wheel" |
	//	mouseUp="mouse" "up" | mouseWheel="mouse" "wheel" | mouseVerticalWheel="mouse" "vertical" "wheel" | mouseHover="mouse"
	//	"hover" | mouseExit="mouse" "exit" | mouseDoubleClick="mouse" "double" "click";
	public MouseEventElements getMouseEventAccess() {
		return pMouseEvent;
	}
	
	public ParserRule getMouseEventRule() {
		return getMouseEventAccess().getRule();
	}

	//KeyEvent:
	//	keyPress="key" "press" | keyUp="key" "up" | keyDown="key" "down";
	public KeyEventElements getKeyEventAccess() {
		return pKeyEvent;
	}
	
	public ParserRule getKeyEventRule() {
		return getKeyEventAccess().getRule();
	}

	//ElementEvent:
	//	create="create" | delete="delete";
	public ElementEventElements getElementEventAccess() {
		return pElementEvent;
	}
	
	public ParserRule getElementEventRule() {
		return getElementEventAccess().getRule();
	}

	//MenuEvent:
	//	{MenuEvent} "Menu event" "(" name=STRING ")";
	public MenuEventElements getMenuEventAccess() {
		return pMenuEvent;
	}
	
	public ParserRule getMenuEventRule() {
		return getMenuEventAccess().getRule();
	}

	//Instruction:
	//	WizardStart | ViewDeploy | ClassExecution;
	public InstructionElements getInstructionAccess() {
		return pInstruction;
	}
	
	public ParserRule getInstructionRule() {
		return getInstructionAccess().getRule();
	}

	//WizardStart:
	//	"show" "wizard" wizard=[Wizard];
	public WizardStartElements getWizardStartAccess() {
		return pWizardStart;
	}
	
	public ParserRule getWizardStartRule() {
		return getWizardStartAccess().getRule();
	}

	//ViewDeploy:
	//	"show" "view" view=[View];
	public ViewDeployElements getViewDeployAccess() {
		return pViewDeploy;
	}
	
	public ParserRule getViewDeployRule() {
		return getViewDeployAccess().getRule();
	}

	//ClassExecution:
	//	"execute" inplementationReference=STRING;
	public ClassExecutionElements getClassExecutionAccess() {
		return pClassExecution;
	}
	
	public ParserRule getClassExecutionRule() {
		return getClassExecutionAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
